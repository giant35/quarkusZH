# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-07-10 05:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/sending-emails.adoc:6
#, no-wrap
msgid "Quarkus - Sending emails"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:11
msgid "This guide demonstrates how your Quarkus application can send emails using an SMTP server."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:12
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:15
msgid "To complete this guide, you need:"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:17
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:18
msgid "The SMTP hostname, port and credentials, and an email address"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:19
msgid "an IDE"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:20
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:21
msgid "Apache Maven 3.6.2+"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:22
msgid "GraalVM installed if you want to run in native mode."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:23
#, no-wrap
msgid "Architecture"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:27
msgid "In this guide, we are going to see how you can send emails from a Quarkus application.  It covers simple emails, attachments, inlined attachments, the reactive and imperative APIs..."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:28
#, no-wrap
msgid "Creating the Maven Project"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:31
msgid "Create a new project with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:38
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=sending-email-quickstart \\\n"
"    -Dextensions=\"mailer\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:41
msgid "If you already have an existing project, add the `mailer` extension:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:45
#, no-wrap
msgid "./mvnw quarkus:add-extensions -Dextensions=\"mailer\"\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:47
#, no-wrap
msgid "Configuring the mailer"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:51
msgid "The Quarkus mailer is using SMTP. In the `src/main/resources/application.properties` file, you need to configure the host, port, username, password as well as the other configuration aspect.  Note that the password can also be configured using system properties and environment variables."
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:53
msgid "Here is an example using _sendgrid_:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:62
#, no-wrap
msgid ""
"quarkus.mailer.from=test@quarkus.io\n"
"quarkus.mailer.host=smtp.sendgrid.net\n"
"quarkus.mailer.port=465\n"
"quarkus.mailer.ssl=true\n"
"quarkus.mailer.username=....\n"
"quarkus.mailer.password=....\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:66
msgid "For more information about the Mailer extension configuration please refer to the <<configuration-reference, Configuration Reference>>."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:67
#, no-wrap
msgid "Sending simple emails"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:70
msgid "In a JAX-RS resource, or in a bean, you can inject the mailer as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:75
#, no-wrap
msgid ""
"@Inject\n"
"Mailer mailer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:78
#, no-wrap
msgid ""
"@Inject\n"
"ReactiveMailer reactiveMailer;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:81
msgid "There are 2 APIs:"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:83
msgid "`io.quarkus.mailer.Mailer` provides the imperative (blocking and synchronous) API;"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:84
msgid "`io.quarkus.mailer.ReactiveMailer` provides the reactive (non-blocking and asynchronous) API"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:86
msgid "The two APIs are equivalent feature-wise. Actually the `Mailer` implementation is built on top of the `ReactiveMailer` implementation."
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:88
msgid "To send a simple email, proceed as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:95
#, no-wrap
msgid ""
"// Imperative API:\n"
"mailer.send(Mail.withText(\"to@acme.org\", \"A simple email from quarkus\", \"This is my body.\"));\n"
"// Reactive API:\n"
"CompletionStage<Void> stage = reactiveMailer.send(Mail.withText(\"to@acme.org\", \"A reactive email from quarkus\", \"This is my body.\"));\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:98
msgid "For example, you can use the `Mailer` in a JAX-RS endpoint as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:107
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/simple\")\n"
"public Response sendASimpleEmail() {\n"
"    mailer.send(Mail.withText(\"to@acme.org\", \"A simple email from quarkus\", \"This is my body\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:115
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/async\")\n"
"public CompletionStage<Response> sendASimpleEmailAsync() {\n"
"    return reactiveMailer.send(\n"
"            Mail.withText(\"to@acme.org\", \"A reactive email from quarkus\", \"This is my body\"))\n"
"            .thenApply(x -> Response.accepted().build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:118
msgid "With such a JAX-RS resource, you can check that everything is working with:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:123
#, no-wrap
msgid ""
"curl http://localhost:8080/simple\n"
"curl http://localhost:8080/async\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:128
msgid "You can create new `io.quarkus.mailer.Mail` instances from the constructor or from the `Mail.withText` and `Mail.withHtml` helper methods. The `Mail` instance lets you add recipients (to, cc, or bcc), set the subject, headers, sender (from) address..."
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:130
msgid "You can also send several `Mail` objects in one call:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:134
#, no-wrap
msgid "mailer.send(mail1, mail2, mail3);\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:136
#, no-wrap
msgid "Sending attachments"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:139
msgid "To send attachment, just use the `addAttachment` methods on the `io.quarkus.mailer.Mail` instance:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:151
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/attachment\")\n"
"public Response sendEmailWithAttachment() {\n"
"    mailer.send(Mail.withText(\"to@acme.org\", \"An email from quarkus with attachment\",\n"
"            \"This is my body\")\n"
"            .addAttachment(\"my-file.txt\",\n"
"                \"content of my file\".getBytes(), \"text/plain\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:154
msgid "Attachments can be created from raw bytes (as shown in the snippet) or files."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:155
#, no-wrap
msgid "Sending HTML emails with inlined attachments"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:159
msgid "When sending HTML email, you can add inlined attachments.  For example, you can send an image with your email, and this image will be displayed in the mail content. If you put the image file into resources folder, you should specify the full path to the file. \"e.g.\" \"META-INF/resources/quarkus-logo.png\" otherwise quarkus will lookup in the root folder of the project"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:174
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/html\")\n"
"public Response sendingHTML() {\n"
"    String body = \"<strong>Hello!</strong>\" + \"\\n\" +\n"
"        \"<p>Here is an image for you: <img src=\\\"cid:my-image@quarkus.io\\\"/></p>\" +\n"
"        \"<p>Regards</p>\";\n"
"    mailer.send(Mail.withHtml(\"to@acme.org\", \"An email in HTML\", body)\n"
"        .addInlineAttachment(\"quarkus-logo.png\",\n"
"            new File(\"quarkus-logo.png\"),\n"
"            \"image/png\", \"<my-image@quarkus.io>\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:180
msgid "Note the _content-id_ format and reference.  By spec, when you create the inline attachment, the content-id must be structured as follows: `<id@domain>`.  If you don't wrap your content-id between `<>`, it is automatically wrapped for you.  When you want to reference your attachment, for instance in the `src` attribute, use `cid:id@domain` (without the `<` and `>`)."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:181
#, no-wrap
msgid "Testing email sending"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:186
msgid "Because it is very inconvenient to send emails during development and testing, you can set the `quarkus.mailer.mock` boolean configuration to `true` to not actually send emails but print them on stdout and collect them in a `MockMailbox` bean instead.  This is the default if you are running Quarkus in `DEV` or `TEST` mode."
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:188
msgid "You can then write tests to verify that your emails were sent, for example, by a REST endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:193
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class MailTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:195
#, no-wrap
msgid "    private static final String TO = \"foo@quarkus.io\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:198
#, no-wrap
msgid ""
"    @Inject\n"
"    MockMailbox mailbox;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:203
#, no-wrap
msgid ""
"    @BeforeEach\n"
"    void init() {\n"
"        mailbox.clear();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:213
#, no-wrap
msgid ""
"    @Test\n"
"    void testTextMail() throws MessagingException, IOException {\n"
"        // call a REST endpoint that sends email\n"
"        given()\n"
"        .when()\n"
"        .get(\"/send-email\")\n"
"        .then()\n"
"           .statusCode(202)\n"
"           .body(is(\"OK\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:220
#, no-wrap
msgid ""
"        // verify that it was sent\n"
"        List<Mail> sent = mailbox.getMessagesSentTo(TO);\n"
"        assertThat(sent).hasSize(1);\n"
"        Mail actual = sent.get(0);\n"
"        assertThat(actual.getText()).contains(\"Wake up!\");\n"
"        assertThat(actual.getSubject()).isEqualTo(\"Alarm!\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:224
#, no-wrap
msgid ""
"        assertThat(mailbox.getTotalMessagesSent()).isEqualTo(6);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:226
#, no-wrap
msgid "Gmail specific configuration"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:229
msgid "If you want to use the Gmail SMTP server, first create a dedicated password in `Google Account > Security > App passwords` or go to https://myaccount.google.com/apppasswords."
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:231
msgid "When done, you can configure your Quarkus application by adding the following properties to your `application.properties`:"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:233
msgid "With TLS:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:242
#, no-wrap
msgid ""
"quarkus.mailer.from=YOUREMAIL@gmail.com\n"
"quarkus.mailer.host=smtp.gmail.com\n"
"quarkus.mailer.port=587\n"
"quarkus.mailer.start-tls=REQUIRED\n"
"quarkus.mailer.username=YOUREMAIL@gmail.com\n"
"quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:245
msgid "Or with SSL:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:254
#, no-wrap
msgid ""
"quarkus.mailer.from=YOUREMAIL@gmail.com\n"
"quarkus.mailer.host=smtp.gmail.com\n"
"quarkus.mailer.port=465\n"
"quarkus.mailer.ssl=true\n"
"quarkus.mailer.username=YOUREMAIL@gmail.com\n"
"quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:256
#, no-wrap
msgid "Using SSL with native executables"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:260
msgid "Note that if you enable SSL for the mailer and you want to build a native executable, you will need to enable the SSL support.  Please refer to the native-and-ssl-guide.html[Using SSL With Native Executables] guide for more information."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:261
#, no-wrap
msgid "Using the underlying Vert.x Mail Client"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:265
msgid "The Quarkus Mailer is implemented on top of the https://vertx.io/docs/vertx-mail-client/java/[Vert.x Mail Client], providing an asynchronous and non-blocking way to send emails.  If you need fine control on how the mail is sent, for instance if you need to retrieve the message ids, you can inject the underlying client, and use it directly:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/sending-emails.adoc:269
#, no-wrap
msgid "@Inject MailClient client;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:272
msgid "Three API flavors are exposed:"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:274
msgid "the Axle client (`io.vertx.axle.ext.mail.MailClient`), using `CompletionStage` and Reactive Streams `Publisher`"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:275
msgid "the RX Java 2 client (`io.vertx.reactivex.ext.mail.MailClient`)"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:276
msgid "the bare client (`io.vertx.ext.mail.MailClient`)"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:278
msgid "Check the link:using-vertx.html[Using Vert.x guide] for further details about these different APIs and how to select the most suitable for you."
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:281
msgid "The retrieved `MailClient` is configured using the configuration key presented above.  You can also create your own instance, and pass your own configuration."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:282
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_guides/sending-emails.adoc:286
msgid "This guide has shown how you can send emails from a Quarkus application.  The _mailer_ extension works in JVM and native mode."
msgstr ""

#. type: Title ==
#: upstream/_guides/sending-emails.adoc:289
#, no-wrap
msgid "Mailer Configuration Reference"
msgstr ""
