# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-02-03 00:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/deploying-to-kubernetes.adoc:6
#, no-wrap
msgid "Kubernetes extension"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:14
msgid "Quarkus offers the ability to automatically generate Kubernetes resources based on sane defaults and user-supplied configuration using https://github.com/dekorateio/dekorate/[dekorate].  It currently supports generating resources for vanilla <<#kubernetes,Kubernetes>>, <<#openshift,OpenShift>> and <<#knative,Knative>>.  Furthermore, Quarkus can deploy the application to a target Kubernetes cluster by applying the generated manifests to the target cluster's API Server.  Finally, when either one of container image extensions is present (see the xref:container-imag.adoc[container image guide] for more details), Quarkus has the ability to create a container image and push it to a registry *before* deploying the application to the target platform."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:20
msgid "Access to a Kubernetes cluster (Minikube is a viable option)"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:22
#: upstream/_guides/deploying-to-kubernetes.adoc:662
#, no-wrap
msgid "Kubernetes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:25
msgid "Let's create a new project that contains both the Kubernetes and Jib extensions:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:31
msgid "This added the following dependencies to the build file:"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:33
#: upstream/_guides/deploying-to-kubernetes.adoc:507
#: upstream/_guides/deploying-to-kubernetes.adoc:587
#: upstream/_guides/deploying-to-kubernetes.adoc:611
#: upstream/_guides/deploying-to-kubernetes.adoc:1300
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:47
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-container-image-jib</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:50
#: upstream/_guides/deploying-to-kubernetes.adoc:516
#: upstream/_guides/deploying-to-kubernetes.adoc:596
#: upstream/_guides/deploying-to-kubernetes.adoc:620
#: upstream/_guides/deploying-to-kubernetes.adoc:1319
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:55
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-resteasy\")\n"
"implementation(\"io.quarkus:quarkus-kubernetes\")\n"
"implementation(\"io.quarkus:quarkus-container-image-jib\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:59
msgid "By adding these dependencies, we enable the generation of Kubernetes manifests each time we perform a build while also enabling the build of a container image using Jib.  For example, following the execution of:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:64
msgid "you will notice amongst the other files that are created, two files named `kubernetes.json` and `kubernetes.yml` in the `target/kubernetes/` directory."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:66
msgid "If you look at either file you will see that it contains both a Kubernetes `Deployment` and a `Service`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:68
msgid "The full source of the `kubernetes.json` file looks something like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:147
#, no-wrap
msgid ""
"{\n"
"  {\n"
"    \"apiVersion\" : \"apps/v1\",\n"
"    \"kind\" : \"Deployment\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\",\n"
"      },\n"
"      \"name\" : \"test-quarkus-app\"\n"
"    },\n"
"    \"spec\" : {\n"
"      \"replicas\" : 1,\n"
"      \"selector\" : {\n"
"        \"matchLabels\" : {\n"
"          \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"          \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\",\n"
"        }\n"
"      },\n"
"      \"template\" : {\n"
"        \"metadata\" : {\n"
"          \"labels\" : {\n"
"            \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"            \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\"\n"
"          }\n"
"        },\n"
"        \"spec\" : {\n"
"          \"containers\" : [ {\n"
"            \"env\" : [ {\n"
"              \"name\" : \"KUBERNETES_NAMESPACE\",\n"
"              \"valueFrom\" : {\n"
"                \"fieldRef\" : {\n"
"                  \"fieldPath\" : \"metadata.namespace\"\n"
"                }\n"
"              }\n"
"            } ],\n"
"            \"image\" : \"yourDockerUsername/test-quarkus-app:1.0.0-SNAPSHOT\",\n"
"            \"imagePullPolicy\" : \"Always\",\n"
"            \"name\" : \"test-quarkus-app\"\n"
"          } ]\n"
"        }\n"
"      }\n"
"    }\n"
"  },\n"
"  {\n"
"  \"apiVersion\" : \"v1\",\n"
"  \"kind\" : \"Service\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\",\n"
"      },\n"
"      \"name\" : \"test-quarkus-app\"\n"
"    },\n"
"  \"spec\" : {\n"
"    \"ports\" : [ {\n"
"      \"name\" : \"http\",\n"
"      \"port\" : 8080,\n"
"      \"targetPort\" : 8080\n"
"    } ],\n"
"    \"selector\" : {\n"
"      \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"      \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\"\n"
"    },\n"
"    \"type\" : \"ClusterIP\"\n"
"  }\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:150
msgid "Beside generating a `Deployment` resource, you can also choose to get a `StatefulSet` instead via `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:154
#, no-wrap
msgid "quarkus.kubernetes.deployment-kind=StatefulSet\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:157
msgid "The generated manifest can be applied to the cluster from the project root using `kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:161
#, no-wrap
msgid "kubectl apply -f target/kubernetes/kubernetes.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:165
msgid "An important thing to note about the `Deployment` (or `StatefulSet`) is that is uses `yourDockerUsername/test-quarkus-app:1.0.0-SNAPSHOT` as the container image of the `Pod`.  The name of the image is controlled by the Jib extension and can be customized using the usual `application.properties`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:167
msgid "For example with a configuration like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:173
#, no-wrap
msgid ""
"quarkus.container-image.group=quarkus #optional, default to the system user name\n"
"quarkus.container-image.name=demo-app #optional, defaults to the application name\n"
"quarkus.container-image.tag=1.0       #optional, defaults to the application version\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:176
msgid "The image that will be used in the generated manifests will be `quarkus/demo-app:1.0`"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:177
#, no-wrap
msgid "Namespace"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:180
msgid "By default Quarkus omits the namespace in the generated manifests, rather than enforce the `default` namespace. That means that you can apply the manifest to your chosen namespace when using `kubctl`, which in the example below is `test`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:184
#, no-wrap
msgid "kubectl apply -f target/kubernetes/kubernetes.json -n=test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:187
msgid "To specify the namespace in your manifest customize with the following property in your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:191
#, no-wrap
msgid "quarkus.kubernetes.namespace=mynamespace \n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:193
#, no-wrap
msgid "Defining a Docker registry"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:196
msgid "The Docker registry can be specified with the following property:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:200
#, no-wrap
msgid "quarkus.container-image.registry=my.docker-registry.net\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:204
msgid "By adding this property along with the rest of the container image properties of the previous section, the generated manifests will use the image `my.docker-registry.net/quarkus/demo-app:1.0`.  The image is not the only thing that can be customized in the generated manifests, as will become evident in the following sections."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:205
#, no-wrap
msgid "Labels and Annotations"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:207
#, no-wrap
msgid "Labels"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:212
msgid "The generated manifests use the Kubernetes link:https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels[recommended labels].  These labels can be customized using `quarkus.kubernetes.name`, `quarkus.kubernetes.version` and `quarkus.kubernetes.part-of`.  For example by adding the following configuration to your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:218
#, no-wrap
msgid ""
"quarkus.kubernetes.part-of=todo-app\n"
"quarkus.kubernetes.name=todo-rest\n"
"quarkus.kubernetes.version=1.0-rc.1\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:224
msgid "As is described in detail in the <<#openshift, OpenShift>> section, customizing OpenShift (or Knative) properties is done in the same way, but replacing `kubernetes` with `openshift` (or `knative`). The previous example for OpenShift would look like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:230
#, no-wrap
msgid ""
"quarkus.openshift.part-of=todo-app\n"
"quarkus.openshift.name=todo-rest\n"
"quarkus.openshift.version=1.0-rc.1\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:234
msgid "The labels in generated resources will look like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:242
#, no-wrap
msgid ""
"  \"labels\" : {\n"
"    \"app.kubernetes.io/part-of\" : \"todo-app\",\n"
"    \"app.kubernetes.io/name\" : \"todo-rest\",\n"
"    \"app.kubernetes.io/version\" : \"1.0-rc.1\"\n"
"  }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:244
#, no-wrap
msgid "Custom Labels"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:247
msgid "To add additional custom labels, for example `foo=bar` just apply the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:251
#, no-wrap
msgid "quarkus.kubernetes.labels.foo=bar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:254
msgid "When using the `quarkus-container-image-jib` extension to build a container image, then any label added via the aforementioned property will also be added to the generated container image."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:255
#, no-wrap
msgid "Annotations"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:258
msgid "Out of the box, the generated resources will be annotated with version control related information that can be used either by tooling, or by the user for troubleshooting purposes."
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:265
#, no-wrap
msgid ""
"  \"annotations\": {\n"
"    \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"    \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"   }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:267
#, no-wrap
msgid "Custom Annotations"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:270
msgid "Custom annotations can be added in a way similar to labels.For example to add the annotation `foo=bar` and `app.quarkus/id=42` just apply the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:275
#, no-wrap
msgid ""
"quarkus.kubernetes.annotations.foo=bar\n"
"quarkus.kubernetes.annotations.\"app.quarkus/id\"=42\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:278
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:281
msgid "Kubernetes provides multiple ways of defining environment variables:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:283
msgid "key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:284
msgid "import all values from a Secret or ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:285
msgid "interpolate a single value identified by a given field in a Secret or ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:286
msgid "interpolate a value from a field within the same resource"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:287
#, no-wrap
msgid "Environment variables from key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:290
msgid "To add a key/value pair as an environment variable in the generated resources:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:294
#, no-wrap
msgid "quarkus.kubernetes.env.vars.my-env-var=foobar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:298
msgid "The command above will add `MY_ENV_VAR=foobar` as an environment variable.  Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`."
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:300
#, no-wrap
msgid "Environment variables from Secret"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:304
msgid "To add all key/value pairs of `Secret` as environment variables just apply the following configuration, separating each `Secret` to be used as source by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:308
#, no-wrap
msgid "quarkus.kubernetes.env.secrets=my-secret,my-other-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:311
#: upstream/_guides/deploying-to-kubernetes.adoc:355
msgid "which would generate the following in the container definition:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:321
#, no-wrap
msgid ""
"envFrom:\n"
"  - secretRef:\n"
"      name: my-secret\n"
"      optional: false\n"
"  - secretRef:\n"
"      name: my-other-secret\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:324
msgid "The following extracts a value identified by the `keyName` field from the `my-secret` Secret into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:329
#, no-wrap
msgid ""
"quarkus.kubernetes.env.mapping.foo.from-secret=my-secret\n"
"quarkus.kubernetes.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:332
#: upstream/_guides/deploying-to-kubernetes.adoc:377
msgid "This would generate the following in the `env` section of your container:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:342
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      secretKeyRef:\n"
"        key: keyName\n"
"        name: my-secret\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:344
#, no-wrap
msgid "Environment variables from ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:348
msgid "To add all key/value pairs from `ConfigMap` as environment variables just apply the following configuration, separating each `ConfigMap` to be used as source by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:352
#, no-wrap
msgid "quarkus.kubernetes.env.configmaps=my-config-map,another-config-map\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:365
#, no-wrap
msgid ""
"envFrom:\n"
"  - configMapRef:\n"
"      name: my-config-map\n"
"      optional: false\n"
"  - configMapRef:\n"
"      name: another-config-map\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:369
msgid "The following extracts a value identified by the `keyName` field from the `my-config-map` ConfigMap into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:374
#, no-wrap
msgid ""
"quarkus.kubernetes.env.mapping.foo.from-configmap=my-configmap\n"
"quarkus.kubernetes.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:387
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      configMapRefKey:\n"
"        key: keyName\n"
"        name: my-configmap\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:389
#, no-wrap
msgid "Environment variables from fields"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:392
msgid "It's also possible to use the value from another field to add a new environment variable by specifying the path of the field to be used as a source, as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:396
#, no-wrap
msgid "quarkus.kubernetes.env.fields.foo=metadata.name\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:402
msgid "As is described in detail in the <<#openshift, OpenShift>> section, customizing OpenShift properties is done in the same way, but replacing `kubernetes` with `openshift`. The previous example for OpenShift would look like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:406
#, no-wrap
msgid "quarkus.openshift.env.fields.foo=metadata.name\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:409
#, no-wrap
msgid "Validation"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:412
msgid "A conflict between two definitions, e.g. mistakenly assigning both a value and specifying that a variable is derived from a field, will result in an error being thrown at build time so that you get the opportunity to fix the issue before you deploy your application to your cluster where it might be more difficult to diagnose the source of the issue."
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:414
msgid "Similarly, two redundant definitions, e.g. defining an injection from the same secret twice, will not cause an issue but will indeed report a warning to let you know that you might not have intended to duplicate that definition."
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:416
#, no-wrap
msgid "Backwards compatibility"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:419
msgid "Previous versions of the Kubernetes extension supported a different syntax to add environment variables.The older syntax is still supported but is deprecated and it's advised that you migrate to the new syntax."
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:420
#, no-wrap
msgid "Old vs. new syntax"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:422
#, no-wrap
msgid "Old"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:422
#, no-wrap
msgid "New"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:423
#, no-wrap
msgid "Plain variable"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:423
#, no-wrap
msgid "`quarkus.kubernetes.env-vars.my-env-var.value=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:423
#, no-wrap
msgid "`quarkus.kubernetes.env.vars.my-env-var=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:424
#, no-wrap
msgid "From field"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:424
#, no-wrap
msgid "`quarkus.kubernetes.env-vars.my-env-var.field=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:424
#, no-wrap
msgid "`quarkus.kubernetes.env.fields.my-env-var=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:425
#, no-wrap
msgid "All from `ConfigMap`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:425
#, no-wrap
msgid "`quarkus.kubernetes.env-vars.xxx.configmap=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:425
#, no-wrap
msgid "`quarkus.kubernetes.env.configmaps=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:426
#, no-wrap
msgid "All from `Secret`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:426
#, no-wrap
msgid "`quarkus.kubernetes.env-vars.xxx.secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:426
#, no-wrap
msgid "`quarkus.kubernetes.env.secrets=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:427
#, no-wrap
msgid "From one `Secret` field"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:427
#, no-wrap
msgid "`quarkus.kubernetes.env-vars.foo.secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:427
#, no-wrap
msgid "`quarkus.kubernetes.env.mapping.foo.from-secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:428
#: upstream/_guides/deploying-to-kubernetes.adoc:430
#, no-wrap
msgid "`quarkus.kubernetes.env-vars.foo.value=field`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:428
#: upstream/_guides/deploying-to-kubernetes.adoc:430
#, no-wrap
msgid "`quarkus.kubernetes.env.mapping.foo.with-key=field`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:429
#, no-wrap
msgid "From one `ConfigMap` field"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:429
#, no-wrap
msgid "`quarkus.kubernetes.env-vars.foo.configmap=foobar`"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:429
#, no-wrap
msgid "`quarkus.kubernetes.env.mapping.foo.from-configmap=foobar`"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:437
msgid "If you redefine the same variable using the new syntax while keeping the old syntax, **ONLY** the new version will be kept and a warning will be issued to alert you of the problem.For example, if you define both `quarkus.kubernetes.env-vars.my-env-var.value=foobar` and `quarkus.kubernetes.env.vars.my-env-var=newValue`, the extension will only generate an environment variable `MY_ENV_VAR=newValue` and issue a warning."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:438
#, no-wrap
msgid "Mounting volumes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:442
msgid "The Kubernetes extension allows the user to configure both volumes and mounts for the application.  Any volume can be mounted with a simple configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:446
#, no-wrap
msgid "quarkus.kubernetes.mounts.my-volume.path=/where/to/mount\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:450
msgid "This will add a mount to the pod for volume `my-volume` to path `/where/to/mount`.  The volumes themselves can be configured as shown in the sections below."
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:451
#, no-wrap
msgid "Secret volumes"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:456
#, no-wrap
msgid "quarkus.kubernetes.secret-volumes.my-volume.secret-name=my-secret\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:458
#, no-wrap
msgid "ConfigMap volumes"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:463
#, no-wrap
msgid "quarkus.kubernetes.config-map-volumes.my-volume.config-map-name=my-secret\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:465
#, no-wrap
msgid "Passing application configuration"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:469
msgid "Quarkus supports passing configuration from external locations (via Smallrye Config). This usually requires setting an additional environment variable or system propertiy.  When you need to use a secret or a config map for the purpose of application configuration, you need to:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:471
msgid "define a volume"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:472
msgid "mount the volume"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:473
msgid "create an environment variable for `SMALLRYE_CONFIG_LOCATIONS`"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:475
msgid "To simplify things, quarkus provides single step alternative:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:479
#, no-wrap
msgid "quarkus.kubernetes.app-secret=<name of the secret containing the configuration>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:482
msgid "or"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:486
#, no-wrap
msgid "quarkus.kubernetes.app-config-map=<name of the config map containing the configuration>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:490
msgid "When these properties are used, the generated manifests will contain everything required.  The application config volumes will be created using path: `/mnt/app-secret` and `/mnt/app-config-map` for secrets and configmaps respectively."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:492
msgid "Note: Users may use both properties at the same time."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:493
#, no-wrap
msgid "Changing the number of replicas:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:496
msgid "To change the number of replicas from 1 to 3:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:500
#, no-wrap
msgid "quarkus.kubernetes.replicas=3\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:502
#, no-wrap
msgid "Add readiness and liveness probes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:505
msgid "By default, the Kubernetes resources do not contain readiness and liveness probes in the generated `Deployment`. Adding them however is just a matter of adding the SmallRye Health extension like so:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:513
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-health</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:519
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-health\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:523
msgid "The values of the generated probes will be determined by the configured health properties: `quarkus.smallrye-health.root-path`, `quarkus.smallrye-health.liveness-path` and `quarkus.smallrye-health.readiness-path`.  More information about the health extension can be found in the relevant xref:microprofile-health.adoc[guide]."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:524
#, no-wrap
msgid "Customizing the readiness probe:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:526
msgid "To set the initial delay of the probe to 20 seconds and the period to 45:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:531
#: upstream/_guides/deploying-to-kubernetes.adoc:714
#, no-wrap
msgid ""
"quarkus.kubernetes.readiness-probe.initial-delay=20s\n"
"quarkus.kubernetes.readiness-probe.period=45s\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:533
#, no-wrap
msgid "Add hostAliases"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:535
msgid "To add entries to a Pod's `/etc/hosts` file (more information can be found in https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/[Kubernetes documentation]), just apply the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:539
#, no-wrap
msgid "quarkus.kubernetes.hostaliases.\"10.0.0.0\".hostnames=foo.com,bar.org\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:542
msgid "This would generate the following `hostAliases` section in the `deployment` definition:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:554
#, no-wrap
msgid ""
"kind: Deployment\n"
"spec:\n"
"  template:\n"
"    spec:\n"
"      hostAliases:\n"
"      - hostnames:\n"
"        - foo.com\n"
"        - bar.org\n"
"        ip: 10.0.0.0\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:556
#, no-wrap
msgid "Container Resources Management"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:559
msgid "CPU & Memory limits and requests can be applied to a `Container` (more info in https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/[Kubernetes documentation]) using the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:566
#, no-wrap
msgid ""
"quarkus.kubernetes.resources.requests.memory=64Mi\n"
"quarkus.kubernetes.resources.requests.cpu=250m\n"
"quarkus.kubernetes.resources.limits.memory=512Mi\n"
"quarkus.kubernetes.resources.limits.cpu=1000m\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:569
msgid "This would generate the following entry in the `container` section:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:580
#, no-wrap
msgid ""
"containers:\n"
"  resources:\n"
"    limits:\n"
"      cpu: 1000m\n"
"      memory: 512Mi\n"
"    requests:\n"
"      cpu: 250m\n"
"      memory: 64Mi\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:582
#, no-wrap
msgid "Using the Kubernetes client"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:585
msgid "Applications that are deployed to Kubernetes and need to access the API server will usually make use of the `kubernetes-client` extension:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:593
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:599
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-kubernetes-client\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:604
msgid "To access the API server from within a Kubernetes cluster, some RBAC related resources are required (e.g. a ServiceAccount, a RoleBinding etc.).  So, when the `kubernetes-client` extension is present, the `kubernetes` extension is going to create those resources automatically, so that application will be granted the `view` role.  If more roles are required, they will have to be added manually."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:605
#, no-wrap
msgid "Deploying to Minikube"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:609
msgid "https://github.com/kubernetes/minikube[Minikube] is quite popular when a Kubernetes cluster is needed for development purposes. To make the deployment to Minikube experience as frictionless as possible, Quarkus provides the `quarkus-minikube` extension. This extension can be added to a project like so:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:617
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-minikube</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:623
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-minikube\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:627
msgid "The purpose of this extension is to generate Kubernetes manifests (`minikube.yaml` and `minikube.json`) that are tailored to Minikube.  This extension assumes a couple things:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:630
msgid "Users won't be using an image registry and will instead make their container image accessible to the Kubernetes cluster by building it directly into Minikube's Docker daemon. To use Minikube's Docker daemon you must first execute:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:634
#, no-wrap
msgid "eval $(minikube -p minikube docker-env)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:638
msgid "Applications deployed to Kubernetes won't be accessed via a Kubernetes `Ingress`, but rather as a `NodePort` `Service`.  The advantage of doing this is that the URL of an application can be retrieved trivially by executing:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:642
#, no-wrap
msgid "minikube service list\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:646
msgid "To control the https://kubernetes.io/docs/concepts/services-networking/service/#nodeport[nodePort] that is used in this case, users can set `quarkus.kubernetes.node-port`.  Note however that this configuration is entirely optional because Quarkus will automatically use a proper (and non-changing) value if none is set."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:649
msgid "It is highly discouraged to use the manifests generated by the Minikube extension when deploying to production as these manifests are intended for development purposes only. When deploying to production, consider using the vanilla Kubernetes manifests (or the OpenShift ones when targeting OpenShift)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:652
msgid "If the assumptions the Minikube extension makes don't fit your workflow, nothing prevents you from using the regular Kubernetes extension to generate Kubernetes manifests and apply those to your Minikube cluster."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:653
#, no-wrap
msgid "Tuning the generated resources using application.properties"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:657
msgid "The Kubernetes extension allows tuning the generated manifest, using the `application.properties` file.  Here are some examples:"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:658
#, no-wrap
msgid "Configuration options"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:661
msgid "The table below describe all the available configuration options."
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:664
#: upstream/_guides/deploying-to-kubernetes.adoc:741
#: upstream/_guides/deploying-to-kubernetes.adoc:750
#: upstream/_guides/deploying-to-kubernetes.adoc:761
#: upstream/_guides/deploying-to-kubernetes.adoc:770
#: upstream/_guides/deploying-to-kubernetes.adoc:785
#: upstream/_guides/deploying-to-kubernetes.adoc:793
#: upstream/_guides/deploying-to-kubernetes.adoc:801
#: upstream/_guides/deploying-to-kubernetes.adoc:809
#: upstream/_guides/deploying-to-kubernetes.adoc:818
#: upstream/_guides/deploying-to-kubernetes.adoc:829
#: upstream/_guides/deploying-to-kubernetes.adoc:838
#: upstream/_guides/deploying-to-kubernetes.adoc:846
#: upstream/_guides/deploying-to-kubernetes.adoc:853
#: upstream/_guides/deploying-to-kubernetes.adoc:952
#: upstream/_guides/deploying-to-kubernetes.adoc:1052
#: upstream/_guides/deploying-to-kubernetes.adoc:1089
#, no-wrap
msgid "Property"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:664
#: upstream/_guides/deploying-to-kubernetes.adoc:741
#: upstream/_guides/deploying-to-kubernetes.adoc:750
#: upstream/_guides/deploying-to-kubernetes.adoc:761
#: upstream/_guides/deploying-to-kubernetes.adoc:770
#: upstream/_guides/deploying-to-kubernetes.adoc:785
#: upstream/_guides/deploying-to-kubernetes.adoc:793
#: upstream/_guides/deploying-to-kubernetes.adoc:801
#: upstream/_guides/deploying-to-kubernetes.adoc:809
#: upstream/_guides/deploying-to-kubernetes.adoc:818
#: upstream/_guides/deploying-to-kubernetes.adoc:829
#: upstream/_guides/deploying-to-kubernetes.adoc:838
#: upstream/_guides/deploying-to-kubernetes.adoc:846
#: upstream/_guides/deploying-to-kubernetes.adoc:853
#: upstream/_guides/deploying-to-kubernetes.adoc:952
#: upstream/_guides/deploying-to-kubernetes.adoc:1052
#: upstream/_guides/deploying-to-kubernetes.adoc:1089
#, no-wrap
msgid "Type"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:664
#: upstream/_guides/deploying-to-kubernetes.adoc:741
#: upstream/_guides/deploying-to-kubernetes.adoc:750
#: upstream/_guides/deploying-to-kubernetes.adoc:761
#: upstream/_guides/deploying-to-kubernetes.adoc:770
#: upstream/_guides/deploying-to-kubernetes.adoc:785
#: upstream/_guides/deploying-to-kubernetes.adoc:793
#: upstream/_guides/deploying-to-kubernetes.adoc:801
#: upstream/_guides/deploying-to-kubernetes.adoc:809
#: upstream/_guides/deploying-to-kubernetes.adoc:818
#: upstream/_guides/deploying-to-kubernetes.adoc:829
#: upstream/_guides/deploying-to-kubernetes.adoc:838
#: upstream/_guides/deploying-to-kubernetes.adoc:846
#: upstream/_guides/deploying-to-kubernetes.adoc:853
#: upstream/_guides/deploying-to-kubernetes.adoc:952
#: upstream/_guides/deploying-to-kubernetes.adoc:1052
#: upstream/_guides/deploying-to-kubernetes.adoc:1089
#, no-wrap
msgid "Description"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:665
#: upstream/_guides/deploying-to-kubernetes.adoc:742
#: upstream/_guides/deploying-to-kubernetes.adoc:751
#: upstream/_guides/deploying-to-kubernetes.adoc:762
#: upstream/_guides/deploying-to-kubernetes.adoc:771
#: upstream/_guides/deploying-to-kubernetes.adoc:786
#: upstream/_guides/deploying-to-kubernetes.adoc:794
#: upstream/_guides/deploying-to-kubernetes.adoc:802
#: upstream/_guides/deploying-to-kubernetes.adoc:810
#: upstream/_guides/deploying-to-kubernetes.adoc:819
#: upstream/_guides/deploying-to-kubernetes.adoc:830
#: upstream/_guides/deploying-to-kubernetes.adoc:839
#: upstream/_guides/deploying-to-kubernetes.adoc:847
#: upstream/_guides/deploying-to-kubernetes.adoc:854
#: upstream/_guides/deploying-to-kubernetes.adoc:953
#: upstream/_guides/deploying-to-kubernetes.adoc:1053
#: upstream/_guides/deploying-to-kubernetes.adoc:1090
#, no-wrap
msgid "Default Value"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:665
#, no-wrap
msgid "quarkus.kubernetes.name"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:665
#: upstream/_guides/deploying-to-kubernetes.adoc:666
#: upstream/_guides/deploying-to-kubernetes.adoc:667
#: upstream/_guides/deploying-to-kubernetes.adoc:668
#: upstream/_guides/deploying-to-kubernetes.adoc:670
#: upstream/_guides/deploying-to-kubernetes.adoc:673
#: upstream/_guides/deploying-to-kubernetes.adoc:674
#: upstream/_guides/deploying-to-kubernetes.adoc:676
#: upstream/_guides/deploying-to-kubernetes.adoc:680
#: upstream/_guides/deploying-to-kubernetes.adoc:697
#: upstream/_guides/deploying-to-kubernetes.adoc:701
#: upstream/_guides/deploying-to-kubernetes.adoc:702
#: upstream/_guides/deploying-to-kubernetes.adoc:703
#: upstream/_guides/deploying-to-kubernetes.adoc:704
#: upstream/_guides/deploying-to-kubernetes.adoc:742
#: upstream/_guides/deploying-to-kubernetes.adoc:743
#: upstream/_guides/deploying-to-kubernetes.adoc:744
#: upstream/_guides/deploying-to-kubernetes.adoc:745
#: upstream/_guides/deploying-to-kubernetes.adoc:751
#: upstream/_guides/deploying-to-kubernetes.adoc:752
#: upstream/_guides/deploying-to-kubernetes.adoc:753
#: upstream/_guides/deploying-to-kubernetes.adoc:764
#: upstream/_guides/deploying-to-kubernetes.adoc:771
#: upstream/_guides/deploying-to-kubernetes.adoc:773
#: upstream/_guides/deploying-to-kubernetes.adoc:794
#: upstream/_guides/deploying-to-kubernetes.adoc:795
#: upstream/_guides/deploying-to-kubernetes.adoc:802
#: upstream/_guides/deploying-to-kubernetes.adoc:810
#: upstream/_guides/deploying-to-kubernetes.adoc:819
#: upstream/_guides/deploying-to-kubernetes.adoc:820
#: upstream/_guides/deploying-to-kubernetes.adoc:821
#: upstream/_guides/deploying-to-kubernetes.adoc:822
#: upstream/_guides/deploying-to-kubernetes.adoc:823
#: upstream/_guides/deploying-to-kubernetes.adoc:830
#: upstream/_guides/deploying-to-kubernetes.adoc:832
#: upstream/_guides/deploying-to-kubernetes.adoc:839
#: upstream/_guides/deploying-to-kubernetes.adoc:840
#: upstream/_guides/deploying-to-kubernetes.adoc:841
#: upstream/_guides/deploying-to-kubernetes.adoc:847
#: upstream/_guides/deploying-to-kubernetes.adoc:854
#: upstream/_guides/deploying-to-kubernetes.adoc:855
#: upstream/_guides/deploying-to-kubernetes.adoc:953
#: upstream/_guides/deploying-to-kubernetes.adoc:954
#: upstream/_guides/deploying-to-kubernetes.adoc:955
#: upstream/_guides/deploying-to-kubernetes.adoc:956
#: upstream/_guides/deploying-to-kubernetes.adoc:960
#: upstream/_guides/deploying-to-kubernetes.adoc:961
#: upstream/_guides/deploying-to-kubernetes.adoc:963
#: upstream/_guides/deploying-to-kubernetes.adoc:967
#: upstream/_guides/deploying-to-kubernetes.adoc:984
#: upstream/_guides/deploying-to-kubernetes.adoc:1053
#: upstream/_guides/deploying-to-kubernetes.adoc:1054
#: upstream/_guides/deploying-to-kubernetes.adoc:1055
#: upstream/_guides/deploying-to-kubernetes.adoc:1059
#: upstream/_guides/deploying-to-kubernetes.adoc:1060
#: upstream/_guides/deploying-to-kubernetes.adoc:1062
#: upstream/_guides/deploying-to-kubernetes.adoc:1066
#: upstream/_guides/deploying-to-kubernetes.adoc:1067
#: upstream/_guides/deploying-to-kubernetes.adoc:1083
#: upstream/_guides/deploying-to-kubernetes.adoc:1090
#: upstream/_guides/deploying-to-kubernetes.adoc:1091
#, no-wrap
msgid "String"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:666
#: upstream/_guides/deploying-to-kubernetes.adoc:954
#: upstream/_guides/deploying-to-kubernetes.adoc:1054
#, no-wrap
msgid "${quarkus.container-image.name}"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:666
#, no-wrap
msgid "quarkus.kubernetes.version"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:667
#: upstream/_guides/deploying-to-kubernetes.adoc:955
#: upstream/_guides/deploying-to-kubernetes.adoc:1055
#, no-wrap
msgid "${quarkus.container-image.tag}"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:667
#, no-wrap
msgid "quarkus.kubernetes.deployment-kind"
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:668
#: upstream/_guides/deploying-to-kubernetes.adoc:1156
#, no-wrap
msgid "Deployment"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:668
#, no-wrap
msgid "quarkus.kubernetes.part-of"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:669
#, no-wrap
msgid "quarkus.kubernetes.init-containers"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:669
#: upstream/_guides/deploying-to-kubernetes.adoc:695
#: upstream/_guides/deploying-to-kubernetes.adoc:957
#: upstream/_guides/deploying-to-kubernetes.adoc:982
#: upstream/_guides/deploying-to-kubernetes.adoc:1056
#: upstream/_guides/deploying-to-kubernetes.adoc:1082
#, no-wrap
msgid "Map<String, Container>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:670
#, no-wrap
msgid "quarkus.kubernetes.namespace"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:671
#, no-wrap
msgid "quarkus.kubernetes.labels"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:671
#: upstream/_guides/deploying-to-kubernetes.adoc:672
#: upstream/_guides/deploying-to-kubernetes.adoc:958
#: upstream/_guides/deploying-to-kubernetes.adoc:959
#: upstream/_guides/deploying-to-kubernetes.adoc:1057
#: upstream/_guides/deploying-to-kubernetes.adoc:1058
#, no-wrap
msgid "Map"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:672
#, no-wrap
msgid "quarkus.kubernetes.annotations"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:673
#, no-wrap
msgid "quarkus.kubernetes.app-secret"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:674
#, no-wrap
msgid "quarkus.kubernetes.app-config-map"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:675
#, no-wrap
msgid "quarkus.kubernetes.env-vars"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:675
#: upstream/_guides/deploying-to-kubernetes.adoc:962
#: upstream/_guides/deploying-to-kubernetes.adoc:1061
#, no-wrap
msgid "Map<String, Env>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:676
#, no-wrap
msgid "quarkus.kubernetes.working-dir"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:677
#, no-wrap
msgid "quarkus.kubernetes.command"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:677
#: upstream/_guides/deploying-to-kubernetes.adoc:678
#: upstream/_guides/deploying-to-kubernetes.adoc:692
#: upstream/_guides/deploying-to-kubernetes.adoc:774
#: upstream/_guides/deploying-to-kubernetes.adoc:775
#: upstream/_guides/deploying-to-kubernetes.adoc:786
#: upstream/_guides/deploying-to-kubernetes.adoc:964
#: upstream/_guides/deploying-to-kubernetes.adoc:965
#: upstream/_guides/deploying-to-kubernetes.adoc:979
#: upstream/_guides/deploying-to-kubernetes.adoc:1063
#: upstream/_guides/deploying-to-kubernetes.adoc:1064
#: upstream/_guides/deploying-to-kubernetes.adoc:1079
#, no-wrap
msgid "String[]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:678
#, no-wrap
msgid "quarkus.kubernetes.arguments"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:679
#, no-wrap
msgid "quarkus.kubernetes.replicas"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:679
#: upstream/_guides/deploying-to-kubernetes.adoc:762
#: upstream/_guides/deploying-to-kubernetes.adoc:763
#: upstream/_guides/deploying-to-kubernetes.adoc:803
#: upstream/_guides/deploying-to-kubernetes.adoc:811
#: upstream/_guides/deploying-to-kubernetes.adoc:831
#: upstream/_guides/deploying-to-kubernetes.adoc:966
#: upstream/_guides/deploying-to-kubernetes.adoc:1065
#, no-wrap
msgid "int"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:680
#: upstream/_guides/deploying-to-kubernetes.adoc:967
#: upstream/_guides/deploying-to-kubernetes.adoc:1066
#, no-wrap
msgid "1"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:680
#, no-wrap
msgid "quarkus.kubernetes.service-account"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:681
#, no-wrap
msgid "quarkus.kubernetes.ports"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:681
#: upstream/_guides/deploying-to-kubernetes.adoc:968
#: upstream/_guides/deploying-to-kubernetes.adoc:1068
#, no-wrap
msgid "Map<String, Port>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:682
#, no-wrap
msgid "quarkus.kubernetes.service-type"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:682
#: upstream/_guides/deploying-to-kubernetes.adoc:736
#: upstream/_guides/deploying-to-kubernetes.adoc:969
#: upstream/_guides/deploying-to-kubernetes.adoc:1069
#, no-wrap
msgid "ServiceType"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:683
#: upstream/_guides/deploying-to-kubernetes.adoc:970
#: upstream/_guides/deploying-to-kubernetes.adoc:1070
#, no-wrap
msgid "ClusterIP"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:683
#, no-wrap
msgid "quarkus.kubernetes.pvc-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:683
#: upstream/_guides/deploying-to-kubernetes.adoc:970
#: upstream/_guides/deploying-to-kubernetes.adoc:1070
#, no-wrap
msgid "Map<String, PersistentVolumeClaimVolume>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:684
#, no-wrap
msgid "quarkus.kubernetes.secret-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:684
#: upstream/_guides/deploying-to-kubernetes.adoc:971
#: upstream/_guides/deploying-to-kubernetes.adoc:1071
#, no-wrap
msgid "Map<String, SecretVolume>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:685
#, no-wrap
msgid "quarkus.kubernetes.config-map-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:685
#: upstream/_guides/deploying-to-kubernetes.adoc:972
#: upstream/_guides/deploying-to-kubernetes.adoc:1072
#, no-wrap
msgid "Map<String, ConfigMapVolume>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:686
#, no-wrap
msgid "quarkus.kubernetes.git-repo-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:686
#: upstream/_guides/deploying-to-kubernetes.adoc:973
#: upstream/_guides/deploying-to-kubernetes.adoc:1073
#, no-wrap
msgid "Map<String, GitRepoVolume>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:687
#, no-wrap
msgid "quarkus.kubernetes.aws-elastic-block-store-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:687
#: upstream/_guides/deploying-to-kubernetes.adoc:974
#: upstream/_guides/deploying-to-kubernetes.adoc:1074
#, no-wrap
msgid "Map<String, AwsElasticBlockStoreVolume>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:688
#, no-wrap
msgid "quarkus.kubernetes.azure-disk-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:688
#: upstream/_guides/deploying-to-kubernetes.adoc:975
#: upstream/_guides/deploying-to-kubernetes.adoc:1075
#, no-wrap
msgid "Map<String, AzureDiskVolume>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:689
#, no-wrap
msgid "quarkus.kubernetes.azure-file-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:689
#: upstream/_guides/deploying-to-kubernetes.adoc:976
#: upstream/_guides/deploying-to-kubernetes.adoc:1076
#, no-wrap
msgid "Map<String, AzureFileVolume>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:690
#, no-wrap
msgid "quarkus.kubernetes.mounts"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:690
#: upstream/_guides/deploying-to-kubernetes.adoc:977
#: upstream/_guides/deploying-to-kubernetes.adoc:1077
#, no-wrap
msgid "Map<String, Mount>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:691
#, no-wrap
msgid "quarkus.kubernetes.image-pull-policy"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:691
#: upstream/_guides/deploying-to-kubernetes.adoc:778
#: upstream/_guides/deploying-to-kubernetes.adoc:978
#: upstream/_guides/deploying-to-kubernetes.adoc:1078
#, no-wrap
msgid "ImagePullPolicy"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:692
#: upstream/_guides/deploying-to-kubernetes.adoc:779
#: upstream/_guides/deploying-to-kubernetes.adoc:979
#: upstream/_guides/deploying-to-kubernetes.adoc:1079
#, no-wrap
msgid "Always"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:692
#, no-wrap
msgid "quarkus.kubernetes.image-pull-secrets"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:693
#, no-wrap
msgid "quarkus.kubernetes.liveness-probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:693
#: upstream/_guides/deploying-to-kubernetes.adoc:694
#: upstream/_guides/deploying-to-kubernetes.adoc:748
#: upstream/_guides/deploying-to-kubernetes.adoc:779
#: upstream/_guides/deploying-to-kubernetes.adoc:780
#: upstream/_guides/deploying-to-kubernetes.adoc:980
#: upstream/_guides/deploying-to-kubernetes.adoc:981
#: upstream/_guides/deploying-to-kubernetes.adoc:1080
#: upstream/_guides/deploying-to-kubernetes.adoc:1081
#, no-wrap
msgid "Probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:694
#: upstream/_guides/deploying-to-kubernetes.adoc:695
#: upstream/_guides/deploying-to-kubernetes.adoc:981
#: upstream/_guides/deploying-to-kubernetes.adoc:982
#: upstream/_guides/deploying-to-kubernetes.adoc:1081
#: upstream/_guides/deploying-to-kubernetes.adoc:1082
#, no-wrap
msgid "( see Probe )"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:694
#, no-wrap
msgid "quarkus.kubernetes.readiness-probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:695
#, no-wrap
msgid "quarkus.kubernetes.sidecars"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:696
#, no-wrap
msgid "quarkus.kubernetes.ingress.expose"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:696
#: upstream/_guides/deploying-to-kubernetes.adoc:699
#: upstream/_guides/deploying-to-kubernetes.adoc:796
#: upstream/_guides/deploying-to-kubernetes.adoc:804
#: upstream/_guides/deploying-to-kubernetes.adoc:812
#: upstream/_guides/deploying-to-kubernetes.adoc:824
#: upstream/_guides/deploying-to-kubernetes.adoc:833
#: upstream/_guides/deploying-to-kubernetes.adoc:848
#: upstream/_guides/deploying-to-kubernetes.adoc:856
#: upstream/_guides/deploying-to-kubernetes.adoc:983
#: upstream/_guides/deploying-to-kubernetes.adoc:986
#, no-wrap
msgid "boolean"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:697
#: upstream/_guides/deploying-to-kubernetes.adoc:700
#: upstream/_guides/deploying-to-kubernetes.adoc:797
#: upstream/_guides/deploying-to-kubernetes.adoc:805
#: upstream/_guides/deploying-to-kubernetes.adoc:813
#: upstream/_guides/deploying-to-kubernetes.adoc:825
#: upstream/_guides/deploying-to-kubernetes.adoc:834
#: upstream/_guides/deploying-to-kubernetes.adoc:849
#: upstream/_guides/deploying-to-kubernetes.adoc:857
#: upstream/_guides/deploying-to-kubernetes.adoc:984
#: upstream/_guides/deploying-to-kubernetes.adoc:987
#: upstream/_guides/deploying-to-kubernetes.adoc:1093
#, no-wrap
msgid "false"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:697
#, no-wrap
msgid "quarkus.kubernetes.ingress.host"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:698
#, no-wrap
msgid "quarkus.kubernetes.ingress.annotations"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:698
#: upstream/_guides/deploying-to-kubernetes.adoc:985
#, no-wrap
msgid "Map<String, String>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:699
#, no-wrap
msgid "quarkus.kubernetes.headless"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:700
#, no-wrap
msgid "quarkus.kubernetes.hostaliases"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:700
#, no-wrap
msgid "Map<String, HostAlias>"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:701
#, no-wrap
msgid "quarkus.kubernetes.resources.requests.cpu"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:702
#, no-wrap
msgid "quarkus.kubernetes.resources.requests.memory"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:703
#, no-wrap
msgid "quarkus.kubernetes.resources.limits.cpu"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:704
#, no-wrap
msgid "quarkus.kubernetes.resources.limits.memory"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:709
msgid "Properties that use non-standard types, can be referenced by expanding the property.  For example to define a `kubernetes-readiness-probe` which is of type `Probe`:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:718
msgid "In this example `initial-delay` and `period` are fields of the type `Probe`.  Below you will find tables describing all available types."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:719
#, no-wrap
msgid "Client Connection Configuration"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:722
msgid "You may need to configure the connection to your Kubernetes cluster.  By default, it automatically uses the active _context_ used by `kubectl`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:724
msgid "For instance, if your cluster API endpoint uses a self-signed SSL Certificate you need to explicitly configure the client to trust it. You can achieve this by defining the following property:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:728
#, no-wrap
msgid "quarkus.kubernetes-client.trust-certs=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:731
msgid "The full list of the Kuberneters client configuration properties is provided below."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:734
#, no-wrap
msgid "Basic Types"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:738
msgid "Allowed values: `cluster-ip`, `node-port`, `load-balancer`, `external-name`"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:739
#, no-wrap
msgid "Env"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:742
#, no-wrap
msgid "value"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:743
#, no-wrap
msgid "secret"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:744
#, no-wrap
msgid "configmap"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:745
#, no-wrap
msgid "field"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:751
#, no-wrap
msgid "http-action-path"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:752
#, no-wrap
msgid "exec-action"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:753
#, no-wrap
msgid "tcp-socket-action"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:754
#, no-wrap
msgid "initial-delay"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:754
#: upstream/_guides/deploying-to-kubernetes.adoc:755
#: upstream/_guides/deploying-to-kubernetes.adoc:756
#, no-wrap
msgid "Duration"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:755
#: upstream/_guides/deploying-to-kubernetes.adoc:764
#, no-wrap
msgid "0"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:755
#, no-wrap
msgid "period"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:756
#, no-wrap
msgid "30s"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:756
#, no-wrap
msgid "timeout"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:757
#, no-wrap
msgid "10s"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:759
#, no-wrap
msgid "Port"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:762
#, no-wrap
msgid "container-port"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:763
#, no-wrap
msgid "host-port"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:764
#: upstream/_guides/deploying-to-kubernetes.adoc:794
#, no-wrap
msgid "path"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:765
#, no-wrap
msgid "/"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:765
#, no-wrap
msgid "protocol"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:765
#, no-wrap
msgid "Protocol"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:766
#, no-wrap
msgid "TCP"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:768
#, no-wrap
msgid "Container"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:771
#, no-wrap
msgid "image"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:772
#, no-wrap
msgid "env-vars"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:772
#, no-wrap
msgid "Env[]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:773
#, no-wrap
msgid "working-dir"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:774
#, no-wrap
msgid "command"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:775
#, no-wrap
msgid "arguments"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:776
#, no-wrap
msgid "ports"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:776
#, no-wrap
msgid "Port[]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:777
#, no-wrap
msgid "mounts"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:777
#, no-wrap
msgid "Mount[]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:778
#, no-wrap
msgid "image-pull-policy"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:779
#, no-wrap
msgid "liveness-probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:780
#, no-wrap
msgid "readiness-probe"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:783
#, no-wrap
msgid "HostAlias"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:786
#, no-wrap
msgid "hostnames"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:786
#, no-wrap
msgid "list of hostnames"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:789
#, no-wrap
msgid "Mounts and Volumes"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:791
#, no-wrap
msgid "Mount"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:795
#, no-wrap
msgid "sub-path"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:796
#: upstream/_guides/deploying-to-kubernetes.adoc:824
#: upstream/_guides/deploying-to-kubernetes.adoc:833
#: upstream/_guides/deploying-to-kubernetes.adoc:848
#: upstream/_guides/deploying-to-kubernetes.adoc:856
#, no-wrap
msgid "read-only"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:799
#, no-wrap
msgid "ConfigMapVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:802
#, no-wrap
msgid "config-map-name"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:803
#: upstream/_guides/deploying-to-kubernetes.adoc:811
#, no-wrap
msgid "default-mode"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:804
#: upstream/_guides/deploying-to-kubernetes.adoc:812
#, no-wrap
msgid "0600"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:804
#: upstream/_guides/deploying-to-kubernetes.adoc:812
#, no-wrap
msgid "optional"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:807
#, no-wrap
msgid "SecretVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:810
#: upstream/_guides/deploying-to-kubernetes.adoc:855
#, no-wrap
msgid "secret-name"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:816
#, no-wrap
msgid "AzureDiskVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:819
#, no-wrap
msgid "disk-name"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:820
#, no-wrap
msgid "disk-uri"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:821
#, no-wrap
msgid "kind"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:822
#, no-wrap
msgid "Managed"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:822
#, no-wrap
msgid "caching-mode"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:823
#, no-wrap
msgid "ReadWrite"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:823
#: upstream/_guides/deploying-to-kubernetes.adoc:832
#, no-wrap
msgid "fs-type"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:824
#: upstream/_guides/deploying-to-kubernetes.adoc:833
#, no-wrap
msgid "ext4"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:827
#, no-wrap
msgid "AwsElasticBlockStoreVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:830
#, no-wrap
msgid "volume-id"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:831
#, no-wrap
msgid "partition"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:836
#, no-wrap
msgid "GitRepoVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:839
#, no-wrap
msgid "repository"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:840
#, no-wrap
msgid "directory"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:841
#, no-wrap
msgid "revision"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:844
#, no-wrap
msgid "PersistentVolumeClaimVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:847
#, no-wrap
msgid "claim-name"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:851
#, no-wrap
msgid "AzureFileVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:854
#, no-wrap
msgid "share-name"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:860
#: upstream/_guides/deploying-to-kubernetes.adoc:950
#, no-wrap
msgid "OpenShift"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:863
msgid "One way to deploy an application to OpenShift is to use s2i (source to image) to create an image stream from the source and then deploy the image stream:"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:865
#, no-wrap
msgid "CLI"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:869
#, no-wrap
msgid ""
"quarkus extension remove kubernetes,jib\n"
"quarkus extension add openshift\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:872
#, no-wrap
msgid ""
"oc new-project quarkus-project\n"
"quarkus build -Dquarkus.container-image.build=true \n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:877
#: upstream/_guides/deploying-to-kubernetes.adoc:892
#: upstream/_guides/deploying-to-kubernetes.adoc:907
#, no-wrap
msgid ""
"oc new-app --name=greeting  quarkus-project/kubernetes-quickstart:1.0.0-SNAPSHOT\n"
"oc expose svc/greeting\n"
"oc get route\n"
"curl <route>/greeting\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:880
#, no-wrap
msgid "Maven"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:884
#, no-wrap
msgid ""
"./mvnw quarkus:remove-extension -Dextensions=\"kubernetes, jib\"\n"
"./mvnw quarkus:add-extension -Dextensions=\"openshift\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:887
#, no-wrap
msgid ""
"oc new-project quarkus-project\n"
"./mvnw clean package -Dquarkus.container-image.build=true \n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:895
#, no-wrap
msgid "Gradle"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:899
#, no-wrap
msgid ""
"./gradlew removeExtension --extensions=\"kubernetes, jib\"\n"
"./gradlew addExtension --extensions=\"openshift\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:902
#, no-wrap
msgid ""
"oc new-project quarkus-project\n"
"./gradlew build -Dquarkus.container-image.build=true \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:910
msgid "See further information in xref:deploying-to-openshift.adoc[Deploying to OpenShift]."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:912
#, no-wrap
msgid "A description of OpenShift resources and customisable properties is given below alongside Kubernetes resources to show similarities where applicable.   This includes an alternative to  `oc new-app ...` above, i.e. `oc apply -f target/kubernetes/openshift.json` .\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:914
msgid "To enable the generation of OpenShift resources, you need to include OpenShift in the target platforms:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:918
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=openshift\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:921
msgid "If you need to generate resources for both platforms (vanilla Kubernetes and OpenShift), then you need to include both (comma separated)."
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:925
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=kubernetes,openshift\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:929
msgid "Following the execution of `./mvnw package -Dquarkus.container-image.build=true ` you will notice amongst the other files that are created, two files named `openshift.json` and `openshift.yml` in the `target/kubernetes/` directory."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:931
msgid "These manifests can be deployed as is to a running cluster, using `kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:935
#, no-wrap
msgid "kubectl apply -f target/kubernetes/openshift.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:938
msgid "OpenShift users might want to use `oc` instead of `kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:942
#, no-wrap
msgid "oc apply -f target/kubernetes/openshift.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:947
msgid "Quarkus also provides the xref:deploying-to-openshift.adoc[OpenShift] extension. This extension is basically a wrapper around the Kubernetes extension and relieves OpenShift users of the necessity of setting the `deployment-target` property to `openshift`"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:949
msgid "The OpenShift resources can be customized in a similar approach with Kubernetes."
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:953
#, no-wrap
msgid "quarkus.openshift.name"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:954
#, no-wrap
msgid "quarkus.openshift.version"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:955
#, no-wrap
msgid "quarkus.openshift.deployment-kind"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:956
#, no-wrap
msgid "DeploymentConfig"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:956
#, no-wrap
msgid "quarkus.openshift.part-of"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:957
#, no-wrap
msgid "quarkus.openshift.init-containers"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:958
#, no-wrap
msgid "quarkus.openshift.labels"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:959
#, no-wrap
msgid "quarkus.openshift.annotations"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:960
#, no-wrap
msgid "quarkus.openshift.app-secret"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:961
#, no-wrap
msgid "quarkus.openshift.app-config-map"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:962
#, no-wrap
msgid "quarkus.openshift.env-vars"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:963
#, no-wrap
msgid "quarkus.openshift.working-dir"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:964
#, no-wrap
msgid "quarkus.openshift.command"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:965
#, no-wrap
msgid "quarkus.openshift.arguments"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:966
#, no-wrap
msgid "quarkus.openshift.replicas"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:967
#, no-wrap
msgid "quarkus.openshift.service-account"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:968
#, no-wrap
msgid "quarkus.openshift.ports"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:969
#, no-wrap
msgid "quarkus.openshift.service-type"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:970
#, no-wrap
msgid "quarkus.openshift.pvc-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:971
#, no-wrap
msgid "quarkus.openshift.secret-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:972
#, no-wrap
msgid "quarkus.openshift.config-map-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:973
#, no-wrap
msgid "quarkus.openshift.git-repo-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:974
#, no-wrap
msgid "quarkus.openshift.aws-elastic-block-store-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:975
#, no-wrap
msgid "quarkus.openshift.azure-disk-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:976
#, no-wrap
msgid "quarkus.openshift.azure-file-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:977
#, no-wrap
msgid "quarkus.openshift.mounts"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:978
#, no-wrap
msgid "quarkus.openshift.image-pull-policy"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:979
#, no-wrap
msgid "quarkus.openshift.image-pull-secrets"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:980
#, no-wrap
msgid "quarkus.openshift.liveness-probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:981
#, no-wrap
msgid "quarkus.openshift.readiness-probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:982
#, no-wrap
msgid "quarkus.openshift.sidecars"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:983
#, no-wrap
msgid "quarkus.openshift.route.expose"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:984
#, no-wrap
msgid "quarkus.openshift.route.host"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:985
#, no-wrap
msgid "quarkus.openshift.route.annotations"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:986
#, no-wrap
msgid "quarkus.openshift.headless"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:990
#: upstream/_guides/deploying-to-kubernetes.adoc:1050
#, no-wrap
msgid "Knative"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:993
msgid "To enable the generation of Knative resources, you need to include Knative in the target platforms:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:997
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=knative\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1001
msgid "Following the execution of `./mvnw package` you will notice amongst the other files that are created, two files named `knative.json` and `knative.yml` in the `target/kubernetes/` directory."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1003
msgid "If you look at either file you will see that it contains a Knative `Service`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1005
msgid "The full source of the `knative.json` file looks something like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1039
#, no-wrap
msgid ""
"{\n"
"  {\n"
"    \"apiVersion\" : \"serving.quarkus.knative.dev/v1alpha1\",\n"
"    \"kind\" : \"Service\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\"\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0.0-SNAPSHOT\"\n"
"      },\n"
"      \"name\" : \"knative.\n"
"    },\n"
"    \"spec\" : {\n"
"      \"runLatest\" : {\n"
"        \"configuration\" : {\n"
"          \"revisionTemplate\" : {\n"
"            \"spec\" : {\n"
"              \"container\" : {\n"
"                \"image\" : \"dev.local/yourDockerUsername/test-quarkus-app:1.0.0-SNAPSHOT\",\n"
"                \"imagePullPolicy\" : \"Always\"\n"
"              }\n"
"            }\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1042
msgid "The generated manifest can be deployed as is to a running cluster, using `kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1046
#, no-wrap
msgid "kubectl apply -f target/kubernetes/knative.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1049
msgid "The generated service can be customized using the following properties:"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1053
#, no-wrap
msgid "quarkus.knative.name"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1054
#, no-wrap
msgid "quarkus.knative.version"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1055
#, no-wrap
msgid "quarkus.knative.part-of"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1056
#, no-wrap
msgid "quarkus.knative.init-containers"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1057
#, no-wrap
msgid "quarkus.knative.labels"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1058
#, no-wrap
msgid "quarkus.knative.annotations"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1059
#, no-wrap
msgid "quarkus.knative.app-secret"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1060
#, no-wrap
msgid "quarkus.knative.app-config-map"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1061
#, no-wrap
msgid "quarkus.knative.env-vars"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1062
#, no-wrap
msgid "quarkus.knative.working-dir"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1063
#, no-wrap
msgid "quarkus.knative.command"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1064
#, no-wrap
msgid "quarkus.knative.arguments"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1065
#, no-wrap
msgid "quarkus.knative.replicas"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1066
#, no-wrap
msgid "quarkus.knative.service-account"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1067
#, no-wrap
msgid "quarkus.knative.host"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1068
#, no-wrap
msgid "quarkus.knative.ports"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1069
#, no-wrap
msgid "quarkus.knative.service-type"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1070
#, no-wrap
msgid "quarkus.knative.pvc-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1071
#, no-wrap
msgid "quarkus.knative.secret-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1072
#, no-wrap
msgid "quarkus.knative.config-map-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1073
#, no-wrap
msgid "quarkus.knative.git-repo-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1074
#, no-wrap
msgid "quarkus.knative.aws-elastic-block-store-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1075
#, no-wrap
msgid "quarkus.knative.azure-disk-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1076
#, no-wrap
msgid "quarkus.knative.azure-file-volumes"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1077
#, no-wrap
msgid "quarkus.knative.mounts"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1078
#, no-wrap
msgid "quarkus.knative.image-pull-policy"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1079
#, no-wrap
msgid "quarkus.knative.image-pull-secrets"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1080
#, no-wrap
msgid "quarkus.knative.liveness-probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1081
#, no-wrap
msgid "quarkus.knative.readiness-probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1082
#, no-wrap
msgid "quarkus.knative.sidecars"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1083
#, no-wrap
msgid "quarkus.knative.revision-name"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1084
#, no-wrap
msgid "quarkus.knative.traffic"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1084
#, no-wrap
msgid "Traffic[]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1085
#, no-wrap
msgid "( see Traffic)"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1087
#, no-wrap
msgid "Traffic"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1090
#, no-wrap
msgid "revision-name"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1090
#, no-wrap
msgid "A specific revision to which to send this portion of traffic"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1091
#, no-wrap
msgid "tag"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1091
#, no-wrap
msgid "Expose a dedicated url for referncing this target"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1092
#, no-wrap
msgid "latest-revision"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1092
#, no-wrap
msgid "Boolean"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1092
#, no-wrap
msgid "Optionally provided to indicate that the latest revision should be used for this traffic target"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1093
#, no-wrap
msgid "percent"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1093
#, no-wrap
msgid "Logn"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1093
#, no-wrap
msgid "Indicates the percent of traffic that is be routed to this revision"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1094
#, no-wrap
msgid "100"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1097
#, no-wrap
msgid "Deployment targets"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1101
msgid "Mentioned in the previous sections was the concept of `deployment-target`. This concept allows users to control which Kubernetes manifests will be generated and deployed to a cluster (if `quarkus.kubernetes.deploy` has been set to `true`)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1105
msgid "By default, when no `deployment-target` is set, then only vanilla Kubernetes resources are generated and deployed. When multiple values are set (for example `quarkus.kubernetes.deployment-target=kubernetes,openshift`) then the resources for all targets are generated, but only the resources that correspond to the *first* target are applied to the cluster (if deployment is enabled)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1110
msgid "In the case of wrapper extensions like OpenShift and Minikube, when these extensions have been explicitly added to the project, the default `deployment-target` is set by those extensions. For example if `quarkus-minikube` has been added to a project, then `minikube` becomes the default deployment target and its resources will be applied to the Kubernetes cluster when deployment via `quarkus.kubernetes.deploy` has been set.  Users can still override the deployment-targets manually using `quarkus.kubernetes.deployment-target`."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1111
#, no-wrap
msgid "Deprecated configuration"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1114
msgid "The following categories of configuration properties have been deprecated."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1115
#, no-wrap
msgid "Properties without the quarkus prefix"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1118
msgid "In earlier versions of the extension, the `quarkus.` was missing from those properties. These properties are now deprecated."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1119
#, no-wrap
msgid "Docker and S2i properties"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1122
msgid "The properties for configuring `docker` and `s2i` are also deprecated in favor of the new container-image extensions."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1123
#, no-wrap
msgid "Config group arrays"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1126
msgid "Properties referring to config group arrays (e.g. `kubernetes.labels[0]`, `kubernetes.env-vars[0]` etc) have been converted to maps, to align with the rest of the Quarkus ecosystem."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1128
msgid "The code below demonstrates the change in `labels` config:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1134
#, no-wrap
msgid ""
"# Old labels config:\n"
"kubernetes.labels[0].name=foo\n"
"kubernetes.labels[0].value=bar\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1137
#, no-wrap
msgid ""
"# New labels\n"
"quarkus.kubernetes.labels.foo=bar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1140
msgid "The code below demonstrates the change in `env-vars` config:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1146
#, no-wrap
msgid ""
"# Old env-vars config:\n"
"kubernetes.env-vars[0].name=foo\n"
"kubernetes.env-vars[0].configmap=my-configmap\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1149
#, no-wrap
msgid ""
"# New env-vars\n"
"quarkus.kubernetes.env-vars.foo.configmap=myconfigmap\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1151
#, no-wrap
msgid "`env-vars` properties"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1155
msgid "`quarkus.kubernetes.env-vars` are deprecated (though still currently supported as of this writing) and the new declaration style should be used instead.  See <<#env-vars>> and more specifically <<env-vars-backwards>> for more details."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1160
msgid "To trigger building and deploying a container image you need to enable the `quarkus.kubernetes.deploy` flag (the flag is disabled by default - furthermore it has no effect during test runs or dev mode).  This can be easily done with the command line:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1164
#, no-wrap
msgid "./mvnw clean package -Dquarkus.kubernetes.deploy=true\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1166
#, no-wrap
msgid "Building a container image"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1169
msgid "Building a container image is possible, using any of the 3 available `container-image` extensions:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1171
msgid "xref:container-image.adoc#docker[Docker]"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1172
msgid "xref:container-image.adoc#jib[Jib]"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1173
msgid "xref:container-image.adoc#s2i[s2i]"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1175
msgid "Each time deployment is requested, a container image build will be implicitly triggered (no additional properties are required when the Kubernetes deployment has been enabled)."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1176
#, no-wrap
msgid "Deploying"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1181
msgid "When deployment is enabled, the Kubernetes extension will select the resources specified by `quarkus.kubernetes.deployment-target` and deploy them.  This assumes that a `.kube/config` is available in your user directory that points to the target Kubernetes cluster.  In other words the extension will use whatever cluster `kubectl` uses. The same applies to credentials."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1183
msgid "At the moment no additional options are provided for further customization."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1184
#, no-wrap
msgid "Using existing resources"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1190
msgid "Sometimes it's desirable to either provide additional resources (e.g. a ConfigMap, a Secret, a Deployment for a database etc) or provide custom ones that will be used as a `base` for the generation process.  Those resources can be added under `src/main/kubernetes` directory and can be named after the target environment (e.g. kubernetes.json, openshift.json, knative.json, or the yml equivalents). The correlation between provided and generated files is done by file name.  So, a `kubernetes.json`/`kubernetes.yml` file added in `src/main/kubernetes` will only affect the generated `kubernetes.json`/`kubernetes.yml`. An `openshift.json`/`openshift.yml` file added in `src/main/kubernetes` will only affect the generated `openshift.json`/`openshift.yml`.  A `knative.json`/`knative.yml` file added in `src/main/kubernetes` will only affect the generated `knative.json`/`knative.yml` and so on. The provided file may be either in json or yaml format and may contain one or more resources. These resources will end up in both generated formats (json and yaml). For example, a secret added in `src/main/kubernetes/kubernetes.yml` will be added to both the generated `kubernetes.yml` and `kubernetes.json`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1192
msgid "Note: At the time of writing there is no mechanism in place that allows a one to many relationship between provided and generated files. Minikube is not an exception to the rule above, so if you want to customize the generated minikube manifests, the file placed under `src/main/kubernetes` will have to be named `minikube.json` or `minikube.yml` (naming it `kubernetes.yml` or `kubernetes.json` will result in having only the generated `kubernetes.yml` and `kubernetes.json` affected)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1195
msgid "Any resource found will be added in the generated manifests. Global modifications (e.g. labels, annotations etc) will also be applied to those resources.  If one of the provided resources has the same name as one of the generated ones, then the generated resource will be created on top of the provided resource, respecting existing content when possible (e.g. existing labels, annotations, environment variables, mounts, replicas etc)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1197
msgid "The name of the resource is determined by the application name and may be overridden by `quarkus.kubernetes.name`, `quarkus.openshift.name` and `quarkus.knative.name`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1199
msgid "For example, in the `kubernetes-quickstart` application, we can add a `kubernetes.yml` file in the `src/main/kubernetes` that looks like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1226
#, no-wrap
msgid ""
"apiVersion: apps/v1\n"
"kind: Deployment\n"
"metadata:\n"
"  name: kubernetes-quickstart\n"
"  labels:\n"
"    app: quickstart\n"
"spec:\n"
"  replicas: 3\n"
"  selector:\n"
"    matchLabels:\n"
"      app: quickstart\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        app: quickstart\n"
"    spec:\n"
"      containers:\n"
"      - name: kubernetes-quickstart\n"
"        image: someimage:latest\n"
"        ports:\n"
"        - containerPort: 80\n"
"        env:\n"
"        - name: FOO\n"
"          value: BAR\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1229
msgid "The generated `kubernetes.yml` will look like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1265
#, no-wrap
msgid ""
"apiVersion: \"apps/v1\"\n"
"kind: \"Deployment\"\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/build-timestamp: \"2020-04-10 - 12:54:37 +0000\"\n"
"  labels:\n"
"    app: \"quickstart\"\n"
"  name: \"kubernetes-quickstart\"\n"
"spec:\n"
"  replicas: 3 <1>\n"
"  selector:\n"
"    matchLabels:\n"
"      app.kubernetes.io/name: \"kubernetes-quickstart\"\n"
"      app.kubernetes.io/version: \"1.0.0-SNAPSHOT\"\n"
"  template:\n"
"    metadata:\n"
"      annotations:\n"
"        app.quarkus.io/build-timestamp: \"2020-04-10 - 12:54:37 +0000\"\n"
"      labels:\n"
"        app: \"quickstart\" <2>\n"
"    spec:\n"
"      containers:\n"
"      - env:\n"
"        - name: \"FOO\" <3>\n"
"          value: \"BAR\"\n"
"        image: \"<<yourDockerUsername>>/kubernetes-quickstart:1.0.0-SNAPSHOT\" <4>\n"
"        imagePullPolicy: \"Always\"\n"
"        name: \"kubernetes-quickstart\"\n"
"        ports:\n"
"        - containerPort: 8080 <5>\n"
"          name: \"http\"\n"
"          protocol: \"TCP\"\n"
"      serviceAccount: \"kubernetes-quickstart\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1268
msgid "The provided replicas <1>, labels <2> and environment variables <3> were retained. However, the image <4> and container port <5> were modified. Moreover, the default annotations have been added."
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1273
msgid "If the resource name does not match the application name (or the overridden name) instead of reusing the resource a new one will be added. Same goes for the container.  If the name of the container does not match the application name (or the overridden name), container specific configuration will be ignored."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1275
#, no-wrap
msgid "Service Binding [[service_binding]]"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1280
msgid "Quarkus supports binding services to applications via the link:https://github.com/k8s-service-bindings/spec[Service Binding Specification for Kubernetes].  Specifically Quarkus implements the link:https://github.com/k8s-service-bindings/spec#workload-projection[Workload Projection] part of the specification, thus allowing applications running in appropriately configured Kubernetes clusters to consume services (such as a Database or a Broker) without the need for user configuration."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1282
msgid "Currently, the following Quarkus extensions (and extensions that depend on these) support this feature:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1284
msgid "quarkus-jdbc-mariadb"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1285
msgid "quarkus-jdbc-mssql"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1286
msgid "quarkus-jdbc-mysql"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1287
msgid "quarkus-jdbc-postgresql"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1288
msgid "quarkus-kafka-client"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1289
msgid "quarkus-smallrye-reactive-messaging-kafka"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1290
msgid "quarkus-mongo-client"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1292
msgid "This list of extensions will grow as more services with supported bindings become available on Kubernetes."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1294
msgid "To enable Service Binding support, in addition to one of the currently supported extensions, the `quarkus-kubernetes-service-binding` extension needs to be added to the application dependencies."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1295
#, no-wrap
msgid "Example using PostgreSQL"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1298
msgid "If the Kubernetes cluster in which your Quarkus application runs supports provisioning a PostgreSQL database, one could use the following dependencies to take advantage of the Service Binding feature:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1310
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-jdbc-postgresql</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes-service-binding</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1316
#, no-wrap
msgid ""
"<!-- Hibernate isn't necessary for Service Binding, but most relational database access will benefit from using it -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-hibernate-orm</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1323
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-jdbc-postgresql\")\n"
"implementation(\"io.quarkus:quarkus-kubernetes-service-binding\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1326
#, no-wrap
msgid ""
"// Hibernate isn't necessary for Service Binding, but most relational database access will benefit from using it\n"
"implementation(\"io.quarkus:quarkus-hibernate-orm\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1329
msgid "The configuration of the application could be as simple as:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1333
#, no-wrap
msgid "quarkus.hibernate-orm.database.generation=validate\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1336
msgid "You'll notice that all the configuration for the datasource is absent, as it will be auto-discovered by Quarkus when the application is deployed to Kubernetes."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1337
#, no-wrap
msgid "How does it work?"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1341
msgid "When the application is deployed to an appropriately configured Kubernetes cluster, Kubernetes will create on the filesystem a set of files containing the runtime configuration (for example a file containing the URL of the database, another for the username).  Quarkus knows where in the file system to look for these files (as it consults the `SERVICE_BINDING_ROOT` environment variable which is set by Kubernetes) and if they exist, Quarkus knows how to map the values of these files to the appropriate extension configuration properties."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1345
msgid "An example of what the file system looks like can be seen link:https://github.com/quarkusio/quarkus/tree/e7efe6b3efba91b9c4ae26f9318f8397e23e7505/integration-tests/kubernetes-service-binding-jdbc/src/test/resources/k8s-sb[here].  In that example, the `k8s-sb` directory is meant to be the root of all service bindings. Only one binding which exists in that case and it is named `fruit-db`. This binding has a `type` file indicating that it is a `postgresql` database while the other files provide the necessary connection information."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1346
#, no-wrap
msgid "Generating ServiceBinding resources"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1349
msgid "The <<service_binding, Service Binding>> covers, how the application will consume the bound service.  However, we still haven't touched on how the actual binding happens. The binding is the responsibility of the Service Binding Operator. The user provides a `ServiceBinding` resource which expresses which application will bound to which services and the operator is responsible for mounting the required files to container."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1351
msgid "A `ServiceBinding` looks like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1371
#, no-wrap
msgid ""
"apiVersion: binding.operators.coreos.com/v1alpha1\n"
"kind: ServiceBinding\n"
"metadata:\n"
"  name: binding-request\n"
"  namespace: service-binding-demo\n"
"spec:\n"
"  application:\n"
"    name: java-app\n"
"    group: apps\n"
"    version: v1\n"
"    resource: deployments\n"
"  services:\n"
"  - group: postgresql.baiju.dev\n"
"    version: v1alpha1\n"
"    kind: Database\n"
"    name: db-demo\n"
"    id: postgresDB\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1374
msgid "The `quarkus-kubernetes-service-binding` extension provides a more compact way of expressing this information:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1379
#, no-wrap
msgid ""
"quarkus.kubernetes-service-binding.services.db-demo.api-version=postgresql.baiju.dev/v1alpha1\n"
"quarkus.kubernetes-service-binding.services.db-demo.kind=Database\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1383
msgid "By adding the above configuration properties inside your `application.properties` the `quarkus-kubernetes` in cooperation with the `quarkus-kubernetes-service-binding` extension will generate the `ServiceBinding` for you.  And this is something that is meant to work regardles of the kubernets flavour you are using, so it's expected to also work for Openshift and Knative, without any additional action from the user."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1385
msgid "In the configuration above `db-demo` has a double role. It is used to correlate / group `api-version` and `kind` together, but it's also used as the `name` of the custom resource. The later can be overriden if needed. For example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1391
#, no-wrap
msgid ""
"quarkus.kubernetes-service-binding.services.db-demo.api-version=postgresql.baiju.dev/v1alpha1\n"
"quarkus.kubernetes-service-binding.services.db-demo.kind=Database\n"
"quarkus.kubernetes-service-binding.services.db-demo.name=my-db\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1394
msgid "Advanced, features (e.g. `ServiceBiniding` mappings) are not yet supported."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1396
msgid "Here is the list of: link:https://github.com/redhat-developer/service-binding-operator#known-bindable-operators[Known bindable Operators]."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1397
#, no-wrap
msgid "Automatic service binding"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1400
msgid "To simplify the user experience as much as possible, the `quarkus-kubernetes-service-binding` extension, can automatically generate a `ServiceBinding` resource, when it detects that the application needs to access external services that are provided by known bindalbe Operators (operators known to be supported by the Service Binding Operator). At the moment this functionality is limited to the following operators:"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:1401
#, no-wrap
msgid "Service autobinding"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1403
#, no-wrap
msgid "Operator"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1403
#, no-wrap
msgid "Api Version"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1403
#, no-wrap
msgid "Kind"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1404
#, no-wrap
msgid "postgresql"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1404
#, no-wrap
msgid "link:https://operatorhub.io/operator/postgresql[CrunchyData Postgres]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1404
#, no-wrap
msgid "postgres-operator.crunchydata.com/v1beta1"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1404
#, no-wrap
msgid "PostgresCluster"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1405
#, no-wrap
msgid "mysql"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1405
#, no-wrap
msgid "link:https://operatorhub.io/operator/percona-xtradb-cluster-operator[Percona XtraDB Cluster]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1405
#, no-wrap
msgid "pxc.percona.com/v1-9-0"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1405
#, no-wrap
msgid "PerconaXtraDBCluster"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1406
#, no-wrap
msgid "mongo"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1406
#, no-wrap
msgid "link:https://operatorhub.io/operator/percona-server-mongodb-operator[Percona Mongo]"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1406
#, no-wrap
msgid "psmdb.percona.com/v1-9-0"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:1406
#, no-wrap
msgid "PerconaServerMongoDB"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1410
#, no-wrap
msgid "Automatic datasource binding"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1413
msgid "For traditional databases, automatic binding is initated whenever a datasource is configured. For example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1417
#, no-wrap
msgid "quarkus.datasource.db-kind=postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1421
msgid "When the above configuration is provided and `quarkus-datasource`, `quarkus-jdbc-postgresql`, `quarkus-kubernetes` and `quarkus-kubernetes-service-binding` extensions are added to the application, then a `ServiceBinding` for `postgresql` will be generated.  The generated `ServiceBinding` will bind to kubernetes resource with `apiVersion` and `kind` that matches the `postgresql` operator (see the table above) and `name` equal to `postgresql`. Since, the configured datasource is unamed, the `db-kind` is used."
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1428
#, no-wrap
msgid ""
"  services:\n"
"  - apiVersion: postgres-operator.crunchydata.com/v1beta1\n"
"    kind: PostgresCluster\n"
"    name: postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1431
msgid "For named datasources, the name of the datasource is used instead:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1435
#, no-wrap
msgid "quarkus.datasource.fruits-db.db-kind=postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1438
msgid "The `service` in the generated `ServiceBinding` will look like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1445
#, no-wrap
msgid ""
"  services:\n"
"  - apiVersion: postgres-operator.crunchydata.com/v1beta1\n"
"    kind: PostgresCluster\n"
"    name: fruits-db\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1448
msgid "Similarly, if mysql is used:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1452
#, no-wrap
msgid "quarkus.datasource.fruits-db.db-kind=mysql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1455
msgid "The generated `service` will be:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1462
#, no-wrap
msgid ""
"  services:\n"
"  - apiVersion: pxc.percona.com/v1-9-0\n"
"    kind: PerconaXtraDBCluster\n"
"    name: fruits-db\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1464
#, no-wrap
msgid "Customizing automatic bindings"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1470
msgid "There are cases where customization upon the generated `ServiceBinding` may be needed. For example, the target resource name does not match the datasource name, or a non default operator needs to be used.  For such cases, it's possible to use the `quarkus.kubernetes-service-binding.services.<service key>.` properties and specify as service key the name of the service.  The `service key` is usually the name of the service (e.g. the name of the datasource, or the name of the mongo client etc). When this value is not available the kind is used instead (e.g. postgresql, mysql, mongo etc).  To avoid conflicts (e.g. having different kind of services named the same) the `service key` maybe be prefixed with the kind (e.g. postgresql-persondb)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1472
msgid "The example below shows how to customize the `apiVersion` of the `PostgresCluster` resource:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1477
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.kubernetes-service-binding.services.postgresql.api-version=postgres-operator.crunchydata.com/v1beta2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1480
msgid "Or in case that we have a named datasource:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1485
#, no-wrap
msgid ""
"quarkus.datasource.fruits-db.db-kind=postgresql\n"
"quarkus.kubernetes-service-binding.services.fruits-db.api-version=postgres-operator.crunchydata.com/v1beta2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1488
msgid "In the former example the `db-kind`(`postgresql`) was used as service key, while in the latest case, the datasource name was used instead."
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1493
msgid "For more details on how the discovery of the available properties works, please read the link:https://github.com/k8s-service-bindings/spec#workload-projection[Workload Projection] part of the Service Binding specification."
msgstr ""

#~ msgid "To complete this guide, you need:"
#~ msgstr "要完成本指南，您需要："

#~ msgid "an IDE"
#~ msgstr "IDE"
