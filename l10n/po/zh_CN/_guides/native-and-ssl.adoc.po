# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-25 00:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/native-and-ssl.adoc:6
#, no-wrap
msgid "Using SSL With Native Executables"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:11
msgid "We are quickly moving to an SSL-everywhere world so being able to use SSL is crucial."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:14
msgid "In this guide, we will discuss how you can get your native executables to support SSL, as native executables don't support it out of the box."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:16
msgid "If you don't plan on using native executables, you can pass your way as in JDK mode, SSL is supported without further manipulations."
msgstr ""

#. type: Title ==
#: upstream/_guides/native-and-ssl.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:20
msgid "To complete this guide, you need:"
msgstr "要完成本指南，您需要："

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:22
msgid "less than 20 minutes"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:23
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:24
msgid "GraalVM (Java 11) installed with `JAVA_HOME` and `GRAALVM_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:25
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:27
msgid "This guide is based on the REST client guide so you should get this Maven project first."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:29
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:31
msgid "The project is located in the `rest-client-quickstart` {quickstarts-tree-url}/rest-client-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_guides/native-and-ssl.adoc:32
#, no-wrap
msgid "Looks like it works out of the box?!?"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:35
msgid "If you open the application's configuration file (`src/main/resources/application.properties`), you can see the following line:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:39
#, no-wrap
msgid "quarkus.rest-client.\"org.acme.rest.client.ExtensionsService\".url=https://stage.code.quarkus.io/api\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:41
msgid "which configures our REST client to connect to an SSL REST service."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:43
msgid "For the purposes of this guide, we also need to remove the configuration that starts the embedded WireMock server that stubs REST client responses so the tests actually propagate calls to the https://stage.code.quarkus.io/api. Update the test file `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` and remove the line:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:46
#, no-wrap
msgid "@QuarkusTestResource(WireMockExtensions.class)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:48
msgid "from the `ExtensionsResourceTest` class."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:50
msgid "Now let's build the application as a native executable and run the tests:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:54
#: upstream/_guides/native-and-ssl.adoc:152
#: upstream/_guides/native-and-ssl.adoc:221
#, no-wrap
msgid "./mvnw clean install -Pnative\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:57
msgid "And we obtain the following result:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:63
#: upstream/_guides/native-and-ssl.adoc:192
#, no-wrap
msgid ""
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:66
msgid "So, yes, it appears it works out of the box and this guide is pretty useless."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:68
msgid "It's not. The magic happens when building the native executable:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:72
#, no-wrap
msgid "[INFO] [io.quarkus.creator.phase.nativeimage.NativeImagePhase] /opt/graalvm/bin/native-image -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dcom.sun.xml.internal.bind.v2.bytecode.ClassTailor.noOptimize=true -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar rest-client-1.0.0-SNAPSHOT-runner.jar -J-Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -H:+PrintAnalysisCallTree -H:EnableURLProtocols=http,https -H:-SpawnIsolates -H:+JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:75
msgid "The important elements are these 2 options that were automatically added by Quarkus:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:79
#, no-wrap
msgid "-H:EnableURLProtocols=http,https -H:+JNI\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:83
msgid "They enable the native SSL support for your native executable.  But you should not set them manually, we have a nice configuration property for this purpose as described below."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:85
msgid "As SSL is de facto the standard nowadays, we decided to enable its support automatically for some of our extensions:"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:87
msgid "the Agroal connection pooling extension (`quarkus-agroal`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:88
msgid "the Amazon Services extension (`quarkus-amazon-*`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:89
msgid "the Consul Config extension (`quarkus-consul-config`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:90
msgid "the Elasticsearch client extensions (`quarkus-elasticsearch-rest-client` and `quarkus-elasticsearch-rest-high-level-client`) and thus the Hibernate Search Elasticsearch extension (`quarkus-hibernate-search-orm-elasticsearch`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:91
msgid "the Elytron Security OAuth2 extension (`quarkus-elytron-security-oauth2`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:92
msgid "the gRPC extension (`quarkus-grpc`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:93
msgid "the Infinispan Client extension (`quarkus-infinispan-client`)."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:94
msgid "the Jaeger extension (`quarkus-jaeger`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:95
msgid "the JGit extension (`quarkus-jgit`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:96
msgid "the JSch extension (`quarkus-jsch`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:97
msgid "the Kafka Client extension (`quarkus-kafka-client`), if Apicurio Registry 2.x Avro library is used"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:98
msgid "the Keycloak Authorization extension (`quarkus-keycloak-authorization`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:99
msgid "the Kubernetes client extension (`quarkus-kubernetes-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:100
msgid "the Logging Sentry extension (`quarkus-logging-sentry`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:101
msgid "the Mailer extension (`quarkus-mailer`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:102
msgid "the MongoDB client extension (`quarkus-mongodb-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:103
msgid "the Neo4j extension (`quarkus-neo4j`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:104
msgid "the OIDC and OIDC client extensions (`quarkus-oidc` and `quarkus-oidc-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:105
msgid "the Reactive client for IBM DB2 extension (`quarkus-reactive-db2-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:106
msgid "the Reactive client for PostgreSQL extension (`quarkus-reactive-pg-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:107
msgid "the Reactive client for MySQL extension (`quarkus-reactive-mysql-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:108
msgid "the Reactive client for Microsoft SQL Server extension (`quarkus-reactive-mssql-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:109
msgid "the Redis client extension (`quarkus-redis-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:110
msgid "the REST Client extension (`quarkus-rest-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:111
msgid "the REST Client Reactive extension (`quarkus-rest-client-reactive`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:112
msgid "the Spring Cloud Config client extension (`quarkus-spring-cloud-config-client`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:113
msgid "the Vault extension (`quarkus-vault`),"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:114
msgid "the Cassandra client extensions (`cassandra-quarkus-client`)"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:116
msgid "As long as you have one of these extensions in your project, the SSL support will be enabled by default."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:118
msgid "If you are not using any of them and you want to enable SSL support anyway, please add the following to your configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:122
#, no-wrap
msgid "quarkus.ssl.native=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:125
msgid "Now, let's just check the size of our native executable as it will be useful later:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:130
#, no-wrap
msgid ""
"$ ls -lh target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
"-rwxrwxr-x. 1 gandrian gandrian 46M Jun 11 13:01 target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/native-and-ssl.adoc:132
#, no-wrap
msgid "Let's disable SSL and see how it goes"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:137
msgid "Quarkus has an option to disable the SSL support entirely.  Why? Because it comes at a certain cost.  So if you are sure you don't need it, you can disable it entirely."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:139
msgid "First, let's disable it without changing the REST service URL and see how it goes."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:141
msgid "Open `src/main/resources/application.properties` and add the following line:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:145
#, no-wrap
msgid "quarkus.ssl.native=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:148
msgid "And let's try to build again:"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:155
msgid "The native executable tests will fail with the following error:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:159
#, no-wrap
msgid "Caused by: java.net.MalformedURLException: Accessing an URL protocol that was not enabled. The URL protocol https is supported but not enabled by default. It must be enabled by adding the --enable-url-protocols=https option to the native-image command..\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:162
msgid "This error is the one you obtain when trying to use SSL while it was not explicitly enabled in your native executable."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:164
msgid "Now, let's change the REST service URL to **not** use SSL in `src/main/resources/application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:168
#, no-wrap
msgid "quarkus.rest-client.\"org.acme.rest.client.ExtensionsService\".url=http://stage.code.quarkus.io/api\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:170
msgid "and since http://stage.code.quarkus.io/api responds with 302 status code we need to also skip the tests with `-DskipTests`."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:172
msgid "Now we can build again:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:176
#, no-wrap
msgid "./mvnw clean install -Pnative -DskipTests\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:179
msgid "If you check carefully the native executable build options, you can see that the SSL related options are gone:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:183
#, no-wrap
msgid "[INFO] [io.quarkus.creator.phase.nativeimage.NativeImagePhase] /opt/graalvm/bin/native-image -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dcom.sun.xml.internal.bind.v2.bytecode.ClassTailor.noOptimize=true -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar rest-client-1.0.0-SNAPSHOT-runner.jar -J-Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -H:+PrintAnalysisCallTree -H:EnableURLProtocols=http -H:-SpawnIsolates -H:+JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:186
msgid "And we end up with:"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:196
msgid "You remember we checked the size of the native executable with SSL enabled? Let's check again with SSL support entirely disabled:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:201
#, no-wrap
msgid ""
"$ ls -lh target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
"-rwxrwxr-x. 1 gandrian gandrian 35M Jun 11 13:06 target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:204
msgid "Yes, it is now **35 MB** whereas it used to be **46 MB**. SSL comes with a 11 MB overhead in native executable size."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:206
msgid "And there's more to it."
msgstr ""

#. type: Title ==
#: upstream/_guides/native-and-ssl.adoc:207
#, no-wrap
msgid "Let's start again with a clean slate"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:210
msgid "Let's revert the changes we made to the configuration file and go back to SSL with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:214
#, no-wrap
msgid "git checkout -- src/main/resources/application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:217
msgid "And let's build the native executable again:"
msgstr ""

#. type: Title ==
#: upstream/_guides/native-and-ssl.adoc:224
#, no-wrap
msgid "The TrustStore path"
msgstr ""

#. type: delimited block =
#: upstream/_guides/native-and-ssl.adoc:229
msgid "This behavior is new to GraalVM 19.3+."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:236
msgid "When creating a native binary, GraalVM embraces the principle of \"immutable security\" for the root certificates.  This essentially means that the root certificates are fixed at image build time, based on the certificate configuration used at that build time (which for Quarkus means when you perform a build having `quarkus.package.type=native` set).  This avoids shipping a `cacerts` file or requiring a system property be set in order to set up root certificates that are provided by the OS where the binary runs."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:240
msgid "As a consequence, system properties such as `javax.net.ssl.trustStore` do not have an effect at run time, so when the defaults need to be changed, these system properties must be provided at image build time.  The easiest way to do so is by setting `quarkus.native.additional-build-args`. For example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/native-and-ssl.adoc:244
#, no-wrap
msgid "quarkus.native.additional-build-args=-J-Djavax.net.ssl.trustStore=/tmp/mycerts,-J-Djavax.net.ssl.trustStorePassword=changeit\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:247
msgid "will ensure that the certificates of `/tmp/mycerts` are baked into the native binary and used *in addition* to the default cacerts."
msgstr ""

#. type: delimited block =
#: upstream/_guides/native-and-ssl.adoc:251
msgid "The file containing the custom TrustStore does *not* have to be present at runtime as its content has been baked into the native binary."
msgstr ""

#. type: Title ===
#: upstream/_guides/native-and-ssl.adoc:254
#, no-wrap
msgid "Working with containers"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:258
msgid "No special action needs to be taken when running the native binary in a container. If the native binary was properly built with the custom TrustStore as described in the previous section, it will work properly in container as well."
msgstr ""

#. type: Title ==
#: upstream/_guides/native-and-ssl.adoc:259
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:263
msgid "We make building native executable easy and, even if the SSL support in GraalVM is still requiring some serious thinking, it should be mostly transparent when using Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_guides/native-and-ssl.adoc:264
msgid "We track GraalVM progress on a regular basis so we will promptly integrate in Quarkus any improvement with respect to SSL support."
msgstr ""
