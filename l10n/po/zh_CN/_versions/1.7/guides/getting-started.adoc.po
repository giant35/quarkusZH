# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-07-10 05:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/getting-started.adoc:6
#, no-wrap
msgid "Quarkus - Creating Your First Application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:23
msgid "Learn how to create a Hello World Quarkus app.  This guide covers:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:25
msgid "Bootstrapping an application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:26
msgid "Creating a JAX-RS endpoint"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:27
msgid "Injecting beans"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:28
msgid "Functional tests"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:29
msgid "Packaging of the application"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:30
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:33
msgid "To complete this guide, you need:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:35
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:36
msgid "an IDE"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:37
msgid "JDK 8 or 11+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:38
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/getting-started.adoc:40
#, no-wrap
msgid "Verify Maven is using the Java you expect"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/getting-started.adoc:45
msgid "If you have multiple JDK's installed it is not certain Maven will pick up the expected java and you could end up with unexpected results.  You can verify which JDK Maven uses by running `mvn --version`."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/1.7/guides/getting-started.adoc:48
#: upstream/_versions/1.7/guides/getting-started.adoc:53
#, no-wrap
msgid "Architecture"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:52
msgid "In this guide, we create a straightforward application serving a `hello` endpoint. To demonstrate dependency injection, this endpoint uses a `greeting` bean."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/1.7/guides/getting-started.adoc:53
#, no-wrap
msgid "getting-started-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:56
msgid "This guide also covers the testing of the endpoint."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:57
#, no-wrap
msgid "Solution"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:60
msgid "We recommend that you follow the instructions from <<bootstrapping-the-project,Boostrapping project>> and onwards to create the application step by step."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:62
msgid "However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:64
msgid "Download an {quickstarts-archive-url}[archive] or clone the git repository:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:68
#, no-wrap
msgid "git clone {quickstarts-clone-url}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:71
msgid "The solution is located in the `getting-started` directory."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:72
#, no-wrap
msgid "Bootstrapping the project"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:75
msgid "The easiest way to create a new Quarkus project is to open a terminal and run the following command:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:77
msgid "For Linux & MacOS users"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:86
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=getting-started \\\n"
"    -DclassName=\"org.acme.getting.started.GreetingResource\" \\\n"
"    -Dpath=\"/hello\"\n"
"cd getting-started\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:89
msgid "For Windows users"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:91
msgid "If using cmd , (don't use forward slash `\\`)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:95
#, no-wrap
msgid "mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create -DprojectGroupId=org.acme -DprojectArtifactId=getting-started -DclassName=\"org.acme.getting.started.GreetingResource\" -Dpath=\"/hello\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:98
msgid "If using Powershell , wrap `-D` parameters in double quotes"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:102
#, no-wrap
msgid "mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \"-DprojectGroupId=org.acme\" \"-DprojectArtifactId=getting-started\" \"-DclassName=org.acme.getting.started.GreetingResource\" \"-Dpath=/hello\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:105
msgid "It generates the following in `./getting-started`:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:107
msgid "the Maven structure"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:108
msgid "an `org.acme.getting.started.GreetingResource` resource exposed on `/hello`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:109
msgid "an associated unit test"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:110
msgid "a landing page that is accessible on `http://localhost:8080` after starting the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:111
msgid "example `Dockerfile` files for both `native` and `jvm` modes in `src/main/docker`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:112
msgid "the application configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:116
msgid "Once generated, look at the `pom.xml`.  You will find the import of the Quarkus BOM, allowing you to omit the version on the different Quarkus dependencies.  In addition, you can see the `quarkus-maven-plugin` responsible of the packaging of the application and also providing the development mode."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:130
#, no-wrap
msgid ""
"<dependencyManagement>\n"
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-bom</artifactId>\n"
"            <version>${quarkus.version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</dependencyManagement>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:147
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-maven-plugin</artifactId>\n"
"            <version>${quarkus.version}</version>\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>build</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:150
msgid "If we focus on the dependencies section, you can see the extension allowing the development of REST applications:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:157
#, no-wrap
msgid ""
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/getting-started.adoc:159
#, no-wrap
msgid "The JAX-RS resources"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:162
msgid "During the project creation, the `src/main/java/org/acme/getting/started/GreetingResource.java` file has been created with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:166
#: upstream/_versions/1.7/guides/getting-started.adoc:248
#: upstream/_versions/1.7/guides/getting-started.adoc:266
#: upstream/_versions/1.7/guides/getting-started.adoc:366
#, no-wrap
msgid "package org.acme.getting.started;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:171
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:174
#: upstream/_versions/1.7/guides/getting-started.adoc:277
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:181
#: upstream/_versions/1.7/guides/getting-started.adoc:294
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:184
msgid "It's a very simple REST endpoint, returning \"hello\" to requests on \"/hello\"."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/getting-started.adoc:186
#, no-wrap
msgid "Differences with vanilla JAX-RS"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/getting-started.adoc:190
msgid "With Quarkus, there is no need to create an `Application` class. It's supported, but not required. In addition, only one instance of the resource is created and not one per request. You can configure this using the different `*Scoped` annotations (`ApplicationScoped`, `RequestScoped`, etc)."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:192
#, no-wrap
msgid "Running the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:196
msgid "Now we are ready to run our application.  Use: `./mvnw compile quarkus:dev`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:218
#, no-wrap
msgid ""
"$ ./mvnw compile quarkus:dev\n"
"[INFO] --------------------< org.acme:getting-started >---------------------\n"
"[INFO] Building getting-started 1.0-SNAPSHOT\n"
"[INFO] --------------------------------[ jar ]---------------------------------\n"
"[INFO]\n"
"[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ getting-started ---\n"
"[INFO] Using 'UTF-8' encoding to copy filtered resources.\n"
"[INFO] skip non existing resourceDirectory /Users/starksm/Dev/JBoss/Quarkus/starksm64-quarkus-quickstarts/getting-started/src/main/resources\n"
"[INFO]\n"
"[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ getting-started ---\n"
"[INFO] Changes detected - recompiling the module!\n"
"[INFO] Compiling 2 source files to /Users/starksm/Dev/JBoss/Quarkus/starksm64-quarkus-quickstarts/getting-started/target/classes\n"
"[INFO]\n"
"[INFO] --- quarkus-maven-plugin:<version>:dev (default-cli) @ getting-started ---\n"
"Listening for transport dt_socket at address: 5005\n"
"2019-02-28 17:05:22,347 INFO  [io.qua.dep.QuarkusAugmentor] (main) Beginning quarkus augmentation\n"
"2019-02-28 17:05:22,635 INFO  [io.qua.dep.QuarkusAugmentor] (main) Quarkus augmentation completed in 288ms\n"
"2019-02-28 17:05:22,770 INFO  [io.quarkus] (main) Quarkus started in 0.668s. Listening on: http://localhost:8080\n"
"2019-02-28 17:05:22,771 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:221
msgid "Once started, you can request the provided endpoint:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:226
msgid "``` $ curl -w \"\\n\" http://localhost:8080/hello hello ```"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:228
msgid "Hit `CTRL+C` to stop the application, or keep it running and enjoy the blazing fast hot-reload."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/getting-started.adoc:230
#, no-wrap
msgid "Automatically add newline with `curl -w \"\\n\"`"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/getting-started.adoc:233
msgid "We are using `curl -w \"\\n\"` in this example to avoid your terminal printing a '%' or put both result and next command prompt on the same line."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:235
#, no-wrap
msgid "Using injection"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:239
msgid "Dependency injection in Quarkus is based on ArC which is a CDI-based dependency injection solution tailored for Quarkus' architecture.  You can learn more about it in the link:cdi-reference[Contexts and Dependency Injection guide]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:241
msgid "ArC comes as a dependency of `quarkus-resteasy` so you already have it handy."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:244
msgid "Let's modify the application and add a companion bean.  Create the `src/main/java/org/acme/getting/started/GreetingService.java` file with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:250
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:253
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class GreetingService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:257
#, no-wrap
msgid ""
"    public String greeting(String name) {\n"
"        return \"hello \" + name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:259
#: upstream/_versions/1.7/guides/getting-started.adoc:399
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:262
msgid "Edit the `GreetingResource` class to inject the `GreetingService` and create a new endpoint using it:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:272
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:274
#, no-wrap
msgid "import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:280
#, no-wrap
msgid ""
"    @Inject\n"
"    GreetingService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:287
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    @Path(\"/greeting/{name}\")\n"
"    public String greeting(@PathParam String name) {\n"
"        return service.greeting(name);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:298
msgid "If you stopped the application, restart the application with `./mvnw compile quarkus:dev`.  Then check that the endpoint returns `hello quarkus` as expected:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:303
#, no-wrap
msgid ""
"$ curl -w \"\\n\" http://localhost:8080/hello/greeting/quarkus\n"
"hello quarkus\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:307
#, no-wrap
msgid "Development Mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:315
msgid "`quarkus:dev` runs Quarkus in development mode. This enables hot deployment with background compilation, which means that when you modify your Java files and/or your resource files and refresh your browser, these changes will automatically take effect.  This works too for resource files like the configuration property file.  Refreshing the browser triggers a scan of the workspace, and if any changes are detected, the Java files are recompiled and the application is redeployed; your request is then serviced by the redeployed application. If there are any issues with compilation or deployment an error page will let you know."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:318
msgid "This will also listen for a debugger on port `5005`. If you want to wait for the debugger to attach before running you can pass `-Dsuspend` on the command line. If you don't want the debugger at all you can use `-Ddebug=false`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:319
#, no-wrap
msgid "Testing"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:322
msgid "All right, so far so good, but wouldn't it be better with a few tests, just in case."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:324
msgid "In the generated `pom.xml` file, you can see 2 test dependencies:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:337
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-junit5</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.rest-assured</groupId>\n"
"    <artifactId>rest-assured</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:342
msgid "Quarkus supports https://junit.org/junit5/[Junit 5] tests.  Because of this, the version of the https://maven.apache.org/surefire/maven-surefire-plugin/[Surefire Maven Plugin] must be set, as the default version does not support Junit 5:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:355
#, no-wrap
msgid ""
"<plugin>\n"
"    <artifactId>maven-surefire-plugin</artifactId>\n"
"    <version>${surefire-plugin.version}</version>\n"
"    <configuration>\n"
"       <systemPropertyVariables>\n"
"          <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"          <maven.home>${maven.home}</maven.home>\n"
"       </systemPropertyVariables>\n"
"    </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:359
msgid "We also set the `java.util.logging` system property to make sure tests will use the correct logmanager and `maven.home` to ensure that custom configuration from `${maven.home}/conf/settings.xml` is applied (if any)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:362
msgid "The generated project contains a simple test.  Edit the `src/test/java/org/acme/getting/started/GreetingResourceTest.java` to match the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:369
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:371
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:374
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:377
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:386
#, no-wrap
msgid ""
"    @Test    // <1>\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/hello\")\n"
"          .then()\n"
"             .statusCode(200)    // <2>\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:397
#, no-wrap
msgid ""
"    @Test\n"
"    public void testGreetingEndpoint() {\n"
"        String uuid = UUID.randomUUID().toString();\n"
"        given()\n"
"          .pathParam(\"name\", uuid)\n"
"          .when().get(\"/hello/greeting/{name}\")\n"
"          .then()\n"
"            .statusCode(200)\n"
"            .body(is(\"hello \" + uuid));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:401
msgid "By using the `QuarkusTest` runner, you instruct JUnit to start the application before the tests."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:402
msgid "Check the HTTP response status code and content"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:404
msgid "These tests use http://rest-assured.io/[RestAssured], but feel free to use your favorite library."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:406
msgid "You can run these using Maven:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:410
#, no-wrap
msgid "./mvnw test\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:413
msgid "You can also run the test from your IDE directly (be sure you stopped the application first)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:419
msgid "By default, tests will run on port `8081` so as not to conflict with the running application. We automatically configure RestAssured to use this port. If you want to use a different client you should use the `@TestHTTPResource` annotation to directly inject the URL of the tested application into a field on the test class. This field can be of the type `String`, `URL` or `URI`. This annotation can also be given a value for the test path. For example, if I want to test a Servlet mapped to `/myservlet` I would just add the following to my test:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/getting-started.adoc:425
#, no-wrap
msgid ""
"@TestHTTPResource(\"/myservlet\")\n"
"URL testUrl;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:429
msgid "The test port can be controlled via the `quarkus.http.test-port` config property. Quarkus also creates a system property called `test.url` that is set to the base test URL for situations where you cannot use injection."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:430
#, no-wrap
msgid "Working with multi-module project or external modules"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:434
msgid "Quarkus heavily utilizes https://github.com/wildfly/jandex[Jandex] at build time, to discover various classes or annotations. One immediately recongizable application of this, is CDI bean discovery.  As a result, most of the Quarkus extensions will not work properly if this build time discovery isn't properly setup."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:436
msgid "This index is created by default on the project on which Quarkus is configured for, thanks to our Maven and Gradle plugins."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:439
msgid "However, when working with a multi-module project, be sure to read the `Working with multi-module projects` section of the link:maven-tooling#multi-module-maven[Maven] or link:gradle-tooling#multi-module-maven[Gradle] guides."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:443
msgid "If you plan to use external modules (for example, an external library for all your domain objects), you will need to make these modules known to the indexing process either by adding the Jandex plugin (if you can modify them)  or via the `quarkus.index-dependency` property inside your `application.properties` (useful in cases where you can't modify the module)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:445
msgid "Be sure to read the link:cdi-reference#bean_discovery[Bean Discovery] section of the CDI guide for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:446
#, no-wrap
msgid "Packaging and run the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:450
msgid "The application is packaged using `./mvnw package`.  It produces 2 jar files in `/target`:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:453
msgid "`getting-started-1.0-SNAPSHOT.jar` - containing just the classes and resources of the projects, it's the regular artifact produced by the Maven build;"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:455
msgid "`getting-started-1.0-SNAPSHOT-runner.jar` - being an executable _jar_. Be aware that it's not an _über-jar_ as the dependencies are copied into the `target/lib` directory."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:457
msgid "You can run the application using: `java -jar target/getting-started-1.0-SNAPSHOT-runner.jar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:460
msgid "The `Class-Path` entry of the `MANIFEST.MF` from the _runner jar_ explicitly lists the jars from the `lib` directory.  So if you want to deploy your application somewhere, you need to copy the _runner_ jar as well as the _lib_ directory."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:462
msgid "Before running the application, don't forget to stop the hot reload mode (hit `CTRL+C`), or you will have a port conflict."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:464
#, no-wrap
msgid "Configuring the banner"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:469
msgid "By default when a Quarkus application starts (in regular or dev mode), it will display an ASCII art banner. The banner can be disabled by setting `quarkus.banner.enabled=false` in `application.properties`, by setting the `-Dquarkus.banner.enabled=false` Java System Property, or by setting the `QUARKUS_BANNER_ENABLED` environment variable to `false`.  Furthermore, users can supply a custom banner by placing the banner file in `src/main/resources` and configuring `quarkus.banner.path=name-of-file` in `application.properties`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/getting-started.adoc:470
#, no-wrap
msgid "What's next?"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:476
msgid "This guide covered the creation of an application using Quarkus.  However, there is much more.  We recommend continuing the journey with the link:building-native-image[building a native executable guide], where you learn about creating a native executable and packaging it in a container.  If you are interested in reactive, we recommend the link:getting-started-reactive[Getting started with reactive guide], where you can see how to implement reactive applications with Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:478
msgid "In addition, the link:tooling[tooling guide] document explains how to:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:480
msgid "scaffold a project in a single command line"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:481
msgid "enable the _development mode_ (hot reload)"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:482
msgid "import the project in your favorite IDE"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/getting-started.adoc:482
msgid "and more"
msgstr ""
