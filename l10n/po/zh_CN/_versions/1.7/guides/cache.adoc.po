# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-01 01:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/cache.adoc:6
#, no-wrap
msgid "Quarkus - Application Data Caching"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:12
msgid "In this guide, you will learn how to enable application data caching in any CDI managed bean of your Quarkus application."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:18
msgid "To complete this guide, you need:"
msgstr "要完成本指南，您需要："

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:20
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:21
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:22
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:23
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:24
#, no-wrap
msgid "Scenario"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:29
msgid "Let's imagine you want to expose in your Quarkus application a REST API that allows users to retrieve the weather forecast for the next three days.  The problem is that you have to rely on an external meteorological service which only accepts requests for one day at a time and takes forever to answer.  Since the weather forecast is updated once every twelve hours, caching the service responses would definitely improve your API performances."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:31
msgid "We'll do that using a single Quarkus annotation."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:32
#, no-wrap
msgid "Solution"
msgstr "完整源码"

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:36
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:38
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:40
msgid "The solution is located in the `cache-quickstart` directory."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:41
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:44
msgid "First, we need to create a new Quarkus project using Maven with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:53
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=cache-quickstart \\\n"
"    -DclassName=\"org.acme.cache.WeatherForecastResource\" \\\n"
"    -Dpath=\"/weather\" \\\n"
"    -Dextensions=\"cache,resteasy-jsonb\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:56
msgid "This command generates the Maven project with a REST endpoint and imports the `cache` and `resteasy-jsonb` extensions."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:59
msgid "If you already have your Quarkus project configured, you can add the `cache` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:63
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"cache\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:66
msgid "This will add the following to your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:73
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-cache</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:75
#, no-wrap
msgid "Creating the REST API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:79
msgid "Let's start by creating a service that will simulate an extremely slow call to the external meteorological service.  Create `src/main/java/org/acme/cache/WeatherForecastService.java` with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:83
#: upstream/_versions/1.7/guides/cache.adoc:124
#: upstream/_versions/1.7/guides/cache.adoc:153
#: upstream/_versions/1.7/guides/cache.adoc:216
#: upstream/_versions/1.7/guides/cache.adoc:337
#: upstream/_versions/1.7/guides/cache.adoc:420
#: upstream/_versions/1.7/guides/cache.adoc:451
#: upstream/_versions/1.7/guides/cache.adoc:483
#: upstream/_versions/1.7/guides/cache.adoc:514
#, no-wrap
msgid "package org.acme.cache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:85
#: upstream/_versions/1.7/guides/cache.adoc:218
#, no-wrap
msgid "import java.time.LocalDate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:87
#: upstream/_versions/1.7/guides/cache.adoc:220
#: upstream/_versions/1.7/guides/cache.adoc:339
#: upstream/_versions/1.7/guides/cache.adoc:422
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:90
#: upstream/_versions/1.7/guides/cache.adoc:225
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class WeatherForecastService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:99
#, no-wrap
msgid ""
"    public String getDailyForecast(LocalDate date, String city) {\n"
"        try {\n"
"            Thread.sleep(2000L); <1>\n"
"        } catch (InterruptedException e) {\n"
"            Thread.currentThread().interrupt();\n"
"        }\n"
"        return date.getDayOfWeek() + \" will be \" + getDailyResult(date.getDayOfMonth() % 4) + \" in \" + city;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:115
#: upstream/_versions/1.7/guides/cache.adoc:251
#, no-wrap
msgid ""
"    private String getDailyResult(int dayOfMonthModuloFour) {\n"
"        switch (dayOfMonthModuloFour) {\n"
"            case 0:\n"
"                return \"sunny\";\n"
"            case 1:\n"
"                return \"cloudy\";\n"
"            case 2:\n"
"                return \"chilly\";\n"
"            case 3:\n"
"                return \"rainy\";\n"
"            default:\n"
"                throw new IllegalArgumentException();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:117
msgid "This is where the slowness comes from."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:120
msgid "We also need a class that will contain the response sent to the users when they ask for the next three days weather forecast.  Create `src/main/java/org/acme/cache/WeatherForecast.java` this way:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:126
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:128
#, no-wrap
msgid "public class WeatherForecast {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:130
#, no-wrap
msgid "    private List<String> dailyForecasts;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:132
#, no-wrap
msgid "    private long executionTimeInMs;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:137
#, no-wrap
msgid ""
"    public WeatherForecast(List<String> dailyForecasts, long executionTimeInMs) {\n"
"        this.dailyForecasts = dailyForecasts;\n"
"        this.executionTimeInMs = executionTimeInMs;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:141
#, no-wrap
msgid ""
"    public List<String> getDailyForecasts() {\n"
"        return dailyForecasts;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:146
#, no-wrap
msgid ""
"    public long getExecutionTimeInMs() {\n"
"        return executionTimeInMs;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:149
msgid "Now, we just need to update the generated `WeatherForecastResource` class to use the service and response:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:157
#, no-wrap
msgid ""
"import java.time.LocalDate;\n"
"import java.util.Arrays;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:163
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:165
#, no-wrap
msgid "import org.jboss.resteasy.annotations.jaxrs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:168
#, no-wrap
msgid ""
"@Path(\"/weather\")\n"
"public class WeatherForecastResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:171
#, no-wrap
msgid ""
"    @Inject\n"
"    WeatherForecastService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:185
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public WeatherForecast getForecast(@QueryParam String city, @QueryParam long daysInFuture) { <1>\n"
"        long executionStart = System.currentTimeMillis();\n"
"        List<String> dailyForecasts = Arrays.asList(\n"
"                service.getDailyForecast(LocalDate.now().plusDays(daysInFuture), city),\n"
"                service.getDailyForecast(LocalDate.now().plusDays(daysInFuture + 1L), city),\n"
"                service.getDailyForecast(LocalDate.now().plusDays(daysInFuture + 2L), city)\n"
"        );\n"
"        long executionEnd = System.currentTimeMillis();\n"
"        return new WeatherForecast(dailyForecasts, executionEnd - executionStart);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:188
msgid "If the `daysInFuture` query parameter is omitted, the three days weather forecast will start from the current day.  Otherwise, it will start from the current day plus the `daysInFuture` value."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:190
msgid "We're all done! Let's check if everything's working."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:192
msgid "First, run the application using `./mvnw compile quarkus:dev` from the project directory."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:195
msgid "Then, call `http://localhost:8080/weather?city=Raleigh` from a browser.  After six long seconds, the application will answer something like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:199
#, no-wrap
msgid "{\"dailyForecasts\":[\"MONDAY will be cloudy in Raleigh\",\"TUESDAY will be chilly in Raleigh\",\"WEDNESDAY will be rainy in Raleigh\"],\"executionTimeInMs\":6001}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/cache.adoc:204
msgid "The response content may vary depending on the day you run the code."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:207
msgid "You can try calling the same URL again and again, it will always take six seconds to answer."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:208
#, no-wrap
msgid "Enabling the cache"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:212
msgid "Now that your Quarkus application is up and running, let's tremendously improve its response time by caching the external meteorological service responses.  Update the `WeatherForecastService` class like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:222
#, no-wrap
msgid "import io.quarkus.cache.CacheResult;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:235
#, no-wrap
msgid ""
"    @CacheResult(cacheName = \"weather-cache\") <1>\n"
"    public String getDailyForecast(LocalDate date, String city) {\n"
"        try {\n"
"            Thread.sleep(2000L);\n"
"        } catch (InterruptedException e) {\n"
"            Thread.currentThread().interrupt();\n"
"        }\n"
"        return date.getDayOfWeek() + \" will be \" + getDailyResult(date.getDayOfMonth() % 4) + \" in \" + city;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:253
msgid "We only added this annotation (and the associated import of course)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:257
msgid "Let's try to call `http://localhost:8080/weather?city=Raleigh` again.  You're still waiting a long time before receiving an answer.  This is normal since the server just restarted and the cache was empty."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:260
msgid "Wait a second! The server restarted by itself after the `WeatherForecastService` update? Yes, this is one of Quarkus amazing features for developers called `live coding`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:263
msgid "Now that the cache was loaded during the previous call, try calling the same URL.  This time, you should get a super fast answer with an `executionTimeInMs` value close to 0."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:266
msgid "Let's see what happens if we start from one day in the future using the `http://localhost:8080/weather?city=Raleigh&daysInFuture=1` URL.  You should get an answer two seconds later since two of the requested days were already loaded in the cache."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:269
msgid "You can also try calling the same URL with a different city and see the cache in action again.  The first call will take six seconds and the following ones will be answered immediately."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:271
msgid "Congratulations! You just added application data caching to your Quarkus application with a single line of code!"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:274
msgid "Do you want to learn more about the Quarkus application data caching abilities? The following sections will show you everything there is to know about it."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:275
#, no-wrap
msgid "Caching annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:278
msgid "Quarkus offers a set of annotations that can be used in a CDI managed bean to enable caching abilities."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:279
#, no-wrap
msgid "@CacheResult"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:282
msgid "Loads a method result from the cache without executing the method body whenever possible."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:289
msgid "When a method annotated with `@CacheResult` is invoked, Quarkus will compute a cache key and use it to check in the cache whether the method has been already invoked.  If the method has one or more arguments, the key computation is done from all the method arguments if none of them is annotated with `@CacheKey`, or all the arguments annotated with `@CacheKey` otherwise.  Each non-primitive method argument that is part of the key must implement `equals()` and `hashCode()` correctly for the cache to work as expected.  This annotation can also be used on a method with no arguments, a default key derived from the cache name is generated in that case.  If a value is found in the cache, it is returned and the annotated method is never actually executed.  If no value is found, the annotated method is invoked and the returned value is stored in the cache using the computed or generated key."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:296
msgid "A method annotated with `CacheResult` is protected by a lock on cache miss mechanism.  If several concurrent invocations try to retrieve a cache value from the same missing key, the method will only be invoked once.  The first concurrent invocation will trigger the method invocation while the subsequent concurrent invocations will wait for the end of the method invocation to get the cached result.  The `lockTimeout` parameter can be used to interrupt the lock after a given delay.  The lock timeout is disabled by default, meaning the lock is never interrupted.  See the parameter Javadoc for more details."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:298
msgid "This annotation cannot be used on a method returning `void`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/cache.adoc:303
msgid "Quarkus is able to also cache `null` values unlike the underlying Caffeine provider.  See <<negative-cache,more on this topic below>>."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:305
#, no-wrap
msgid "@CacheInvalidate"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:308
msgid "Removes an entry from the cache."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:313
msgid "When a method annotated with `@CacheInvalidate` is invoked, Quarkus will compute a cache key and use it to try to remove an existing entry from the cache.  If the method has one or more arguments, the key computation is done from all the method arguments if none of them is annotated with `@CacheKey`, or all the arguments annotated with `@CacheKey` otherwise.  This annotation can also be used on a method with no arguments, a default key derived from the cache name is generated in that case.  If the key does not identify any cache entry, nothing will happen."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/cache.adoc:317
msgid "If the `@CacheResult` or `@CacheInvalidate` annotations are used on a method with no parameters, a unique default cache key derived from the cache name will be generated and used."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:319
#, no-wrap
msgid "@CacheInvalidateAll"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:322
msgid "When a method annotated with `@CacheInvalidateAll` is invoked, Quarkus will remove all entries from the cache."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:323
#, no-wrap
msgid "@CacheKey"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:327
msgid "When a method argument is annotated with `@CacheKey`, it is identified as a part of the cache key during an invocation of a method annotated with `@CacheResult` or `@CacheInvalidate`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:329
msgid "This annotation is optional and should only be used when some of the method arguments are NOT part of the cache key."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:330
#, no-wrap
msgid "Composite cache key building logic"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:333
msgid "When a cache key is built from several method arguments, whether they are explicitly identified with `@CacheKey` or not, the building logic depends on the order of these arguments in the method signature. On the other hand, the arguments names are not used at all and do not have any effect on the cache key."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:342
#, no-wrap
msgid ""
"import io.quarkus.cache.CacheInvalidate;\n"
"import io.quarkus.cache.CacheResult;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:345
#: upstream/_versions/1.7/guides/cache.adoc:429
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CachedService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:350
#, no-wrap
msgid ""
"    @CacheResult(cacheName = \"foo\")\n"
"    public Object load(String keyElement1, Integer keyElement2) {\n"
"        // Call expensive service here.\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:354
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    public void invalidate1(String keyElement2, Integer keyElement1) { <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:358
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    public void invalidate2(Integer keyElement2, String keyElement1) { <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:362
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    public void invalidate3(Object notPartOfTheKey, @CacheKey String keyElement1, @CacheKey Integer keyElement2) { <3>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:367
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    public void invalidate4(Object notPartOfTheKey, @CacheKey Integer keyElement2, @CacheKey String keyElement1) { <4>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:369
msgid "Calling this method WILL invalidate values cached by the `load` method even if the key elements names have been swapped."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:370
#: upstream/_versions/1.7/guides/cache.adoc:372
msgid "Calling this method WILL NOT invalidate values cached by the `load` method because the key elements order is different."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:371
msgid "Calling this method WILL invalidate values cached by the `load` method because the key elements order is the same."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:373
#, no-wrap
msgid "Configuring the underlying caching provider"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:377
msgid "This extension uses https://github.com/ben-manes/caffeine[Caffeine] as its underlying caching provider.  Caffeine is a high performance, near optimal caching library."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:378
#, no-wrap
msgid "Caffeine configuration properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:382
msgid "Each of the Caffeine caches backing up the Quarkus application data caching extension can be configured using the following properties in the `application.properties` file. By default caches do not perform any type of eviction if not configured."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/cache.adoc:386
msgid "You need to replace `cache-name` in all of the following properties with the real name of the cache you want to configure."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:391
msgid "Here's what your cache configuration could look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:398
#, no-wrap
msgid ""
"quarkus.cache.caffeine.\"foo\".initial-capacity=10 <1>\n"
"quarkus.cache.caffeine.\"foo\".maximum-size=20\n"
"quarkus.cache.caffeine.\"foo\".expire-after-write=60S\n"
"quarkus.cache.caffeine.\"bar\".maximum-size=1000 <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:400
msgid "The `foo` cache is being configured."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:401
msgid "The `bar` cache is being configured."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:402
#, no-wrap
msgid "Context propagation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:406
msgid "This extension relies on non-blocking calls internally for cache values computations.  By default, there's no context propagation between the calling thread (from your application) and a thread that performs such a computation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:408
msgid "The context propagation can be enabled for this extension by simply adding the `quarkus-smallrye-context-propagation` extension to your project."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:410
msgid "If you see a `javax.enterprise.context.ContextNotActiveException` in your application log during a cache computation, then you probably need to enable the context propagation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:412
msgid "You can find more information about context propagation in Quarkus in the link:context-propagation[dedicated guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:413
#, no-wrap
msgid "Annotated beans examples"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:415
#, no-wrap
msgid "Implicit simple cache key"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:426
#: upstream/_versions/1.7/guides/cache.adoc:489
#: upstream/_versions/1.7/guides/cache.adoc:520
#, no-wrap
msgid ""
"import io.quarkus.cache.CacheInvalidate;\n"
"import io.quarkus.cache.CacheInvalidateAll;\n"
"import io.quarkus.cache.CacheResult;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:434
#, no-wrap
msgid ""
"    @CacheResult(cacheName = \"foo\")\n"
"    public Object load(Object key) { <1>\n"
"        // Call expensive service here.\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:438
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    public void invalidate(Object key) { <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:443
#: upstream/_versions/1.7/guides/cache.adoc:475
#: upstream/_versions/1.7/guides/cache.adoc:506
#, no-wrap
msgid ""
"    @CacheInvalidateAll(cacheName = \"foo\")\n"
"    public void invalidateAll() {\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:445
msgid "The cache key is implicit since there's no `@CacheKey` annotation."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:446
#, no-wrap
msgid "Explicit composite cache key"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:453
#: upstream/_versions/1.7/guides/cache.adoc:485
#, no-wrap
msgid "import javax.enterprise.context.Dependent;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:458
#, no-wrap
msgid ""
"import io.quarkus.cache.CacheInvalidate;\n"
"import io.quarkus.cache.CacheInvalidateAll;\n"
"import io.quarkus.cache.CacheKey;\n"
"import io.quarkus.cache.CacheResult;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:461
#: upstream/_versions/1.7/guides/cache.adoc:492
#, no-wrap
msgid ""
"@Dependent\n"
"public class CachedService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:466
#, no-wrap
msgid ""
"    @CacheResult(cacheName = \"foo\")\n"
"    public String load(@CacheKey Object keyElement1, @CacheKey Object keyElement2, Object notPartOfTheKey) { <1>\n"
"        // Call expensive service here.\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:470
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    public void invalidate(@CacheKey Object keyElement1, @CacheKey Object keyElement2, Object notPartOfTheKey) { <1>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:477
msgid "The cache key is explicitly composed of two elements. The method signature also contains a third argument which is not part of the key."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:478
#, no-wrap
msgid "Default cache key"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:497
#, no-wrap
msgid ""
"    @CacheResult(cacheName = \"foo\")\n"
"    public String load() { <1>\n"
"        // Call expensive service here.\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:501
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    public void invalidate() { <1>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:508
msgid "A unique default cache key derived from the cache name is generated and used."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:509
#, no-wrap
msgid "Multiple annotations on a single method"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:516
#, no-wrap
msgid "import javax.inject.Singleton;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:523
#, no-wrap
msgid ""
"@Singleton\n"
"public class CachedService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:529
#, no-wrap
msgid ""
"    @CacheInvalidate(cacheName = \"foo\")\n"
"    @CacheResult(cacheName = \"foo\")\n"
"    public String forceCacheEntryRefresh(Object key) { <1>\n"
"        // Call expensive service here.\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:535
#, no-wrap
msgid ""
"    @CacheInvalidateAll(cacheName = \"foo\")\n"
"    @CacheInvalidateAll(cacheName = \"bar\")\n"
"    public void multipleInvalidateAll(Object key) { <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:537
msgid "This method can be used to force a refresh of the cache entry corresponding to the given key."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:538
msgid "This method will invalidate all entries from the `foo` and `bar` caches with a single call."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/cache.adoc:540
#, no-wrap
msgid "Negative caching and nulls"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:545
msgid "Sometimes one wants to cache the results of an (expensive) remote call.  If the remote call fails, one may not want to cache the result or exception, but rather re-try the remote call on the next invocation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:548
msgid "A simple approach could be to catch the exception and return `null`, so that the caller can act accordingly:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/cache.adoc:549
#, no-wrap
msgid "Sample code"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:553
#, no-wrap
msgid "    public void caller(int val) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:561
#, no-wrap
msgid ""
"        Integer result = callRemote(val);  //<1>\n"
"        if (result == null) {\n"
"            System.out.println(\"Result is \" + result);\n"
"        else {\n"
"           System.out.println(\"Got an exception\");\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:564
#, no-wrap
msgid ""
"    @CacheResult(name = \"foo\")\n"
"    private Integer callRemote(int val)  {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:572
#, no-wrap
msgid ""
"        try {\n"
"            Integer val = remoteWebServer.getResult(val);  //<2>\n"
"            return val;\n"
"        } catch (Exception e) {\n"
"            return null;  // <3>\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:574
#: upstream/_versions/1.7/guides/cache.adoc:607
msgid "Call the method to call the remote"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:575
msgid "Do the remote call and return its result"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:576
msgid "Return in case of exception"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:581
msgid "This approach has an unfortunate side effect: as we said before, Quarkus can also cache `null` values. Which means that the next call to `callRemote()` with the same parameter value will be answered out of the cache, returning `null` and no remote call will be done.  This may be desired in some scenarios, but usually one wants to retry the remote call until it returns a result."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/cache.adoc:582
#, no-wrap
msgid "Let exceptions bubble up"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:586
msgid "To prevent the cache from caching (marker) results from a remote call, we need to let the exception bubble out of the called method and catch it at the caller side:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/cache.adoc:587
#, no-wrap
msgid "With Exception bubbling up"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:597
#, no-wrap
msgid ""
"   public void caller(int val) {\n"
"       try {\n"
"           Integer result = callRemote(val);  //<1>\n"
"           System.out.println(\"Result is \" + result);\n"
"       } catch (Exception e) {\n"
"           System.out.println(\"Got an exception\");\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:600
#, no-wrap
msgid ""
"   @CacheResult(name = \"foo\")\n"
"   private Integer callRemote(int val) throws Exception { // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:603
#, no-wrap
msgid ""
"      Integer val = remoteWebServer.getResult(val);  //<3>\n"
"      return val;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/cache.adoc:605
#, no-wrap
msgid "   }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:608
msgid "Exceptions may bubble up"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:609
msgid "This can throw all kinds of remote exceptions"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:615
msgid "When the call to the remote throws an exception, the cache does not store the result, so that a subsequent call to `callRemote()` with the same parameter value will not be answered out of the cache.  It will instead result in another attempt to call the remote."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/cache.adoc:620
msgid "The previous code example has the side-effect that the cache logs the thrown exception with a long stack trace to the console. This is done to inform developers that something exceptional has happened, but if you have a setup like above, you are already catching the exception and know what you are doing."
msgstr ""
