# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-01 01:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/mailer.adoc:6
#, no-wrap
msgid "Quarkus - Sending emails"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:11
msgid "This guide demonstrates how your Quarkus application can send emails using an SMTP server."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:12
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:15
msgid "To complete this guide, you need:"
msgstr "要完成本指南，您需要："

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:17
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:18
msgid "The SMTP hostname, port and credentials, and an email address"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:19
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:20
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:21
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:22
msgid "GraalVM installed if you want to run in native mode."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:23
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:27
msgid "In this guide, we are going to see how you can send emails from a Quarkus application.  It covers simple emails, attachments, inlined attachments, the reactive and imperative APIs..."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:28
#, no-wrap
msgid "Creating the Maven Project"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:31
msgid "Create a new project with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:39
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=sending-email-quickstart \\\n"
"    -Dextensions=\"mailer\"\n"
"cd sending-email-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:42
msgid "If you already have an existing project, add the `mailer` extension:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:46
#, no-wrap
msgid "./mvnw quarkus:add-extensions -Dextensions=\"mailer\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:49
msgid "This will add the following to your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:56
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-mailer</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:58
#, no-wrap
msgid "Configuring the mailer"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:62
msgid "The Quarkus mailer is using SMTP. In the `src/main/resources/application.properties` file, you need to configure the host, port, username, password as well as the other configuration aspect.  Note that the password can also be configured using system properties and environment variables."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:64
msgid "Here is an example using _sendgrid_:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:74
#, no-wrap
msgid ""
"quarkus.mailer.from=test@quarkus.io\n"
"quarkus.mailer.host=smtp.sendgrid.net\n"
"quarkus.mailer.port=465\n"
"quarkus.mailer.ssl=true\n"
"quarkus.mailer.username=....\n"
"quarkus.mailer.password=....\n"
"quarkus.mailer.mock=false\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/mailer.adoc:86
msgid "It is recommended to encrypt any sensitive data, such as the `quarkus.mailer.password`.  One approach is to save the value into a secure store like HashiCorp Vault, and refer to it from the configuration.  Assuming for instance that Vault contains key `mail-password` at path `myapps/myapp/myconfig`, then the mailer extension can be simply configured as: ``` ...  # path within the kv secret engine where is located the application sensitive configuration quarkus.vault.secret-config-kv-path=myapps/myapp/myconfig"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/mailer.adoc:92
msgid "...  quarkus.mailer.password=${mail-password} ``` Please note that the password value is evaluated only once, at startup time. If `mail-password` was changed in Vault, the only way to get the new value would be to restart the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:96
msgid "For more information about the Mailer extension configuration please refer to the <<configuration-reference, Configuration Reference>>."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:97
#, no-wrap
msgid "Sending simple emails"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:100
msgid "In a JAX-RS resource, or in a bean, you can inject the mailer as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:105
#, no-wrap
msgid ""
"@Inject\n"
"Mailer mailer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:108
#, no-wrap
msgid ""
"@Inject\n"
"ReactiveMailer reactiveMailer;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:111
msgid "There are 2 APIs:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:113
msgid "`io.quarkus.mailer.Mailer` provides the imperative (blocking and synchronous) API;"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:114
msgid "`io.quarkus.mailer.reactive.ReactiveMailer` provides the reactive (non-blocking and asynchronous) API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:116
msgid "The two APIs are equivalent feature-wise. Actually the `Mailer` implementation is built on top of the `ReactiveMailer` implementation."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/mailer.adoc:118
#, no-wrap
msgid "Deprecation"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/mailer.adoc:121
msgid "`io.quarkus.mailer.ReactiveMailer` is deprecated in favor of `io.quarkus.mailer.reactive.ReactiveMailer`."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/mailer.adoc:124
#, no-wrap
msgid "Mutiny"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/mailer.adoc:127
msgid "The reactive mailer uses Mutiny reactive types, if you're not familiar with them, read the link:getting-started-reactive#mutiny[Getting Started with Reactive guide] first."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:130
msgid "To send a simple email, proceed as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:137
#, no-wrap
msgid ""
"// Imperative API:\n"
"mailer.send(Mail.withText(\"to@acme.org\", \"A simple email from quarkus\", \"This is my body.\"));\n"
"// Reactive API:\n"
"Uni<Void> stage = reactiveMailer.send(Mail.withText(\"to@acme.org\", \"A reactive email from quarkus\", \"This is my body.\"));\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:140
msgid "For example, you can use the `Mailer` in a JAX-RS endpoint as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:149
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/simple\")\n"
"public Response sendASimpleEmail() {\n"
"    mailer.send(Mail.withText(\"to@acme.org\", \"A simple email from quarkus\", \"This is my body\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:158
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/async\")\n"
"public CompletionStage<Response> sendASimpleEmailAsync() {\n"
"    return reactiveMailer.send(\n"
"            Mail.withText(\"to@acme.org\", \"A reactive email from quarkus\", \"This is my body\"))\n"
"            .subscribeAsCompletionStage()\n"
"            .thenApply(x -> Response.accepted().build());\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/mailer.adoc:163
msgid "With the `quarkus-resteasy-mutiny` extension, you can return an instance of `Uni` directly."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:166
msgid "With such a JAX-RS resource, you can check that everything is working with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:171
#, no-wrap
msgid ""
"curl http://localhost:8080/simple\n"
"curl http://localhost:8080/async\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:176
msgid "You can create new `io.quarkus.mailer.Mail` instances from the constructor or from the `Mail.withText` and `Mail.withHtml` helper methods. The `Mail` instance lets you add recipients (to, cc, or bcc), set the subject, headers, sender (from) address..."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:178
msgid "You can also send several `Mail` objects in one call:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:182
#, no-wrap
msgid "mailer.send(mail1, mail2, mail3);\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:184
#, no-wrap
msgid "Sending attachments"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:187
msgid "To send attachment, just use the `addAttachment` methods on the `io.quarkus.mailer.Mail` instance:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:199
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/attachment\")\n"
"public Response sendEmailWithAttachment() {\n"
"    mailer.send(Mail.withText(\"to@acme.org\", \"An email from quarkus with attachment\",\n"
"            \"This is my body\")\n"
"            .addAttachment(\"my-file.txt\",\n"
"                \"content of my file\".getBytes(), \"text/plain\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:202
msgid "Attachments can be created from raw bytes (as shown in the snippet) or files."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:203
#, no-wrap
msgid "Sending HTML emails with inlined attachments"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:207
msgid "When sending HTML email, you can add inlined attachments.  For example, you can send an image with your email, and this image will be displayed in the mail content. If you put the image file into resources folder, you should specify the full path to the file. \"e.g.\" \"META-INF/resources/quarkus-logo.png\" otherwise quarkus will lookup in the root folder of the project"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:222
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/html\")\n"
"public Response sendingHTML() {\n"
"    String body = \"<strong>Hello!</strong>\" + \"\\n\" +\n"
"        \"<p>Here is an image for you: <img src=\\\"cid:my-image@quarkus.io\\\"/></p>\" +\n"
"        \"<p>Regards</p>\";\n"
"    mailer.send(Mail.withHtml(\"to@acme.org\", \"An email in HTML\", body)\n"
"        .addInlineAttachment(\"quarkus-logo.png\",\n"
"            new File(\"quarkus-logo.png\"),\n"
"            \"image/png\", \"<my-image@quarkus.io>\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:228
msgid "Note the _content-id_ format and reference.  By spec, when you create the inline attachment, the content-id must be structured as follows: `<id@domain>`.  If you don't wrap your content-id between `<>`, it is automatically wrapped for you.  When you want to reference your attachment, for instance in the `src` attribute, use `cid:id@domain` (without the `<` and `>`)."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:229
#, no-wrap
msgid "Message Body Based on Qute Templates"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:232
msgid "It's also possible to inject a mail template, where the message body is created automatically using link:qute[Qute templates]."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:237
#, no-wrap
msgid ""
"@Path(\"\")\n"
"public class MailingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:242
#, no-wrap
msgid ""
"    @CheckedTemplate\n"
"    class Templates {\n"
"        public static native MailTemplateInstance hello(String name); <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:255
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/mail\")\n"
"    public CompletionStage<Response> send() {\n"
"        // the template looks like: Hello {name}! <2>\n"
"        return Templates.hello(\"John\")\n"
"           .to(\"to@acme.org\") <3>\n"
"           .subject(\"Hello from Qute template\")\n"
"           .send() <4>\n"
"           .subscribeAsCompletionStage()\n"
"           .thenApply(x -> Response.accepted().build());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:258
msgid "By convention, the enclosing class name and method names are used to locate the template. In this particular case, we will use the `MailingResource/hello.html` and `MailingResource/hello.txt` templates to create the message body."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:259
#: upstream/_versions/1.7/guides/mailer.adoc:286
msgid "Set the data used in the template."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:260
#: upstream/_versions/1.7/guides/mailer.adoc:285
msgid "Create a mail template instance and set the recipient."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:261
#: upstream/_versions/1.7/guides/mailer.adoc:287
msgid "`MailTemplate.send()` triggers the rendering and, once finished, sends the e-mail via a `Mailer` instance."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:263
#: upstream/_versions/1.7/guides/mailer.adoc:289
msgid "Injected mail templates are validated during build. If there is no matching template in `src/main/resources/templates` the build fails."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:265
msgid "You can also do this without type-safe templates:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:270
#, no-wrap
msgid ""
"@Inject\n"
"MailTemplate hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:282
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/mail\")\n"
"public CompletionStage<Response> send() {\n"
"    return hello.to(\"to@acme.org\") <2>\n"
"       .subject(\"Hello from Qute template\")\n"
"       // the template looks like: Hello {name}!\n"
"       .data(\"name\", \"John\") <3>\n"
"       .send() <4>\n"
"       .subscribeAsCompletionStage()\n"
"       .thenApply(x -> Response.accepted().build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:284
msgid "If there is no `@ResourcePath` qualifier provided, the field name is used to locate the template. In this particular case, we will use the `hello.html` and `hello.txt` templates to create the message body."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:290
#, no-wrap
msgid "Testing email sending"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:295
msgid "Because it is very inconvenient to send emails during development and testing, you can set the `quarkus.mailer.mock` boolean configuration to `true` to not actually send emails but print them on stdout and collect them in a `MockMailbox` bean instead.  This is the default if you are running Quarkus in `DEV` or `TEST` mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:297
msgid "You can then write tests to verify that your emails were sent, for example, by a REST endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:302
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class MailTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:304
#, no-wrap
msgid "    private static final String TO = \"foo@quarkus.io\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:307
#, no-wrap
msgid ""
"    @Inject\n"
"    MockMailbox mailbox;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:312
#, no-wrap
msgid ""
"    @BeforeEach\n"
"    void init() {\n"
"        mailbox.clear();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:322
#, no-wrap
msgid ""
"    @Test\n"
"    void testTextMail() throws MessagingException, IOException {\n"
"        // call a REST endpoint that sends email\n"
"        given()\n"
"        .when()\n"
"        .get(\"/send-email\")\n"
"        .then()\n"
"           .statusCode(202)\n"
"           .body(is(\"OK\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:329
#, no-wrap
msgid ""
"        // verify that it was sent\n"
"        List<Mail> sent = mailbox.getMessagesSentTo(TO);\n"
"        assertThat(sent).hasSize(1);\n"
"        Mail actual = sent.get(0);\n"
"        assertThat(actual.getText()).contains(\"Wake up!\");\n"
"        assertThat(actual.getSubject()).isEqualTo(\"Alarm!\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:333
#, no-wrap
msgid ""
"        assertThat(mailbox.getTotalMessagesSent()).isEqualTo(6);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:335
#, no-wrap
msgid "Gmail specific configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:338
msgid "If you want to use the Gmail SMTP server, first create a dedicated password in `Google Account > Security > App passwords` or go to https://myaccount.google.com/apppasswords."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:340
msgid "When done, you can configure your Quarkus application by adding the following properties to your `application.properties`:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:342
msgid "With TLS:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:352
#, no-wrap
msgid ""
"quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN\n"
"quarkus.mailer.from=YOUREMAIL@gmail.com\n"
"quarkus.mailer.host=smtp.gmail.com\n"
"quarkus.mailer.port=587\n"
"quarkus.mailer.start-tls=REQUIRED\n"
"quarkus.mailer.username=YOUREMAIL@gmail.com\n"
"quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:355
msgid "Or with SSL:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:365
msgid "  quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN quarkus.mailer.from=YOUREMAIL@gmail.com quarkus.mailer.host=smtp.gmail.com quarkus.mailer.port=465 quarkus.mailer.ssl=true quarkus.mailer.username=YOUREMAIL@gmail.com quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:372
#, no-wrap
msgid ""
"[NOTE]\n"
"====\n"
"The `quarkus.mailer.auth-methods` configuration option is needed for the Quarkus mailer to support password authentication with Gmail.\n"
"By default both the mailer and Gmail default to `XOAUTH2` which requires registering an application, getting tokens, etc.\n"
"====\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:373
#, no-wrap
msgid "Using SSL with native executables"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:377
msgid "Note that if you enable SSL for the mailer and you want to build a native executable, you will need to enable the SSL support.  Please refer to the link:native-and-ssl[Using SSL With Native Executables] guide for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:378
#, no-wrap
msgid "Using the underlying Vert.x Mail Client"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:382
msgid "The Quarkus Mailer is implemented on top of the https://vertx.io/docs/vertx-mail-client/java/[Vert.x Mail Client], providing an asynchronous and non-blocking way to send emails.  If you need fine control on how the mail is sent, for instance if you need to retrieve the message ids, you can inject the underlying client, and use it directly:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:384
msgid "[source, java]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/mailer.adoc:386
msgid "@Inject MailClient client;"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:389
#, no-wrap
msgid "Three API flavors are exposed:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:394
#, no-wrap
msgid ""
"* the Mutiny client (`io.vertx.mutiny.ext.mail.MailClient`)\n"
"* the Axle client (`io.vertx.axle.ext.mail.MailClient`), using `CompletionStage` and Reactive Streams `Publisher` - deprecated, it is recommended to switch to the Mutiny client\n"
"* the RX Java 2 client (`io.vertx.reactivex.ext.mail.MailClient`) - deprecated, it is recommended to switch to the Mutiny client\n"
"* the bare client (`io.vertx.ext.mail.MailClient`)\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:396
#, no-wrap
msgid "Check the link:vertx[Using Vert.x guide] for further details about these different APIs and how to select the most suitable for you.\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:399
#, no-wrap
msgid ""
"The retrieved `MailClient` is configured using the configuration key presented above.\n"
"You can also create your own instance, and pass your own configuration.\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:400
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:404
msgid "This guide has shown how you can send emails from a Quarkus application.  The _mailer_ extension works in JVM and native mode."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:407
msgid "[[configuration-reference]]"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/mailer.adoc:407
#, no-wrap
msgid "Mailer Configuration Reference"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/mailer.adoc:409
msgid "include::{generated-dir}/config/quarkus-mailer.adoc[opts=optional, leveloffset=+1]"
msgstr ""
