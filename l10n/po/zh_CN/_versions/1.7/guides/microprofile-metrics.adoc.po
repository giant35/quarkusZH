# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-01 01:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:6
#, no-wrap
msgid "Quarkus - MicroProfile Metrics"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:12
msgid "This guide demonstrates how your Quarkus application can utilize the MicroProfile Metrics specification through the SmallRye Metrics extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:15
msgid "MicroProfile Metrics allows applications to gather various metrics and statistics that provide insights into what is happening inside the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:19
msgid "The metrics can be read remotely using JSON format or the OpenMetrics format, so that they can be processed by additional tools such as Prometheus, and stored for analysis and visualisation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:23
msgid "Apart from application-specific metrics, which are described in this guide, you may also utilize built-in metrics exposed by various Quarkus extensions. These are described in the guide for each particular extension that supports built-in metrics."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:24
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:27
msgid "To complete this guide, you need:"
msgstr "要完成本指南，您需要："

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:29
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:30
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:31
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:32
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:33
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:37
msgid "In this example, we build a very simple microservice which offers one REST endpoint and that endpoint serves for determining whether a number is prime. The implementation class is annotated with some metric annotations so that while responding to user's requests, some metrics are gathered. The meaning of each metric will be explained later."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:38
#, no-wrap
msgid "Solution"
msgstr "完整源码"

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:42
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:44
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:46
msgid "The solution is located in the `microprofile-metrics-quickstart` {quickstarts-tree-url}/microprofile-metrics-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:47
#, no-wrap
msgid "Creating the Maven Project"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:50
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:58
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=microprofile-metrics-quickstart \\\n"
"    -Dextensions=\"smallrye-metrics\"\n"
"cd microprofile-metrics-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:61
msgid "This command generates a Maven project, importing the `smallrye-metrics` extension which is an implementation of the MicroProfile Metrics specification used in Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:64
msgid "If you already have your Quarkus project configured, you can add the `smallrye-metrics` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:68
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"smallrye-metrics\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:71
msgid "This will add the following to your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:78
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-metrics</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:80
#, no-wrap
msgid "Writing the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:85
msgid "The application consists of a single class that implements an algorithm for checking whether a number is prime.  This algorithm is exposed over a REST interface. Additionally, we need a few annotations to make sure that our desired metrics are calculated over time and can be exported for manual analysis or processing by additional tooling."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:87
msgid "The metrics that we will gather are these:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:89
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:206
msgid "`performedChecks`: A counter which is increased by one each time the user asks about a number."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:90
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:207
msgid "`highestPrimeNumberSoFar`: This is a gauge that stores the highest number that was asked about by the user and which was determined to be prime."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:91
msgid "`checksTimer`: This is a timer, therefore a compound metric that benchmarks how much time the primality tests take. We will explain that one in more details later."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:93
msgid "The full source code looks like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:97
#, no-wrap
msgid "package org.acme.microprofile.metrics;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:103
#, no-wrap
msgid ""
"import org.eclipse.microprofile.metrics.MetricUnits;\n"
"import org.eclipse.microprofile.metrics.annotation.Counted;\n"
"import org.eclipse.microprofile.metrics.annotation.Gauge;\n"
"import org.eclipse.microprofile.metrics.annotation.Timed;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:107
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:110
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"public class PrimeNumberChecker {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:112
#, no-wrap
msgid "    private long highestPrimeNumberSoFar = 2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:141
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{number}\")\n"
"    @Produces(\"text/plain\")\n"
"    @Counted(name = \"performedChecks\", description = \"How many primality checks have been performed.\")\n"
"    @Timed(name = \"checksTimer\", description = \"A measure of how long it takes to perform the primality test.\", unit = MetricUnits.MILLISECONDS)\n"
"    public String checkIfPrime(@PathParam long number) {\n"
"        if (number < 1) {\n"
"            return \"Only natural numbers can be prime numbers.\";\n"
"        }\n"
"        if (number == 1) {\n"
"            return \"1 is not prime.\";\n"
"        }\n"
"        if (number == 2) {\n"
"                    return \"2 is prime.\";\n"
"        }\n"
"        if (number % 2 == 0) {\n"
"            return number + \" is not prime, it is divisible by 2.\";\n"
"        }\n"
"        for (int i = 3; i < Math.floor(Math.sqrt(number)) + 1; i = i + 2) {\n"
"            if (number % i == 0) {\n"
"                return number + \" is not prime, is divisible by \" + i + \".\";\n"
"            }\n"
"        }\n"
"        if (number > highestPrimeNumberSoFar) {\n"
"            highestPrimeNumberSoFar = number;\n"
"        }\n"
"        return number + \" is prime.\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:146
#, no-wrap
msgid ""
"    @Gauge(name = \"highestPrimeNumberSoFar\", unit = MetricUnits.NONE, description = \"Highest prime number so far.\")\n"
"    public Long highestPrimeNumberSoFar() {\n"
"        return highestPrimeNumberSoFar;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:148
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:150
#, no-wrap
msgid "Running and using the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:153
msgid "To run the microservice in dev mode, use `./mvnw clean compile quarkus:dev`"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:154
#, no-wrap
msgid "Generate some values for the metrics"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:156
msgid "First, ask the endpoint whether some numbers are prime numbers."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:160
#, no-wrap
msgid "curl localhost:8080/350\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:163
msgid "The application will respond that 350 is not a prime number because it can be divided by 2."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:165
msgid "Now for some large prime number so that the test takes a bit more time:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:169
#, no-wrap
msgid "curl localhost:8080/629521085409773\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:173
msgid "The application will respond that 629521085409773 is a prime number.  If you want, try some more calls with numbers of your choice."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:174
#, no-wrap
msgid "Review the generated metrics"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:177
msgid "To view the metrics, execute `curl -H\"Accept: application/json\" localhost:8080/metrics/application` You will receive a response such as:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:201
#, no-wrap
msgid ""
"{\n"
"  \"org.acme.microprofile.metrics.PrimeNumberChecker.checksTimer\" : {\n"
"    \"p50\": 217.231273,\n"
"    \"p75\": 217.231273,\n"
"    \"p95\": 217.231273,\n"
"    \"p98\": 217.231273,\n"
"    \"p99\": 217.231273,\n"
"    \"p999\": 217.231273,\n"
"    \"min\": 0.58961,\n"
"    \"mean\": 112.15909190834819,\n"
"    \"max\": 217.231273,\n"
"    \"stddev\": 108.2721053982776,\n"
"    \"count\": 2,\n"
"    \"meanRate\": 0.04943519091742238,\n"
"    \"oneMinRate\": 0.2232140583080189,\n"
"    \"fiveMinRate\": 0.3559527083952095,\n"
"    \"fifteenMinRate\": 0.38474303050928976\n"
"  },\n"
"  \"org.acme.microprofile.metrics.PrimeNumberChecker.performedChecks\" : 2,\n"
"  \"org.acme.microprofile.metrics.PrimeNumberChecker.highestPrimeNumberSoFar\" : 629521085409773\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:204
msgid "Let's explain the meaning of each metric:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:208
msgid "`checksTimer`: This is a timer, therefore a compound metric that benchmarks how much time the primality tests take. All durations are measured in milliseconds. It consists of these values:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:209
msgid "`min`: The shortest duration it took to perform a primality test, probably it was performed for a small number."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:210
msgid "`max`: The longest duration, probably it was with a large prime number."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:211
msgid "`mean`: The mean value of the measured durations."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:212
msgid "`stddev`: The standard deviation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:213
msgid "`count`: The number of observations (so it will be the same value as `performedChecks`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:214
msgid "`p50, p75, p95, p99, p999`: Percentiles of the durations. For example the value in `p95` means that 95 % of the measurements were faster than this duration."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:215
msgid "`meanRate, oneMinRate, fiveMinRate, fifteenMinRate`: Mean throughput and one-, five-, and fifteen-minute exponentially-weighted moving average throughput."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:217
msgid "If you prefer an OpenMetrics export rather than the JSON format, remove the `-H\"Accept: application/json\"` argument from your command line."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-metrics.adoc:218
#, no-wrap
msgid "Configuration Reference"
msgstr ""
