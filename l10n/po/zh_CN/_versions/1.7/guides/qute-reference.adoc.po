# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-07-11 01:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/qute-reference.adoc:6
#, no-wrap
msgid "Quarkus - Qute Reference Guide"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/qute-reference.adoc:18
#, no-wrap
msgid "Hello World Example"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:23
msgid "In this example, we'd like to demonstrate the basic workflow when working with Qute templates.  Let's start with a simple hello world example.  We will always need some *template contents*:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:24
#: upstream/_versions/1.7/guides/qute-reference.adoc:108
#, no-wrap
msgid "hello.html"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:30
#, no-wrap
msgid ""
"<html>\n"
"  <p>Hello {name}! <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:32
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:35
msgid "Then, we will need to parse the contents into a *template definition* Java object.  A template definition is an instance of `io.quarkus.qute.Template`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:39
msgid "If using Qute \"standalone\" you'll need to create an instance of `io.quarkus.qute.Engine` first.  The `Engine` represents a central point for template management with dedicated configuration.  Let's use the convenient builder:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:43
#, no-wrap
msgid "Engine engine = Engine.builder().addDefaults().build();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:46
msgid "In Quarkus, there is a preconfigured `Engine` available for injection - see <<quarkus_integration>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:48
msgid "If we have an `Engine` instance we could parse the template contents:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:52
#, no-wrap
msgid "Template helloTemplate = engine.parse(helloHtmlContent);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:55
msgid "In Quarkus, you can simply inject the template definition. The template is automatically parsed and cached - see <<quarkus_integration>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:57
msgid "Finally, we will create a *template instance*, set the data and render the output:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:62
#, no-wrap
msgid ""
"// Renders <html><p>Hello Jim!</p></html>\n"
"helloTemplate.data(\"name\", \"Jim\").render(); <1> \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:64
msgid "`Template.data(String, Object)` is a convenient method that creates a template instance and sets the data in one step."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:66
msgid "So the workflow is simple:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:68
msgid "Create template contents (`hello.html`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:69
msgid "Parse template definition (`io.quarkus.qute.Template`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:70
msgid "Create template instance (`io.quarkus.qute.TemplateInstance`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:71
msgid "Render output."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:73
msgid "The `Engine` is able to cache the definitions so that it's not necessary to parse the contents again and again."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:75
msgid "In Quarkus, the caching is done automatically."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/qute-reference.adoc:76
#, no-wrap
msgid "Core Features"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:78
#, no-wrap
msgid "Syntax and Building Blocks"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:81
msgid "The dynamic parts of a template include:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:83
#, no-wrap
msgid "*Comment* \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:84
#, no-wrap
msgid "Starts with `{!` and ends with `!}`:  `{! This is a comment !}`,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:85
#: upstream/_versions/1.7/guides/qute-reference.adoc:99
#, no-wrap
msgid "Could be multi-line,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:86
#, no-wrap
msgid "May contain expressions and sections: `{! {#if true} !}`.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:87
#, no-wrap
msgid "*Expression*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:88
#, no-wrap
msgid "Outputs the evaluated value,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:89
#, no-wrap
msgid "Simple properties: `{foo}`, `{item.name}`,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:90
#, no-wrap
msgid "Virtual methods: `{item.get(name)}`, `{name ?: 'John'}`,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:91
#, no-wrap
msgid "With namespace: `{inject:colors}`.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:92
#, no-wrap
msgid "*Section*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:93
#, no-wrap
msgid "May contain expressions and sections: `{#if foo}{foo.name}{/if}`,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:94
#, no-wrap
msgid "The name in the closing tag is optional: `{#if active}ACTIVE!{/}`,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:95
#, no-wrap
msgid "Can be empty: `{#myTag image=true /}`,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:96
#, no-wrap
msgid "May declare nested section blocks: `{#if item.valid} Valid. {#else} Invalid. {/if}` and decide which block to render.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:97
#, no-wrap
msgid "*Unparsed Character Data*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:98
#, no-wrap
msgid "Starts with `{[` and ends with `]}`: `{[ <script>if(true){alert('Qute is cute!')};</script> ]}`,\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:100
#, no-wrap
msgid "Used to mark the content that should be rendered but not parsed.\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:101
#, no-wrap
msgid "Identifiers"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:107
msgid "Expressions/tags must start with a curly bracket (`{`) followed by a valid identifier.  A valid identifier is a digit, an alphabet character, underscore (`_`), or a section command (`#`).  Expressions/tags starting with an invalid identifier are ignored.  A closing curly bracket (`}`) is ignored if not inside an expression/tag."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:119
#, no-wrap
msgid ""
"<html>\n"
"   <body>\n"
"   {_foo}       <1>\n"
"   {  foo}      <2>\n"
"   {{foo}}      <3>\n"
"   {\"foo\":true} <4>\n"
"   </body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:121
msgid "Evaluated: expression starts with underscore."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:122
msgid "Ignored: expression starts with whitespace."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:123
msgid "Ignored: expression starts with `{`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:124
msgid "Ignored: expression starts with `\"`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:126
msgid "It is also possible to use escape sequences `\\{` and `\\}` to insert delimiters in the text. In fact, an escape sequence is usually only needed for the start delimiter, ie. `\\\\{foo}` will be rendered as `{foo}` (no evaluation will happen)."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:127
#, no-wrap
msgid "Removing Standalone Lines From the Template"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:133
msgid "By default, Qute parser removes standalone lines from the template output.  A *standalone line* is a line that contains at least one section tag (e.g. `{#each}` and `{/each}`) or parameter declaration (e.g. `{@org.acme.Foo foo}`) but no expression and non-whitespace character.  In other words, a line that contains no section tag or a parameter declaration is *not* a standalone line.  Likewise, a line that contains an _expression_ or a _non-whitespace character_ is *not* a standalone line."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:134
#, no-wrap
msgid "Template Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:147
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
"     {#for item in items} <1>\n"
"       <li>{item.name} {#if item.active}{item.price}{/if}</li>  <2>\n"
"                          <3>\n"
"     {/for}               <4>\n"
"     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:149
msgid "This is a standalone line and will be removed."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:150
msgid "Not a standalone line - contains an expression and non-whitespace characters"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:151
msgid "Not a standalone line - contains no section tag/parameter declaration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:152
msgid "This is a standalone line."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:153
#, no-wrap
msgid "Default Output"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:160
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
"       <li>Foo 100</li>  \n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:164
#: upstream/_versions/1.7/guides/qute-reference.adoc:182
#, no-wrap
msgid ""
"     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:168
msgid "The default behavior can be disabled by setting the property `quarkus.qute.remove-standalone-lines` to `false`.  In this case, all whitespace characters from a standalone line will be printed to the output."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:169
#, no-wrap
msgid "Output with `quarkus.qute.remove-standalone-lines=false`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:175
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:177
#, no-wrap
msgid "       <li>Foo 100</li>\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:185
#, no-wrap
msgid "Expressions"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:191
msgid "An expression outputs a value.  It consists of one or more parts separated by dot (dot notation) or square brackets (bracket notation).  In the `object[property_name]` syntax, the `property_name` has to be a non-null <<literals, literal>> value.  An expression could start with an optional namespace followed by a colon (`:`)."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:192
#, no-wrap
msgid "Expressions Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:199
#, no-wrap
msgid ""
"{name} <1>\n"
"{item.name} <2>\n"
"{item['name']} <3>\n"
"{global:colors} <4> \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:201
msgid "no namespace, one part: `name`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:202
msgid "no namespace, two parts: `item`, `name`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:203
msgid "equivalent to `{item.name}` but using the bracket notation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:204
msgid "namespace `global`, one part: `colors`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:206
msgid "A part of an expression could be a _virtual method_ in which case the name can be followed by a list of comma-separated parameters in parentheses:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:207
#: upstream/_versions/1.7/guides/qute-reference.adoc:353
#, no-wrap
msgid "Virtual Method Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:212
#, no-wrap
msgid ""
"{item.getLabels(1)} <1>\n"
"{name or 'John'} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:214
msgid "no namespace, two parts - `item`, `getLabels(1)`, the second part is a virtual method with name `getLabels` and params `1`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:215
msgid "infix notation, translated to `name.or('John')`; no namespace, two parts - `name`, `or('John')`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:217
msgid "A parameter of a virtual method can be a <<literals, literal>> value."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:219
#, no-wrap
msgid "Supported Literals"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:222
#, no-wrap
msgid "Literal"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:224
#: upstream/_versions/1.7/guides/qute-reference.adoc:315
#, no-wrap
msgid "Examples"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:225
#, no-wrap
msgid "boolean"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:227
#, no-wrap
msgid "`true`, `false`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:228
#, no-wrap
msgid "null"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:230
#, no-wrap
msgid "`null`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:231
#, no-wrap
msgid "string"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:233
#, no-wrap
msgid "`'value'`, `\"string\"`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:234
#, no-wrap
msgid "integer"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:236
#, no-wrap
msgid "`1`, `-5`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:237
#, no-wrap
msgid "long"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:239
#, no-wrap
msgid "`1l`, `-5L`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:240
#, no-wrap
msgid "double"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:242
#, no-wrap
msgid "`1D`, `-5d`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:243
#, no-wrap
msgid "float"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:245
#, no-wrap
msgid "`1f`, `-5F`"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:247
#, no-wrap
msgid "Resolution"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:254
msgid "The first part of the expression is always resolved against the <<current_context_object, current context object>>.  If no result is found for the first part it's resolved against the parent context object (if available).  For an expression that starts with a namespace the current context object is found using all the available ``NamespaceResolver``s.  For an expression that does not start with a namespace the current context object is *derived from the position* of the tag.  All other parts are resolved using ``ValueResolver``s against the result of the previous resolution."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:260
msgid "For example, expression `{name}` has no namespace and single part - `name`.  The \"name\" will be resolved using all available value resolvers against the current context object.  However, the expression `{global:colors}` has the namespace `global` and single part - `colors`.  First, all available ``NamespaceResolver``s will be used to find the current context object.  And afterwards value resolvers will be used to resolve \"colors\" against the context object found."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:262
#, no-wrap
msgid "Current Context"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:268
msgid "If an expression does not specify a namespace the current context object is derived from the position of the tag.  By default, the current context object represents the data passed to the template instance.  However, sections may change the current context object.  A typical example is the for/each loop - during iteration the content of the section is rendered with each element as the current context object:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:274
#: upstream/_versions/1.7/guides/qute-reference.adoc:456
#, no-wrap
msgid ""
"{#each items}\n"
"  {count}. {it.name} <1>\n"
"{/each}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:279
#, no-wrap
msgid ""
"{! Another form of iteration... !}\n"
"{#for item in items}\n"
"  {count}. {item.name} <2>\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:281
#: upstream/_versions/1.7/guides/qute-reference.adoc:439
msgid "`it` is an implicit alias. `name` is resolved against the current iteration element."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:282
msgid "Loop with an explicit alias `item`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.7/guides/qute-reference.adoc:287
msgid "Data passed to the template instance are always accessible using the `data` namespace.  This could be useful to access data for which the key is overridden:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:302
#, no-wrap
msgid ""
"<html>\n"
"{item.name} <1>\n"
"<ul>\n"
"{#for item in item.getDerivedItems()} <2>\n"
"  <li>\n"
"  {item.name} <3> \n"
"  is derived from\n"
"  {data:item.name} <4>\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:304
msgid "`item` is passed to the template instance as a data object."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:305
msgid "Iterate over the list of derived items."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:306
msgid "`item` is an alias for the iterated element."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:307
msgid "Use the `data` namespace to access the `item` data object."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:310
#, no-wrap
msgid "Built-in Operators"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:313
#: upstream/_versions/1.7/guides/qute-reference.adoc:492
#, no-wrap
msgid "Operator"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:313
#, no-wrap
msgid "Description"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:316
#, no-wrap
msgid "Elvis"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:317
#, no-wrap
msgid "Outputs the default value if the previous part cannot be resolved or resolves to `null`."
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:319
#, no-wrap
msgid "`{person.name ?: 'John'}`, `{person.name or 'John'}`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:320
#, no-wrap
msgid "Ternary"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:321
#, no-wrap
msgid "Shorthand for if-then-else statement. Unlike in <<if_section>> nested operators are not supported."
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:322
#, no-wrap
msgid "`{item.isActive ? item.name : 'Inactive item'}` outputs the value of `item.name` if `item.isActive` resolves to `true`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:325
msgid "The condition in a ternary operator evaluates to `true` if the value is not considered `falsy` as described in the <<if_section>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:327
msgid "In fact, the operators are implemented as \"virtual methods\" that consume one parameter and can be used with infix notation, i.e. `{person.name or 'John'}` is translated to `{person.name.or('John')}`."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:328
#, no-wrap
msgid "Character Escapes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:332
msgid "For HTML and XML templates the `'`, `\"`, `<`, `>`, `&` characters are escaped by default.  If you need to render the unescaped value:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:334
msgid "Use the `raw` or `safe` properties implemented as extension methods of the `java.lang.Object`,"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:335
msgid "Wrap the `String` value in a `io.quarkus.qute.RawString`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:342
#, no-wrap
msgid ""
"<html>\n"
"<h1>{title}</h1> <1>\n"
"{paragraph.raw} <2>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:344
msgid "`title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:345
msgid "`paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:346
#, no-wrap
msgid "Virtual Methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:352
msgid "A virtual method is a *part of an expression* that looks like a regular Java method invocation.  It's called \"virtual\" because it does not have to match the actual method of a Java class.  In fact, like normal properties a virtual method is also handled by a value resolver.  The only difference is that for virtual methods a value resolver consumes parameters that are also expressions."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:359
#, no-wrap
msgid ""
"<html>\n"
"<h1>{item.buildName(item.name,5)}</h1> <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:361
#, no-wrap
msgid "`buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` . The virtual method could be evaluated by a value resolver generated for the following Java class:   \n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:369
#, no-wrap
msgid ""
"class Item {\n"
"   String buildName(String name, int age) {\n"
"      return name + \":\" + age;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:372
msgid "Virtual methods are usually evaluated by value resolvers generated for <<template_extension_methods,@TemplateExtension methods>>, <<template_data,@TemplateData>> or classes used in <<parameter_declarations,parameter declarations>>. However, a custom value resolver that is not backed by any Java class/method can be registered as well."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:374
msgid "A virtual method with single parameter can be called using the infix notation:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:375
#, no-wrap
msgid "Infix Notation Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:381
#, no-wrap
msgid ""
"<html>\n"
"<p>{item.price or 5}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:383
msgid "`item.price or 5` is translated to `item.price.or(5)`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:385
msgid "Virtual method parameters can be \"nested\" virtual method invocations."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:386
#, no-wrap
msgid "Nested Virtual Method Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:392
#, no-wrap
msgid ""
"<html>\n"
"<p>{item.subtractPrice(item.calculateDiscount(10))}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:394
msgid "`item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:397
#, no-wrap
msgid "Sections"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:400
msgid "A section:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:402
msgid "has a start tag"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:403
msgid "starts with `#`, followed by the name of the section such as `{#if}` and `{#each}`,"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:404
msgid "may be empty"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:405
msgid "tag ends with `/`, ie. `{#emptySection /}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:406
msgid "may contain other expression, sections, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:407
msgid "the end tag starts with `/` and contains the name of the section (optional): `{#if foo}Foo!{/if}` or `{#if foo}Foo!{/}`,"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:414
msgid "The start tag can also define parameters.  The parameters have optional names.  A section may contain several content *blocks*.  The \"main\" block is always present.  Additional/nested blocks also start with `#` and can have parameters too - `{#else if item.isActive}`.  A section helper that defines the logic of a section can \"execute\" any of the blocks and evaluate the parameters."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:424
#, no-wrap
msgid ""
"{#if item.name is 'sword'}\n"
"  It's a sword!\n"
"{#else if item.name is 'shield'}\n"
"  It's a shield!\n"
"{#else}\n"
"  Item is neither a sword nor a shield.\n"
"{/if}\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:426
#, no-wrap
msgid "Loop Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:431
msgid "The loop section makes it possible to iterate over an instance of `Iterable`, `Map` 's entry set, `Stream` and an Integer.  It has two flavors.  The first one is using the `each` name alias."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:437
#, no-wrap
msgid ""
"{#each items}\n"
"  {it.name} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:441
msgid "The other form is using the `for` name alias and can specify the alias used to reference the iteration element:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:447
#, no-wrap
msgid ""
"{#for item in items}\n"
"  {item.name}\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:450
msgid "It's also possible to access the iteration metadata inside the loop:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:458
msgid "`count` represents one-based index. Metadata also include zero-based `index`, `hasNext`, `odd`, `even`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:460
msgid "The `for` statement also works with integers, starting from 1. In the example below, considering that `total = 3`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:466
#, no-wrap
msgid ""
"{#for i in total}\n"
"  {i}:\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:469
msgid "The output will be:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:473
#, no-wrap
msgid "1:2:3:\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:476
#, no-wrap
msgid "If Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:481
msgid "The `if` section represents a basic control flow section.  The simplest possible version accepts a single parameter and renders the content if the condition is evaluated to `true`.  A condition without an operator evaluates to `true` if the value is not considered `falsy`, i.e. if the value is not `null`, `false`, an empty collection, an empty map, an empty array, an empty string/char sequence or a number equal to zero."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:487
#, no-wrap
msgid ""
"{#if item.active}\n"
"  This item is active.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:490
msgid "You can also use the following operators in a condition:"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:492
#, no-wrap
msgid "Aliases"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:494
#, no-wrap
msgid "Precedence (higher wins)"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:495
#, no-wrap
msgid "logical complement"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:496
#, no-wrap
msgid "`!`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:498
#, no-wrap
msgid "4"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:499
#, no-wrap
msgid "greater than"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:500
#, no-wrap
msgid "`gt`, `>`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:502
#: upstream/_versions/1.7/guides/qute-reference.adoc:506
#: upstream/_versions/1.7/guides/qute-reference.adoc:510
#: upstream/_versions/1.7/guides/qute-reference.adoc:514
#, no-wrap
msgid "3"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:503
#, no-wrap
msgid "greater than or equal to"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:504
#, no-wrap
msgid "`ge`, `>=`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:507
#, no-wrap
msgid "less than"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:508
#, no-wrap
msgid "`lt`, `<`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:511
#, no-wrap
msgid "less than or equal to"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:512
#, no-wrap
msgid "`le`, `\\<=`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:515
#, no-wrap
msgid "equals"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:516
#, no-wrap
msgid "`eq`, `==`, `is`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:518
#: upstream/_versions/1.7/guides/qute-reference.adoc:522
#, no-wrap
msgid "2"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:519
#, no-wrap
msgid "not equals"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:520
#, no-wrap
msgid "`ne`, `!=`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:523
#, no-wrap
msgid "logical AND (short-circuiting)"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:524
#, no-wrap
msgid "`&&`, `and`"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:526
#: upstream/_versions/1.7/guides/qute-reference.adoc:530
#, no-wrap
msgid "1"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:527
#, no-wrap
msgid "logical OR (short-circuiting)"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:527
#, no-wrap
msgid "`\\"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:527
#, no-wrap
msgid "\\"
msgstr ""

#. type: Table
#: upstream/_versions/1.7/guides/qute-reference.adoc:528
#, no-wrap
msgid "`, `or`"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:532
#, no-wrap
msgid "A simple operator example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:538
#, no-wrap
msgid ""
"{#if item.age > 10}\n"
"  This item is very old.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:541
msgid "Multiple conditions are also supported."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:542
#, no-wrap
msgid "Multiple conditions example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:548
#, no-wrap
msgid ""
"{#if item.age > 10 && item.price > 500}\n"
"  This item is very old and expensive.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:551
msgid "Precedence rules can be overridden by parentheses."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:552
#, no-wrap
msgid "Parentheses example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:558
#, no-wrap
msgid ""
"{#if (item.age > 10 || item.price > 500) && user.loggedIn}\n"
"  User must be logged in and item age must be > 10 or price must be > 500.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:562
msgid "You can also add any number of `else` blocks:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:574
#, no-wrap
msgid ""
"{#if item.age > 10}\n"
"  This item is very old.\n"
"{#else if item.age > 5}\n"
"  This item is quite old.\n"
"{#else if item.age > 2}\n"
"  This item is old.\n"
"{#else}\n"
"  This item is not old at all!\n"
"{/if}\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:576
#, no-wrap
msgid "With Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:580
msgid "This section can be used to set the current context object.  This could be useful to simplify the template structure:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:587
#, no-wrap
msgid ""
"{#with item.parent}\n"
"  <h1>{name}</h1>  <1>\n"
"  <p>{description}</p> <2>\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:589
msgid "The `name` will be resolved against the `item.parent`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:590
msgid "The `description` will be also resolved against the `item.parent`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:592
msgid "This section might also come in handy when we'd like to avoid multiple expensive invocations:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:602
#, no-wrap
msgid ""
"{#with item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)}\n"
"  {#if this is \"fun\"} <1>\n"
"    <h1>Yay!</h1>\n"
"  {#else}\n"
"    <h1>{this} is not fun at all!</h1>\n"
"  {/if}\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:604
msgid "`this` is the result of `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)`. The method is only invoked once even though the result may be used in multiple expressions."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:605
#, no-wrap
msgid "Let/Set Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:608
msgid "This section allows you to define named local variables:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:613
#, no-wrap
msgid ""
"{#let myParent=order.item.parent}\n"
"  <h1>{myParent.name}</h1>\n"
"{/let}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:616
msgid "The section tag is also registered under the `set` alias:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:623
#, no-wrap
msgid ""
"{#set myParent=item.parent price=item.price}\n"
"  <h1>{myParent.name}</h1>\n"
"  <p>Price: {price}\n"
"{/set}\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:627
#, no-wrap
msgid "Include/Insert Sections"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:630
msgid "These sections can be used to include another template and possibly override some parts of the template (template inheritance)."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:631
#, no-wrap
msgid "Template \"base\""
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:643
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>{#insert title}Default Title{/}</title> <1>\n"
"</head>\n"
"<body>\n"
"  {#insert body}No body!{/} <2>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:645
msgid "`insert` sections are used to specify parts that could be overridden by a template that includes the given template."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:646
msgid "An `insert` section may define the default content that is rendered if not overridden."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:647
#, no-wrap
msgid "Template \"detail\""
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:658
#, no-wrap
msgid ""
"{#include base} <1>\n"
"  {#title}My Title{/title} <2>\n"
"  {#body}\n"
"    <div>\n"
"      My body.\n"
"    </div>\n"
"  {/body}\n"
"{/include}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:660
msgid "`include` section is used to specify the extended template."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:661
msgid "Nested blocks are used to specify the parts that should be overridden."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:663
msgid "Section blocks can also define an optional end tag - `{/title}`."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:665
#, no-wrap
msgid "User-defined Tags"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:669
msgid "User-defined tags can be used to include a template and optionally pass some parameters.  Let's suppose we have a template called `itemDetail.html`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:676
#, no-wrap
msgid ""
"{#if showImage} <1>\n"
"  {it.image} <2>\n"
"  {nested-content} <3>\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:678
msgid "`showImage` is a named parameter."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:679
msgid "`it` is a special key that is replaced with the first unnamed param of the tag."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:680
msgid "(optional) `nested-content` is a special key that will be replaced by the content of the tag."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:682
msgid "Now if we register this template under the name `itemDetail.html` and if we add a `UserTagSectionHelper` to the engine:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:688
#, no-wrap
msgid ""
"Engine engine = Engine.builder()\n"
"                   .addSectionHelper(new UserTagSectionHelper.Factory(\"itemDetail\",\"itemDetail.html\"))\n"
"                   .build();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:691
msgid "In Quarkus, all files from the `src/main/resources/templates/tags` are registered and monitored automatically!"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:693
msgid "We can include the tag like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:705
#, no-wrap
msgid ""
"<ul>\n"
"{#for item in items}\n"
"  <li>\n"
"  {#itemDetail item showImage=true} <1>\n"
"    = <b>{item.name}</b> <2>\n"
"  {/itemDetail}\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:707
msgid "`item` is resolved to an iteration element and can be referenced using the `it` key in the tag template."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:708
msgid "Tag content injected using the `nested-content` key in the tag template."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:709
#, no-wrap
msgid "Engine Configuration"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:711
#, no-wrap
msgid "Template Locator"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:715
msgid "Manual registration is sometimes handy but it's also possible to register a template locator using `EngineBuilder.addLocator(Function<String, Optional<Reader>>)`.  This locator is used whenever the `Engine.getTemplate()` method is called and the engine has no template for a given id stored in the cache."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:717
msgid "In Quarkus, all templates from the `src/main/resources/templates` are located automatically."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/qute-reference.adoc:719
#, no-wrap
msgid "Quarkus Integration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:722
msgid "If you want to use Qute in your Quarkus application add the following dependency to your project:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:729
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:733
msgid "In Quarkus, a preconfigured engine instance is provided and available for injection - a bean with scope `@ApplicationScoped`, bean type `io.quarkus.qute.Engine` and qualifier `@Default` is registered automatically.  Moreover, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:739
#, no-wrap
msgid ""
"import io.quarkus.qute.Engine;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.api.ResourcePath;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:741
#, no-wrap
msgid "class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:744
#, no-wrap
msgid ""
"    @Inject \n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:747
#, no-wrap
msgid ""
"    @ResourcePath(\"detail/items2_v1.html\") <2>\n"
"    Template items2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:751
#, no-wrap
msgid ""
"    @Inject\n"
"    Engine engine; <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:753
msgid "If there is no `ResourcePath` qualifier provided, the field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:754
msgid "The `ResourcePath` qualifier instructs the container to inject a template from a path relative from `src/main/resources/templates`. In this case, the full path is `src/main/resources/templates/detail/items2_v1.html`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:755
msgid "Inject the configured `Engine` instance."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:756
#, no-wrap
msgid "Template Variants"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:760
msgid "Sometimes it's useful to render a specific variant of the template based on the content negotiation.  This can be done by setting a special attribute via `TemplateInstance.setAttribute()`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:764
#, no-wrap
msgid "class MyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:767
#, no-wrap
msgid ""
"    @Inject\n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:770
#, no-wrap
msgid ""
"    @Inject\n"
"    ItemManager manager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:775
#, no-wrap
msgid ""
"    String renderItems() {\n"
"       return items.data(\"items\",manager.findItems()).setAttribute(TemplateInstance.SELECTED_VARIANT, new Variant(Locale.getDefault(),\"text/html\",\"UTF-8\")).render();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:778
msgid "When using `quarkus-resteasy-qute` the content negotiation is performed automatically. See <<resteasy_integration>>."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:779
#, no-wrap
msgid "Injecting Beans Directly In Templates"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:782
msgid "A CDI bean annotated with `@Named` can be referenced in any template through the `inject` namespace:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:786
#, no-wrap
msgid "{inject:foo.price} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:788
msgid "First, a bean with name `foo` is found and then used as the base object."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:791
msgid "All expressions using the `inject` namespace are validated during build.  For the expression `inject:foo.price` the implementation class of the injected bean must either have the `price` property (e.g. a `getPrice()` method) or a matching <<template_extension_methods,template extension method>> must exist."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:793
msgid "A `ValueResolver` is also generated for all beans annotated with `@Named` so that it's possible to access its properties without reflection."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:795
#, no-wrap
msgid "Parameter Declarations"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:800
msgid "It is possible to specify optional parameter declarations in a template.  Quarkus attempts to validate all expressions that reference such parameters.  If an invalid/incorrect expression is found the build fails."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:815
#, no-wrap
msgid ""
"{@org.acme.Foo foo} <1>\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{title}</h1> <2>\n"
"  Hello {foo.message}! <3>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:817
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:818
msgid "Not validated - not matching a param declaration."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:819
msgid "This expression is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:821
msgid "A value resolver is also generated for all types used in parameter declarations so that it's possible to access its properties without reflection."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:822
#, no-wrap
msgid "Overriding Parameter Declarations"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:840
#, no-wrap
msgid ""
"{@org.acme.Foo foo}\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{foo.message}</h1> <1>\n"
"  {#for foo in baz.foos}\n"
"    <p>Hello {foo.message}!</p> <2>\n"
"  {/for}\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:842
msgid "Validated against `org.acme.Foo`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:843
msgid "Not validated - `foo` is overridden in the loop section."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:845
#, no-wrap
msgid "Template Extension Methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:849
msgid "Extension methods can be used to extend the data classes with new functionality or resolve expressions for a specific <<namespace_extension_methods,namespace>>.  For example, it is possible to add _computed properties_ and _virtual methods_."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:854
msgid "A value resolver is automatically generated for a method annotated with `@TemplateExtension`.  If a class is annotated with `@TemplateExtension` then a value resolver is generated for every non-private static method declared on the class.  Method-level annotations override the behavior defined on the class.  Methods that do not meet the following requirements are ignored."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:856
msgid "A template extension method:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:858
msgid "must not be `private`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:859
msgid "must be static,"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:860
msgid "must not return `void`,"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:861
msgid "must accept at least one parameter, unless the namespace is specified."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:864
msgid "The class of the first parameter is used to match the base object unless the namespace is specified.  In such case, the namespace is used to match an expression."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:871
msgid "The method name is used to match the property name by default.  However, it is possible to specify the matching name with `TemplateExtension#matchName()`.  A special constant - `TemplateExtension#ANY` - may be used to specify that the extension method matches any name.  It is also possible to match the name against a regular expression specified in `TemplateExtension#matchRegex()`.  In both cases, a string method parameter is used to pass the property name.  If both `matchName()` and `matchRegex()` are set the regular expression is used for matching."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:874
msgid "If a namespace is specified the method must declare at least one parameter and the first parameter must be a string.  If no namespace is specified the method must declare at least two parameters and the second parameter must be a string."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:875
#, no-wrap
msgid "Extension Method Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:879
#: upstream/_versions/1.7/guides/qute-reference.adoc:1019
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:881
#, no-wrap
msgid "class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:883
#: upstream/_versions/1.7/guides/qute-reference.adoc:1024
#: upstream/_versions/1.7/guides/qute-reference.adoc:1055
#, no-wrap
msgid "    public final BigDecimal price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:888
#: upstream/_versions/1.7/guides/qute-reference.adoc:1060
#, no-wrap
msgid ""
"    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:891
#, no-wrap
msgid ""
"@TemplateExtension\n"
"class MyExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:896
#, no-wrap
msgid ""
"    static BigDecimal discountedPrice(Item item) { <1>\n"
"        return item.getPrice().multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:898
msgid "This method matches an expression with base object of the type `Item.class` and the `discountedPrice` property name."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:900
msgid "This template extension method makes it possible to render the following template:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:904
#, no-wrap
msgid "{item.discountedPrice} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:906
msgid "`item` is resolved to an instance of `org.acme.Item`."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:907
#, no-wrap
msgid "Method Parameters"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:912
msgid "An extension method may accept multiple parameters.  If no namespace is specified the first parameter is always used to pass the base object, i.e. `org.acme.Item` in the first example.  Other parameters are resolved when rendering the template and passed to the extension method."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:913
#, no-wrap
msgid "Multiple Parameters Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:918
#, no-wrap
msgid ""
"@TemplateExtension\n"
"class BigDecimalExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:923
#, no-wrap
msgid ""
"    static BigDecimal scale(BigDecimal val, int scale, RoundingMode mode) { <1>\n"
"        return val.setScale(scale, mode);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:925
msgid "This method matches an expression with base object of the type `BigDecimal.class`, with the `scale` virtual method name and two virtual method parameters."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:929
#, no-wrap
msgid "{item.discountedPrice.scale(2,mode)} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:931
msgid "`item.discountedPrice` is resolved to an instance of `BigDecimal`."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:933
#, no-wrap
msgid "Namespace Extention Methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:938
msgid "If `TemplateExtension#namespace()` is specified then the extension method is used to resolve expressions with the given <<expressions,namespace>>.  Template extension methods that share the same namespace are grouped in one resolver ordered by `TemplateExtension#priority()`.  The first matching extension method is used to resolve an expression."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:939
#, no-wrap
msgid "Namespace Extension Method Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:944
#, no-wrap
msgid ""
"@TemplateExtension(namespace = \"str\")\n"
"public static class StringExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:948
#, no-wrap
msgid ""
"   static String format(String fmt, Object... args) {\n"
"      return String.format(fmt, args);\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:953
#, no-wrap
msgid ""
"   static String reverse(String val) {\n"
"      return new StringBuilder(val).reverse().toString();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:956
msgid "These extension methods can be used as follows."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:961
#, no-wrap
msgid ""
"{str:format('%s %s!','Hello', 'world')} <1>\n"
"{str:reverse('hello')} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:963
msgid "The output is `Hello world!`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:964
msgid "The output is `olleh`"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:965
#, no-wrap
msgid "Built-in Template Extension"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:968
msgid "Quarkus provides a set of built-in extension methods."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:969
#, no-wrap
msgid "Maps"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:972
msgid "`keys` or `keySet`: Returns a Set view of the keys contained in a map"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:973
msgid "`{#for key in map.keySet}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:975
msgid "`values`: Returns a Collection view of the values contained in a map"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:976
msgid "`{#for value in map.values}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:978
msgid "`size`: Returns the number of key-value mappings in a map"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:979
msgid "`{map.size}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:981
msgid "`isEmpty`: Returns true if a map contains no key-value mappings"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:982
msgid "`{#if map.isEmpty}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:984
msgid "`get(key)`: Returns the value to which the specified key is mapped"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:985
msgid "`{map.get('foo')}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:987
msgid "A map value can be also accessed directly: `{map.myKey}`. Use the bracket notation for keys that are not legal identifiers: `{map['my key']}`."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:988
#, no-wrap
msgid "Collections"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:991
msgid "`get(index)`: Returns the element at the specified position in a list"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:992
msgid "`{list.get(0)}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:994
msgid "A list element can be accessed directly: `{list.10}` or `{list[10]}`."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:995
#, no-wrap
msgid "Numbers"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:998
msgid "`mod`: Modulo operation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:999
msgid "`{#if counter.mod(5) == 0}`"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.7/guides/qute-reference.adoc:1000
#, no-wrap
msgid "Config "
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1003
msgid "`config:<name>` or `config:[<name>]`: Returns the config value for the given property name"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1004
msgid "`{config:foo}` or `{config:['property.with.dot.in.name']}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1006
msgid "`config:property(name)`: Returns the config value for the given property name; the name can be obtained dynamically by an expression"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1007
msgid "`{config:property('quarkus.foo')}` or `{config:property(foo.getPropertyName())}`"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:1009
#, no-wrap
msgid "@TemplateData"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1013
msgid "A value resolver is automatically generated for a type annotated with `@TemplateData`.  This allows Quarkus to avoid using reflection to access the data at runtime."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1015
msgid "Non-public members, constructors, static initializers, static, synthetic and void methods are always ignored."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1022
#, no-wrap
msgid ""
"@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1028
#, no-wrap
msgid ""
"    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1033
#, no-wrap
msgid ""
"    public BigDecimal getDiscountedPrice() {\n"
"        return price.multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1036
msgid "Any instance of `Item` can be used directly in the template:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1042
#, no-wrap
msgid ""
"{#each items} <1>\n"
"  {it.price} / {it.discountedPrice}\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1044
msgid "`items` is resolved to a list of `org.acme.Item` instances."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1047
msgid "Furthermore, `@TemplateData.properties()` and `@TemplateData.ignore()` can be used to fine-tune the generated resolver.  Finally, it is also possible to specify the \"target\" of the annotation - this could be useful for third-party classes not controlled by the application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1053
#, no-wrap
msgid ""
"@TemplateData(target = BigDecimal.class)\n"
"@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1067
#, no-wrap
msgid ""
"{#each items} <1>\n"
"  {it.price.setScale(2, rounding)} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1069
msgid "The generated value resolver knows how to invoke the `BigDecimal.setScale()` method."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:1071
#, no-wrap
msgid "RESTEasy Integration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1075
msgid "If you want to use Qute in your JAX-RS application, you'll need to add the `quarkus-resteasy-qute` extension first.  In your `pom.xml` file, add:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1082
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1086
msgid "This extension registers a special `ContainerResponseFilter` implementation so that a resource method can return a `TemplateInstance` and the filter takes care of all necessary steps.  A simple JAX-RS resource may look like this:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:1087
#, no-wrap
msgid "HelloResource.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1091
#, no-wrap
msgid "package org.acme.quarkus.sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1096
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1099
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1102
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class HelloResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1105
#, no-wrap
msgid ""
"    @Inject\n"
"    Template hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1112
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return hello.data(\"name\", name); <2> <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1114
msgid "If there is no `@ResourcePath` qualifier provided, the field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1115
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1116
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1120
msgid "The content negotiation is performed automatically.  The resulting output depends on the `Accept` header received from the client."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1125
#, no-wrap
msgid ""
"@Path(\"/detail\")\n"
"class DetailResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1128
#, no-wrap
msgid ""
"    @Inject\n"
"    Template item; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1135
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.TEXT_HTML, MediaType.TEXT_PLAIN })\n"
"    public TemplateInstance item() {\n"
"        return item.data(\"myItem\", new Item(\"Alpha\", 1000)); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1137
msgid "Inject a variant template with base path derived from the injected field - `src/main/resources/templates/item`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1138
msgid "For `text/plain` the `src/main/resources/templates/item.txt` template is used. For `text/html` the `META-INF/resources/templates/item.html` template is used."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:1140
#, no-wrap
msgid "Development Mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1143
msgid "In the development mode, all files located in `src/main/resources/templates` are watched for changes and modifications are immediately visible."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:1144
#, no-wrap
msgid "Type-safe Message Bundles"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:1146
#, no-wrap
msgid "Basic Concepts"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1152
msgid "The basic idea is that every message is potentially a very simple template.  In order to prevent type errors a message is defined as an annotated method of a *message bundle interface*.  Quarkus generates the *message bundle implementation* at build time.  Subsequently, the bundles can be used at runtime:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1154
msgid "Directly in your code via `io.quarkus.qute.i18n.MessageBundles#get()`; e.g. `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1155
msgid "Injected in your beans via `@Inject`; e.g. `@Inject AppMessages`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1156
msgid "Referenced in the templates via the message bundle name; e.g. `{msg:hello_name('Lucie')}`"
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:1157
#, no-wrap
msgid "Message Bundle Interface Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1162
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Message;\n"
"import io.quarkus.qute.i18n.MessageBundle;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1165
#, no-wrap
msgid ""
"@MessageBundle <1>\n"
"public interface AppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1169
#, no-wrap
msgid ""
"    @Message(\"Hello {name}!\") <2>\n"
"    String hello_name(String name); <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1171
msgid "Denotes a message bundle interface. The bundle name is defaulted to `msg` and is used as a namespace in templates expressions, e.g. `{msg:hello_name}`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1172
msgid "Each method must be annotated with `@Message`. The value is a qute template."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1173
msgid "The method parameters can be used in the template."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:1174
#, no-wrap
msgid "Bundle Name and Message Keys"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1182
msgid "Keys are used directly in templates.  The bundle name is used as a namespace in template expressions.  The `@MessageBundle` can be used to define the default strategy used to generate message keys from method names.  However, the `@Message` can override this strategy and even define a custom key.  By default, the annotated element's name is used as-is.  Other possibilities are:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1184
msgid "De-camel-cased and hyphenated; e.g. `helloName()` -> `hello-name`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1185
msgid "De-camel-cased and parts separated by underscores; e.g. `helloName()` -> `hello_name`."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:1186
#, no-wrap
msgid "Validation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1189
msgid "All message bundle templates are validated:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1190
msgid "All expressions without a namespace must map to a parameter; e.g. `Hello {foo}` -> the method must have a param of name `foo`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1191
msgid "All expressions are validated against the types of the parameters; e.g. `Hello {foo.bar}` where the parameter `foo` is of type `org.acme.Foo` -> `org.acme.Foo` must have a property of name `bar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1193
msgid "A warning message is logged for each _unused_ parameter."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1194
msgid "Expressions that reference a message bundle method, such as `{msg:hello(item.name)}`, are validated too."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.7/guides/qute-reference.adoc:1195
#, no-wrap
msgid "Localization"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1200
msgid "The default locale of the Java Virtual Machine used to *build the application* is used for the `@MessageBundle` interface by default.  However, the `io.quarkus.qute.i18n.MessageBundle#locale()` can be used to specify a custom locale.  Additionaly, there are two ways to define a localized bundle:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1202
msgid "Create an interface that extends the default interface that is annotated with `@Localized`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1203
msgid "Create an UTF-8 encoded file located in `src/main/resources/messages`; e.g. `msg_de.properties`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1205
msgid "A localized interface is the preferred solution mainly due to the possibility of easy refactoring."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:1206
#, no-wrap
msgid "Localized Interface Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1211
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Localized;\n"
"import io.quarkus.qute.i18n.Message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1214
#, no-wrap
msgid ""
"@Localized(\"de\") <1>\n"
"public interface GermanAppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1219
#, no-wrap
msgid ""
"    @Override\n"
"    @Message(\"Hallo {name}!\") <2>\n"
"    String hello_name(String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1221
msgid "The value is the locale tag string (IETF)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1222
msgid "The value is the localized template."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1230
msgid "Message bundle files must be encoded in UTF-8.  The file name consists of the relevant bundle name (e.g. `msg`) and underscore followed by the locate tag (IETF).  The file format is very simple: each line represents either a key/value pair with the equals sign used as a separator or a comment (line starts with `#`).  Keys are mapped to method names from the corresponding message bundle interface.  Values represent the templates normally defined by `io.quarkus.qute.i18n.Message#value()`.  We use `.properties` suffix in our example because most IDEs and text editors support syntax highlighting of `.properties` files.  But in fact, the suffix could be anything."
msgstr ""

#. type: Block title
#: upstream/_versions/1.7/guides/qute-reference.adoc:1231
#, no-wrap
msgid "Localized File Example - `msg_de.properties`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/qute-reference.adoc:1235
#, no-wrap
msgid "hello_name=Hallo {name}! <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1237
msgid "Each line in a localized file represents a message template."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/qute-reference.adoc:1238
msgid "Keys and values are separated by the equals sign."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/qute-reference.adoc:1239
#, no-wrap
msgid "Configuration Reference"
msgstr ""
