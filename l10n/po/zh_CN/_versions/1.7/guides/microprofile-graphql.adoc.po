# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-01 01:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:6
#, no-wrap
msgid "Quarkus - GraphQL"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:12
msgid "This guide demonstrates how your Quarkus application can utilize the **Eclipse MicroProfile GraphQL** specification through the SmallRye GraphQL extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:14
msgid "As the https://www.graphql.org/[GraphQL] specification website states:"
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:20
msgid "GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.  GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools."
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:23
#, no-wrap
msgid ""
"**GraphQL** was originally developed by **Facebook** in 2012 and has been\n"
"an open standard since 2015.\n"
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:26
msgid "GraphQL is not a replacement for REST API specification but merely an alternative. Unlike REST, GraphQL API's have the ability to benefit the client by:"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:27
#, no-wrap
msgid "Preventing Over-fetching and Under-fetching"
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:33
msgid "REST API's are server-driven fixed data responses that cannot be determined by the client. Although the client does not require all the fields the client must retrieve all the data hence `Over-fetching`. A client may also require multiple REST API calls according to the first call (HATEOAS) to retrieve all the data that is required thereby `Under-fetching`."
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:34
#, no-wrap
msgid "API Evolution"
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:38
msgid "Since GraphQL API's returns data that are requested by the client adding additional fields and capabilities to existing API will not create breaking changes to existing clients."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:39
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:42
msgid "To complete this guide, you need:"
msgstr "要完成本指南，您需要："

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:44
msgid "less than 15 minutes"
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:45
msgid "an IDE"
msgstr "IDE"

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:46
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:47
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:48
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:52
msgid "In this guide, we build a simple GraphQL application that exposes a GraphQL API at `/graphql`."
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:54
msgid "This example was inspired by a popular GraphQL API."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:55
#, no-wrap
msgid "Solution"
msgstr "完整源码"

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:59
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:61
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:63
msgid "The solution is located in the `microprofile-graphql-quickstart` {quickstarts-tree-url}/microprofile-graphql-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:64
#, no-wrap
msgid "Creating the Maven Project"
msgstr ""

#. type: quote
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:67
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:76
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=microprofile-graphql-quickstart \\\n"
"    -DclassName=\"org.acme.microprofile.graphql.FilmResource\" \\\n"
"    -Dextensions=\"graphql\"\n"
"cd microprofile-graphql-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:79
msgid "This command generates a Maven project, importing the `smallrye-graphql` extension which is an implementation of the MicroProfile GraphQL specification used in Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:82
msgid "If you already have your Quarkus project configured, you can add the `smallrye-graphql` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:86
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"graphql\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:89
msgid "This will add the following to your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:96
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-graphql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:98
#, no-wrap
msgid "Preparing an Application: GraphQL API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:101
msgid "In this section we will start creating the GraphQL API."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:103
msgid "First, create the following entities representing a film from a galaxy far far away:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:107
#, no-wrap
msgid "package org.acme.microprofile.graphql;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:109
#, no-wrap
msgid "public class Film {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:114
#, no-wrap
msgid ""
"    private String title;\n"
"    private Integer episodeID;\n"
"    private String director;\n"
"    private LocalDate releaseDate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:118
#, no-wrap
msgid ""
"    public String getTitle() {\n"
"        return title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:122
#, no-wrap
msgid ""
"    public void setTitle(String title) {\n"
"        this.title = title;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:126
#, no-wrap
msgid ""
"    public Integer getEpisodeID() {\n"
"        return episodeID;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:130
#, no-wrap
msgid ""
"    public void setEpisodeID(Integer episodeID) {\n"
"        this.episodeID = episodeID;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:134
#, no-wrap
msgid ""
"    public String getDirector() {\n"
"        return director;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:138
#, no-wrap
msgid ""
"    public void setDirector(String director) {\n"
"        this.director = director;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:142
#, no-wrap
msgid ""
"    public LocalDate getReleaseDate() {\n"
"        return releaseDate;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:146
#, no-wrap
msgid ""
"    public void setReleaseDate(LocalDate releaseDate) {\n"
"        this.releaseDate = releaseDate;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:148
#, no-wrap
msgid "}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:150
#, no-wrap
msgid "public class Hero {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:158
#, no-wrap
msgid ""
"    private String name;\n"
"    private String surname;\n"
"    private Double height;\n"
"    private Integer mass;\n"
"    private Boolean darkSide;\n"
"    private LightSaber lightSaber;\n"
"    private List<Integer> episodeIds = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:162
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:166
#, no-wrap
msgid ""
"    public void setName(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:170
#, no-wrap
msgid ""
"    public String getSurname() {\n"
"        return surname;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:174
#, no-wrap
msgid ""
"    public void setSurname(String surname) {\n"
"        this.surname = surname;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:178
#, no-wrap
msgid ""
"    public Double getHeight() {\n"
"        return height;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:182
#, no-wrap
msgid ""
"    public void setHeight(Double height) {\n"
"        this.height = height;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:186
#, no-wrap
msgid ""
"    public Integer getMass() {\n"
"        return mass;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:190
#, no-wrap
msgid ""
"    public void setMass(Integer mass) {\n"
"        this.mass = mass;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:194
#, no-wrap
msgid ""
"    public Boolean getDarkSide() {\n"
"        return darkSide;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:198
#, no-wrap
msgid ""
"    public void setDarkSide(Boolean darkSide) {\n"
"        this.darkSide = darkSide;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:202
#, no-wrap
msgid ""
"    public LightSaber getLightSaber() {\n"
"        return lightSaber;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:206
#, no-wrap
msgid ""
"    public void setLightSaber(LightSaber lightSaber) {\n"
"        this.lightSaber = lightSaber;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:210
#, no-wrap
msgid ""
"    public List<Integer> getEpisodeIds() {\n"
"        return episodeIds;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:215
#, no-wrap
msgid ""
"    public void setEpisodeIds(List<Integer> episodeIds) {\n"
"        this.episodeIds = episodeIds;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:219
#, no-wrap
msgid ""
"enum LightSaber {\n"
"    RED, BLUE, GREEN\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:223
msgid "The classes we have just created describe the GraphQL schema which is a set of possible data (objects, fields, relationships) that a client can access."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:225
msgid "Let's continue with an example CDI bean, that would work as a repository:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:230
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class GalaxyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:232
#, no-wrap
msgid "    private List<Hero> heroes = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:234
#, no-wrap
msgid "    private List<Film> films = new ArrayList<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:236
#, no-wrap
msgid "    public GalaxyService() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:242
#, no-wrap
msgid ""
"        Film aNewHope = new Film();\n"
"        aNewHope.setTitle(\"A New Hope\");\n"
"        aNewHope.setReleaseDate(LocalDate.of(1977, Month.MAY, 25));\n"
"        aNewHope.setEpisodeID(4);\n"
"        aNewHope.setDirector(\"George Lucas\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:248
#, no-wrap
msgid ""
"        Film theEmpireStrikesBack = new Film();\n"
"        theEmpireStrikesBack.setTitle(\"The Empire Strikes Back\");\n"
"        theEmpireStrikesBack.setReleaseDate(LocalDate.of(1980, Month.MAY, 21));\n"
"        theEmpireStrikesBack.setEpisodeID(5);\n"
"        theEmpireStrikesBack.setDirector(\"George Lucas\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:254
#, no-wrap
msgid ""
"        Film returnOfTheJedi = new Film();\n"
"        returnOfTheJedi.setTitle(\"Return Of The Jedi\");\n"
"        returnOfTheJedi.setReleaseDate(LocalDate.of(1983, Month.MAY, 25));\n"
"        returnOfTheJedi.setEpisodeID(6);\n"
"        returnOfTheJedi.setDirector(\"George Lucas\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:258
#, no-wrap
msgid ""
"        films.add(aNewHope);\n"
"        films.add(theEmpireStrikesBack);\n"
"        films.add(returnOfTheJedi);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:267
#, no-wrap
msgid ""
"        Hero luke = new Hero();\n"
"        luke.setName(\"Luke\");\n"
"        luke.setSurname(\"Skywalker\");\n"
"        luke.setHeight(1.7);\n"
"        luke.setMass(73);\n"
"        luke.setLightSaber(LightSaber.GREEN);\n"
"        luke.setDarkSide(false);\n"
"        luke.getEpisodeIds().addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:275
#, no-wrap
msgid ""
"        Hero leia = new Hero();\n"
"        leia.setName(\"Leia\");\n"
"        leia.setSurname(\"Organa\");\n"
"        leia.setHeight(1.5);\n"
"        leia.setMass(51);\n"
"        leia.setDarkSide(false);\n"
"        leia.getEpisodeIds().addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:285
#, no-wrap
msgid ""
"        Hero vader = new Hero();\n"
"        vader.setName(\"Darth\");\n"
"        vader.setSurname(\"Vader\");\n"
"        vader.setHeight(1.9);\n"
"        vader.setMass(89);\n"
"        vader.setDarkSide(true);\n"
"        vader.setLightSaber(LightSaber.RED);\n"
"        vader.getEpisodeIds().addAll(Arrays.asList(4, 5, 6));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:289
#, no-wrap
msgid ""
"        heroes.add(luke);\n"
"        heroes.add(leia);\n"
"        heroes.add(vader);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:291
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:295
#, no-wrap
msgid ""
"    public List<Film> getAllFilms() {\n"
"        return films;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:299
#, no-wrap
msgid ""
"    public Film getFilm(int id) {\n"
"        return films.get(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:305
#, no-wrap
msgid ""
"    public List<Hero> getHeroesByFilm(Film film) {\n"
"        return heroes.stream()\n"
"                .filter(hero -> hero.getEpisodeIds().contains(film.getEpisodeID()))\n"
"                .collect(Collectors.toList());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:309
#, no-wrap
msgid ""
"    public void addHero(Hero hero) {\n"
"        heroes.add(hero);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:313
#, no-wrap
msgid ""
"    public Hero deleteHero(int id) {\n"
"        return heroes.remove(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:320
#, no-wrap
msgid ""
"    public List<Hero> getHeroesBySurname(String surname) {\n"
"        return heroes.stream()\n"
"                .filter(hero -> hero.getSurname().equals(surname))\n"
"                .collect(Collectors.toList());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:323
msgid "Now, let's create our first GraphQL API."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:325
msgid "Edit the `org.acme.microprofile.graphql.FilmResource` class as following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:330
#, no-wrap
msgid ""
"@GraphQLApi // <1>\n"
"public class FilmResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:333
#, no-wrap
msgid ""
"    @Inject\n"
"    GalaxyService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:340
#, no-wrap
msgid ""
"    @Query(\"allFilms\") // <2>\n"
"    @Description(\"Get all Films from a galaxy far far away\") // <3>\n"
"    public List<Film> getAllFilms() {\n"
"        return service.getAllFilms();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:343
msgid "`@GraphQLApi` annotation indicates that the CDI bean will be a GraphQL endpoint"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:344
msgid "`@Query` annotation defines that this method will be queryable with the name `allFilms`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:345
msgid "Documentation of the queryable method"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:348
msgid "The value of the `@Query` annotation is optional and would implicitly be defaulted to the method name if absent."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:350
msgid "This way we have created our first queryable API which we will later expand."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:351
#, no-wrap
msgid "Launch"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:354
msgid "Launch the quarkus app:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:357
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:359
#, no-wrap
msgid "Introspect"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:362
msgid "The full schema of the GraphQL API can be retrieved by calling the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:366
#, no-wrap
msgid "curl http://localhost:8080/graphql/schema.graphql\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:369
msgid "The server will return the complete schema of the GraphQL API."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:370
#, no-wrap
msgid "GraphiQL UI"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:373
msgid "Experimental - not included in the MicroProfile specification"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:375
msgid "GraphiQL UI is a great tool permitting easy interaction with your GraphQL APIs."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:378
msgid "The Quarkus `smallrye-graphql` extension ships with `GraphiQL` and enables it by default in `dev` and `test` modes, but it can also be explicitly configured for `production` mode as well."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:380
msgid "GraphiQL can be accessed from http://localhost:8080/graphql-ui/ ."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:382
msgid "image:graphql-ui-screenshot01.png[alt=GraphQL UI]"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:383
#, no-wrap
msgid "Query the GraphQL API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:386
msgid "Now visit the GraphiQL page that has been deployed in `dev` mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:388
msgid "Enter the following query to GraphiQL and press the `play` button:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:399
#, no-wrap
msgid ""
"query allFilms {\n"
"  allFilms {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:405
msgid "Since our query contains all the fields in the `Film` class we will retrieve all the fields in our response. Since GraphQL API responses are client determined, the client can choose which fields it will require."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:409
msgid "Let's assume that our client only requires `title` and `releaseDate` making the previous call to the API `Over-fetching` of unnecessary data."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:411
msgid "Enter the following query into GraphiQL and hit the `play` button:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:420
#, no-wrap
msgid ""
"query allFilms {\n"
"  allFilms {\n"
"    title\n"
"    releaseDate\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:424
msgid "Notice in the response we have only retrieved the required fields.  Therefore, we have prevented `Over-fetching`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:427
msgid "Let's continue to expand our GraphQL API by adding the following to the `FilmResource` class."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:435
#, no-wrap
msgid ""
"    @Query\n"
"    @Description(\"Get a Films from a galaxy far far away\")\n"
"    public Film getFilm(@Name(\"filmId\") int id) {\n"
"        return service.getFilm(id);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:440
msgid "Notice how we have excluded the value in the `@Query` annotation.  Therefore, the name of the query is implicitly set as the method name excluding the `get`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:442
msgid "This query will allow the client to retrieve the film by id."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:444
msgid "Enter the following into `GraphiQL` and make a request."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:455
#, no-wrap
msgid ""
"query getFilm {\n"
"  film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:460
msgid "The `film` query method requested fields can be determined as such in our previous example. This way we can retrieve individual film information."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:464
msgid "However, say our client requires both films with filmId `0` and `1`.  In a REST API the client would have to make two calls to the API.  Therefore, the client would be `Under-fetching`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:466
msgid "In GraphQL it is possible to make multiple queries at once."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:468
msgid "Enter the following into GraphiQL to retrieve two films:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:485
#, no-wrap
msgid ""
"query getFilms {\n"
"  film0: film(filmId: 0) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"  film1: film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:488
msgid "This enabled the client to fetch the required data in a single request."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:489
#, no-wrap
msgid "Expanding the API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:493
msgid "Until now, we have created a GraphQL API to retrieve film data.  We now want to enable the clients to retrieve the `Hero` data of the `Film`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:495
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:539
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:602
msgid "Add the following to our `FilmResource` class:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:501
#, no-wrap
msgid ""
"    public List<Hero> heroes(@Source Film film) { // <1>\n"
"        return service.getHeroesByFilm(film);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:504
msgid "Enable `List<Hero>` data to be added to queries that respond with `Film`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:508
msgid "By adding this method we have effectively changed the schema of the GraphQL API.  Although the schema has changed the previous queries will still work.  Since we only expanded the API to be able to retrieve the `Hero` data of the `Film`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:510
msgid "Enter the following into GraphiQL to retrieve the film and hero data."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:528
#, no-wrap
msgid ""
"query getFilmHeroes {\n"
"  film(filmId: 1) {\n"
"    title\n"
"    director\n"
"    releaseDate\n"
"    episodeID\n"
"    heroes {\n"
"      name\n"
"      height\n"
"      mass\n"
"      darkSide\n"
"      lightSaber\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:531
msgid "The response now includes the heroes of the film."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:532
#, no-wrap
msgid "Mutations"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:535
msgid "Mutations are used when data is created, updated or deleted."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:537
msgid "Let's now add the ability to add and delete heroes to our GraphQL API."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:547
#, no-wrap
msgid ""
"    @Mutation\n"
"    public Hero createHero(Hero hero) {\n"
"        service.addHero(hero);\n"
"        return hero;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:552
#, no-wrap
msgid ""
"    @Mutation\n"
"    public Hero deleteHero(int id) {\n"
"        return service.deleteHero(id);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:555
msgid "Enter the following into `GraphiQL` to insert a `Hero`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:573
#, no-wrap
msgid ""
"mutation addHero {\n"
"  createHero(hero: {\n"
"      name: \"Han\",\n"
"      surname: \"Solo\"\n"
"      height: 1.85\n"
"      mass: 80\n"
"      darkSide: false\n"
"      episodeIds: [4, 5, 6]\n"
"  \t}\n"
"  )\n"
"  {\n"
"    name\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:576
msgid "By using this mutation we have created a `Hero` entity in our service."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:581
msgid "Notice how in the response we have retrieved the `name` and `surname` of the created Hero. This is because we selected to retrieve these fields in the response within the `{ }` in the mutation query.  This can easily be a server side generated field that the client may require."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:583
msgid "Let's now try deleting an entry:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:591
#, no-wrap
msgid ""
"mutation DeleteHero {\n"
"  deleteHero(id :3){\n"
"    name\n"
"    surname\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:595
msgid "Similar to the `createHero` mutation method we also retrieve the `name` and `surname` of the hero we have deleted which is defined in `{ }`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:596
#, no-wrap
msgid "Creating Queries by fields"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:600
msgid "Queries can also be done on individual fields. For example, let's create a method to query heroes by their last name."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:609
#, no-wrap
msgid ""
"    @Query\n"
"    public List<Hero> getHeroesWithSurname(@DefaultValue(\"Skywalker\") String surname) {\n"
"        return service.getHeroesBySurname(surname);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:613
msgid "By using the `@DefaultValue` annotation we have determined that the surname value will be `Skywalker` when the parameter is not provided."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:615
msgid "Test the following queries with GraphiQL:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:632
#, no-wrap
msgid ""
"query heroWithDefaultSurname {\n"
"  heroesWithSurname{\n"
"    name\n"
"    surname\n"
"    lightSaber\n"
"  }\n"
"}\n"
"query heroWithSurnames {\n"
"  heroesWithSurname(surname: \"Vader\") {\n"
"    name\n"
"    surname\n"
"    lightSaber\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:634
#, no-wrap
msgid "Context"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:637
msgid "You can get information about the GraphQL request anywhere in your code, using this experimental, SmallRye specific feature:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:642
#, no-wrap
msgid ""
"@Inject\n"
"Context context;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:645
msgid "The context object allows you to get:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:647
msgid "the original request (Query/Mutation)"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:648
msgid "the arguments"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:649
msgid "the path"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:650
msgid "the selected fields"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:651
msgid "any variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:653
msgid "This allows you to optimize the downstream queries to the datastore."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:655
msgid "See the https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] for more details."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:656
#, no-wrap
msgid "GraphQL-Java"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:659
msgid "This context object also allows you to fall down to the underlying https://www.graphql-java.com/[graphql-java] features by using the leaky abstraction:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:663
#, no-wrap
msgid "DataFetchingEnvironment dfe = context.unwrap(DataFetchingEnvironment.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:666
msgid "You can also get access to the underlying `graphql-java` during schema generation, to add your own features directly:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:670
#, no-wrap
msgid "public GraphQLSchema.Builder addMyOwnEnum(@Observes GraphQLSchema.Builder builder) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:677
#, no-wrap
msgid ""
"    // Here add your own features directly, example adding an Enum\n"
"    GraphQLEnumType myOwnEnum = GraphQLEnumType.newEnum()\n"
"            .name(\"SomeEnum\")\n"
"            .description(\"Adding some enum type\")\n"
"            .value(\"value1\")\n"
"            .value(\"value2\").build();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:680
#, no-wrap
msgid ""
"    return builder.additionalType(myOwnEnum);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:683
msgid "By using the `@Observer` you can add anything to the Schema builder."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:684
#, no-wrap
msgid "Map to Scalar"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:688
msgid "Another SmallRye specific experimental feature, allows you to map an existing scalar (that is mapped by the implementation to a certain Java type) to another type, or to map complex object, that would typically create a `Type` or `Input` in GraphQL, to an existing scalar."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:689
#, no-wrap
msgid "Mapping an existing Scalar to another type:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:694
#, no-wrap
msgid "public class Movie {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:697
#, no-wrap
msgid ""
"    @ToScalar(Scalar.Int.class)\n"
"    Long idLongThatShouldChangeToInt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:700
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:715
#, no-wrap
msgid ""
"    // ....\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:703
msgid "Above will map the `Long` java type to an `Int` Scalar type, rather than the https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[default] `BigInteger`."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:704
#, no-wrap
msgid "Mapping a complex object to a Scalar type:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:709
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:712
#, no-wrap
msgid ""
"    @ToScalar(Scalar.String.class)\n"
"    Phone phone;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:718
msgid "This will, rather than creating a `Type` or `Input` in GraphQL, map to a String scalar."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:722
msgid "To be able to do the above, the `Phone` object needs to have a constructor that takes a String (or `Int` / `Date` / etc.), or have a setter method for the String (or `Int` / `Date` / etc.), or have a `fromString` (or `fromInt` / `fromDate` - depending on the Scalar type) static method."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:724
msgid "For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:728
#, no-wrap
msgid "public class Phone {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:730
#, no-wrap
msgid "    private String number;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:732
#, no-wrap
msgid "    // Getters and setters....\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:739
#, no-wrap
msgid ""
"    public static Phone fromString(String number) {\n"
"        Phone phone = new Phone();\n"
"        phone.setNumber(number);\n"
"        return phone;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:742
msgid "See more about the `@ToScalar` feature in the https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.0.6/index.html?io/smallrye/graphql/api/ToScalar.html[JavaDoc]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:743
#, no-wrap
msgid "Error code"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:746
msgid "You can add an error code on the error output in the GraphQL response by using the (SmallRye specific) `@ErrorCode`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:753
#, no-wrap
msgid ""
"@ErrorCode(\"some-business-error-code\")\n"
"public class SomeBusinessException extends RuntimeException {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:756
msgid "When `SomeBusinessException` occurs, the error output will contain the Error code:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:783
#, no-wrap
msgid ""
"{\n"
"    \"errors\": [\n"
"        {\n"
"            \"message\": \"Unexpected failure in the system. Jarvis is working to fix it.\",\n"
"            \"locations\": [\n"
"                {\n"
"                    \"line\": 2,\n"
"                    \"column\": 3\n"
"                }\n"
"            ],\n"
"            \"path\": [\n"
"                \"annotatedCustomBusinessException\"\n"
"            ],\n"
"            \"extensions\": {\n"
"                \"exception\": \"io.smallrye.graphql.test.apps.error.api.ErrorApi$AnnotatedCustomBusinessException\",\n"
"                \"classification\": \"DataFetchingException\",\n"
"                \"code\": \"some-business-error-code\" <1>\n"
"            }\n"
"        }\n"
"    ],\n"
"    \"data\": {\n"
"        ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:786
msgid "The error code"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:787
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:791
msgid "MicroProfile GraphQL enables clients to retrieve the exact data that is required preventing `Over-fetching` and `Under-fetching`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:794
msgid "The GraphQL API can be expanded without breaking previous queries enabling easy API `evolution`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.7/guides/microprofile-graphql.adoc:796
#, no-wrap
msgid "Configuration Reference"
msgstr ""
