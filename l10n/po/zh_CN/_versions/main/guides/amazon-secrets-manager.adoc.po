# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-12-05 01:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:6
#, no-wrap
msgid "Amazon Secrets Manager Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:13
msgid "AWS Secrets Manager enables you to replace hardcoded credentials in your code, including passwords, with an API call to Secrets Manager to retrieve the secret programmatically.  This helps ensure the secret can't be compromised by someone examining your code, because the secret no longer exists in the code."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:15
msgid "You can find more information about Secrets Manager at https://docs.aws.amazon.com/secretsmanager/[the AWS Secrets Manager website]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:18
msgid "The Secrets Manager extension is based on https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/welcome.html[AWS Java SDK 2.x].  It's a major rewrite of the 1.x code base that offers two programming models (Blocking & Async)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:22
msgid "The Quarkus extension supports two programming models:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:24
msgid "Blocking access using URL Connection HTTP client (by default) or the Apache HTTP Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:25
msgid "https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/basics-async.html[Asynchronous programming] based on JDK's `CompletableFuture` objects and the Netty HTTP client."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:27
msgid "In this guide, we see how you can get your REST services to use Secrets Manager locally and on AWS."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:28
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:31
msgid "To complete this guide, you need:"
msgstr "要完成本指南，您需要："

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:33
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:34
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:35
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:36
msgid "An AWS Account to access the Secrets Manager service"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:37
msgid "Docker for your system to run Secrets Manager locally for testing purposes"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:38
#, no-wrap
msgid "Set up Secrets Manager locally"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:41
msgid "The easiest way to start working with Secrets Manager is to run a local instance as a container."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:45
#, no-wrap
msgid "docker run --rm --name local-secrets-manager --publish 8014:4584 -e SERVICES=secretsmanager -e START_WEB=0 -d localstack/localstack:0.11.1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:47
msgid "This starts a Secrets Manager instance that is accessible on port `8014`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:49
msgid "Create an AWS profile for your local instance using AWS CLI:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:56
#, no-wrap
msgid ""
"$ aws configure --profile localstack\n"
"AWS Access Key ID [None]: test-key\n"
"AWS Secret Access Key [None]: test-secret\n"
"Default region name [None]: us-east-1\n"
"Default output format [None]:\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:58
#, no-wrap
msgid "Solution"
msgstr "完整源码"

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:60
msgid "The application built here allows to store and retrieve credentials using Secrets Manager."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:63
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:65
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:67
msgid "The solution is located in the `amazon-secretsmanager-quickstart` {quickstarts-tree-url}/amazon-secretsmanager-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:68
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:71
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:81
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=amazon-secretsmanager-quickstart \\\n"
"    -DclassName=\"org.acme.secretsmanager.QuarkusSecretsManagerSyncResource\" \\\n"
"    -Dpath=\"/sync\" \\\n"
"    -Dextensions=\"resteasy,resteasy-jackson,amazon-secretsmanager,resteasy-mutiny\"\n"
"cd amazon-secretsmanager-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:85
msgid "This command generates a Maven structure importing the RESTEasy/JAX-RS, Mutiny and Amazon Secrets Manager Client extensions.  After this, the `amazon-secretsmanager` extension has been added to your `pom.xml` as well as the Mutiny support for RESTEasy."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:86
#, no-wrap
msgid "Creating JSON REST service"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:90
msgid "In this example, we will create an application that allows us to store and retrieve parameters to and from SSM parameter store using a RESTful API.  The example application will demonstrate the two programming models supported by the extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:92
msgid "Let's start with an abstract `org.acme.secretsmanager.QuarkusSecretsManagerResource` class to provide the common functionality we will need for both the synchronous and asynchrounous exposures."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:96
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:142
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:260
#, no-wrap
msgid "package org.acme.secretsmanager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:99
#, no-wrap
msgid ""
"import static java.lang.Boolean.TRUE;\n"
"import static java.util.stream.Collectors.toMap;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:102
#, no-wrap
msgid ""
"import java.util.Map;\n"
"import java.util.stream.Collector;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:104
#, no-wrap
msgid "import javax.annotation.PostConstruct;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:106
#, no-wrap
msgid "import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:109
#, no-wrap
msgid ""
"import software.amazon.awssdk.services.secretsmanager.model.CreateSecretRequest;\n"
"import software.amazon.awssdk.services.secretsmanager.model.GetSecretValueRequest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:112
#, no-wrap
msgid ""
"public abstract class QuarkusSecretsManagerResource {\n"
"    public static final String VERSION_STAGE = \"AWSCURRENT\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:115
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"secret.name\") <1>\n"
"    String secretName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:122
#, no-wrap
msgid ""
"    protected GetSecretValueRequest generateGetSecretValueRequest() {\n"
"        return GetSecretValueRequest.builder() <2>\n"
"                .secretId(secretName)\n"
"                .versionStage(VERSION_STAGE)\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:129
#, no-wrap
msgid ""
"    protected CreateSecretRequest generateCreateSecretRequest(String name, String secret) {\n"
"        return CreateSecretRequest.builder() <3>\n"
"                .name(name)\n"
"                .secretString(secret)\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:131
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:178
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:300
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:134
msgid "Inject a configured name under which is stored the secret"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:135
msgid "Generate a request for the credentials with the configured name"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:136
msgid "Generate a request to create a specific secret"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:138
msgid "Now, we can extend the class and create the synchronous implementation in the `org.acme.ssm.QuarkusSecretsManagerSyncResource` class."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:144
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:262
#, no-wrap
msgid "import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:155
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:273
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.DefaultValue;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.QueryParam;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:157
#, no-wrap
msgid "import software.amazon.awssdk.services.secretsmanager.SecretsManagerClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:160
#, no-wrap
msgid ""
"@Path(\"/sync\")\n"
"public class QuarkusSecretsManagerSyncResource extends QuarkusSsmResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:163
#, no-wrap
msgid ""
"    @Inject <1>\n"
"    SecretsManagerClient secretsManagerClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:169
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public String getSecret() {\n"
"        return secretsManagerClient.getSecretValue(generateGetSecretValueRequest()).secretString();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:176
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/{name}\")\n"
"    @Consumes(MediaType.TEXT_PLAIN)\n"
"    public void createSecret(@PathParam(\"name\") String name, String value) {\n"
"        secretsManagerClient.createSecret(generateCreateSecretRequest(name, secret));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:181
msgid "Inject the client provided by the amazon-secretsmanager extension"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:183
msgid "Using the Amazon Secrets Manager SDK, we can easily store and retrieve secrets."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:184
#, no-wrap
msgid "Configuring Secrets Manager clients"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:189
msgid "Both Secrets Manager clients (sync and async) are configurable via the `application.properties` file that can be provided in the `src/main/resources` directory.  Additionally, you need to add to the classpath a proper implementation of the sync client. By default the extension uses the URL connection HTTP client, so you need to add a URL connection client dependency to the `pom.xml` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:196
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>url-connection-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:199
msgid "If you want to use Apache HTTP client instead, configure it as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:203
#, no-wrap
msgid "quarkus.secretsmanager.sync-client.type=apache\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:206
msgid "And add the following dependency to the application `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:217
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>apache-client</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-apache-httpclient</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:220
msgid "If you're going to use a local Secrets Manager instance, configure it as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:224
#, no-wrap
msgid "quarkus.secretsmanager.endpoint-override=http://localhost:8014 <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:229
#, no-wrap
msgid ""
"quarkus.secretsmanager.aws.region=us-east-1 <2>\n"
"quarkus.secretsmanager.aws.credentials.type=static <3>\n"
"quarkus.secretsmanager.aws.credentials.static-provider.access-key-id=test-key\n"
"quarkus.secretsmanager.aws.credentials.static-provider.secret-access-key=test-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:232
msgid "Override the Secret Manager client to use localstack instead of the actual AWS service"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:233
msgid "Localstack defaults to `us-east-1`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:234
msgid "The `static` credentials provider lets you set the `access-key-id` and `secret-access-key` directly"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:236
msgid "If you want to work with an AWS account, you can simply remove or comment out all Amazon SSM related properties. By default, the Secrets Manager client extension will use the `default` credentials provider chain that looks for credentials in this order:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:240
msgid "And the region from your AWS CLI profile will be used."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:241
#, no-wrap
msgid "Next steps"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:243
#, no-wrap
msgid "Packaging"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:247
msgid "Packaging your application is as simple as `./mvnw clean package`.  It can then be run with `java -Dparameters.path=/quarkus/is/awesome/ -jar target/quarkus-app/quarkus-run.jar`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:250
msgid "With GraalVM installed, you can also create a native executable binary: `./mvnw clean package -Dnative`.  Depending on your system, that will take some time."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:251
#, no-wrap
msgid "Going asynchronous"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:254
msgid "Thanks to the AWS SDK v2.x used by the Quarkus extension, you can use the asynchronous programming model out of the box."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:256
msgid "Create a `org.acme.secretsmanager.QuarkusSecretsManagerAsyncResource` REST resource that will be similar to our `QuarkusSecretsManagerSyncResource` but using an asynchronous programming model."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:276
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import software.amazon.awssdk.services.secretsmanager.SecretsManagerAsyncClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:279
#, no-wrap
msgid ""
"@Path(\"/async\")\n"
"public class QuarkusSecretsManagerAsyncResource extends QuarkusSecretsManagerResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:282
#, no-wrap
msgid ""
"    @Inject\n"
"    SecretsManagerAsyncClient secretsManagerAsyncClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:289
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public Uni<String> getSecret() {\n"
"        return Uni.createFrom().completionStage(secretsManagerAsyncClient.getSecretValue(generateGetSecretValueRequest()))\n"
"                .onItem().transform(r -> r.secretString());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:294
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"/{name}\")\n"
"    @Consumes(MediaType.TEXT_PLAIN)\n"
"    public Uni<Void> createSecret(@PathParam(\"name\") String name, String value) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:298
#, no-wrap
msgid ""
"        return Uni.createFrom().completionStage(secretsManagerAsyncClient.createSecret(generateCreateSecretRequest(name, secret)))\n"
"                .onItem().transform(r -> null);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:303
msgid "Note that the `SecretsManagerAsyncClient` behaves just like the `SecretsManagerClient`, but returns `CompletionStage` objects which we use to create `Uni` instances, and then transform the emitted item."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:305
msgid "To enable the asynchronous client, we also need to add the Netty HTTP client dependency to the `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:312
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>software.amazon.awssdk</groupId>\n"
"    <artifactId>netty-nio-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/amazon-secrets-manager.adoc:314
#, no-wrap
msgid "Configuration Reference"
msgstr ""
