# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-08 00:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:6
#, no-wrap
msgid "Dev Services for OpenId Connect (OIDC)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:11
msgid "This guide covers the Dev Services for OpenId Connect (OIDC) Keycloak provider and explains how to support other OpenId Connect providers."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:12
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:16
msgid "Quarkus introduces an experimental `Dev Services For Keycloak` feature which is enabled by default when the `quarkus-oidc` extension is started in dev mode with `mvn quarkus:dev` and when the integration tests are running in test mode, but only when no `quarkus.oidc.auth-server-url` property is configured.  It starts a Keycloak container for both the dev and/or test modes and initializes them by registering the existing Keycloak realm or creating a new realm with the client and users for you to start developing your Quarkus application secured by Keycloak immediately. It will restart the container when the `application.properties` or the realm file changes have been detected."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:18
msgid "Additionally, link:dev-ui[Dev UI] available at http://localhost:8080/q/dev[/q/dev] supports this feature with a Keycloak specific page which helps to acquire the tokens from Keycloak and test your Quarkus application."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:19
#, no-wrap
msgid "Dev Services for Keycloak"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:22
msgid "Start your application without configuring `quarkus.oidc` properties in `application.properties`. You will see in the console something similar to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:26
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:43
#, no-wrap
msgid "$ mvn quarkus:dev\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:34
#, no-wrap
msgid ""
"2021-06-04 16:22:47,175 INFO  [üê≥ .io/keycloak/keycloak:14.0.0]] (build-38) Creating container for image: quay.io/keycloak/keycloak:14.0.0\n"
"2021-06-04 16:22:47,243 INFO  [üê≥ .io/keycloak/keycloak:14.0.0]] (build-38) Starting container with ID: 6469f6db9cec2c855fcc6c8db4273944cc9d69e8f6803a0b47eb2d5b8f5b94fd\n"
"2021-06-04 16:22:47,629 INFO  [üê≥ .io/keycloak/keycloak:14.0.0]] (build-38) Container quay.io/keycloak/keycloak:14.0.0 is starting: 6469f6db9cec2c855fcc6c8db4273944cc9d69e8f6803a0b47eb2d5b8f5b94fd\n"
"2021-06-04 16:22:47,643 INFO  [org.tes.con.wai.str.HttpWaitStrategy] (build-38) /elastic_lovelace: Waiting for 60 seconds for URL: http://localhost:32812/auth (where port 32812 maps to container port 8080)\n"
"2021-06-04 16:23:07,665 INFO  [üê≥ .io/keycloak/keycloak:14.0.0]] (build-38) Container quay.io/keycloak/keycloak:14.0.0 started in PT5.500489S\n"
"2021-06-04 16:23:07,666 INFO  [io.qua.oid.dep.dev.key.KeycloakDevServicesProcessor] (build-38) Dev Services for Keycloak started.\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:37
msgid "The `quay.io/keycloak/keycloak:14.0.0` Keycloak image is used by default to start a container. `quarkus.keycloak.devservices.image-name` can be used to change the Keycloak image used."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:39
msgid "Note that by default, `Dev Services for Keycloak` will not start a new container if it finds a container with a `quarkus-dev-service-keycloak` label and connect to it if this label's value matches the value of the `quarkus.keycloak.devservces.service-name` property (default value is `quarkus`). In such cases you will see a slighty different output:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:47
#, no-wrap
msgid ""
"2021-08-27 18:42:43,530 INFO  [io.qua.dev.com.ContainerLocator] (build-15) Dev Services container found: 48fee151a31ddfe32c39965be8f61108587b25ed2f66cdc18bb926d9e2e570c5 (quay.io/keycloak/keycloak:14.0.0). Connecting to: 0.0.0.0:32797.\n"
"2021-08-27 18:42:43,600 INFO  [io.qua.oid.dep.dev.key.KeycloakDevServicesProcessor] (build-15) Dev Services for Keycloak started.\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:50
msgid "Note that you can disable sharing the containers with `quarkus.keycloak.devservices.shared=false`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:52
msgid "Now open the main link:http://localhost:8080/q/dev[Dev UI page] and you will see the `OpenId Connect Card` linking to a `Keycloak` page:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:53
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:67
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:71
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:75
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:106
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:126
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:136
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:163
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:177
#, no-wrap
msgid "Dev"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:53
#, no-wrap
msgid "dev-ui-oidc-keycloak-card.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:56
msgid "Click on the `Provider: Keycloak` link and you will see a Keycloak page which will be presented slightly differently depending on how `Dev Services for Keycloak` feature has been configured."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:57
#, no-wrap
msgid "Developing Service Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:60
msgid "By default the Keycloak page can be used to support the development of a link:security-openid-connect[Quarkus OIDC service application]."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:61
#, no-wrap
msgid "Authorization Code Grant"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:64
msgid "If you set `quarkus.keycloak.devservices.grant.type=code` in `applicatin.properties` (this is a default value) then an `authorization_code` grant will be used to acquire both access and ID tokens. Using this grant is recommended to emulate a typical flow where a `Single Page Application` acquires the tokens and uses them to access Quarkus services."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:66
msgid "First you will see an option to `Log into Single Page Application`:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:67
#, no-wrap
msgid "dev-ui-keycloak-sign-in-to-spa.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:70
msgid "Next, after you select this option, you will be redirected to Keycloak to authenticate, example, as `alice:alice` and then returned to the page representing the SPA:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:71
#, no-wrap
msgid "dev-ui-keycloak-test-service-from-spa.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:74
msgid "You can view the acquired access and ID tokens, for example:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:75
#, no-wrap
msgid "dev-ui-keycloak-decoded-tokens.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:78
msgid "This view shows the encoded JWT token on the left hand side and highlights the headers (red colour), payload/claims (green colour) and signature (blue colour). It also shows the decoded JWT token on the right hand side where you can see the header and claim names and their values."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:80
msgid "Next test the service with either the current access or ID token. SPA usually sends the access tokens to the application endpoints but there could be cases where the ID tokens are forwarded to the application frontends for them to be aware about the user who is currently logged into SPA."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:82
msgid "Finally you can select a `Log Out` image::dev-ui-keycloak-logout.png option if you'd like to log out and authenticate to Keycloak as a different user."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:86
msgid "You may need to register a redirect URI for the authorization code flow initiated by Dev UI for Keycloak to work because Keycloak may enforce that the authenticated users are redirected only to the configured redirect URI. It is recommended to do in production to avoid the users being redirected to the wrong endpoints which might happen if the correct `redirect_uri` parameter in the authentication request URI has been manipulated."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:88
msgid "If Keycloak does enforce it then you will see an authentication error informing you that the `redirect_uri` value is wrong."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:90
msgid "In this case select the `Keycloak Admin` option in the right top corner, login as `admin:admin`, select the test realm and the client which Dev UI for Keycloak is configured with and add `http://localhost:8080/q/dev/io.quarkus.quarkus-oidc/provider` to `Valid Redirect URIs`. If you used `-Dquarkus.http.port` when starting Quarkus then change `8080` to the value of `quarkus.http.port`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:92
msgid "If the container is shared between multiple applications running on different ports then you will need to register `redirect_uri` values for each of these applications."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:94
msgid "You can set the `redirect_uri` value to `*` only for the test purposes, especially when the containers are shared between multiple applications."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:96
msgid "`*` `redirect_uri` value is set by `Dev Services for Keycloak` when it creates a default realm, if no custom realm is imported."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:98
#, no-wrap
msgid "Implicit Grant"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:101
msgid "If you set `quarkus.keycloak.devservices.grant.type=implicit` in `applicatin.properties` then an `implicit` grant will be used to acquire both access and ID tokens. Use this grant for emulating a `Single Page Application` only if the authorization code grant does not work (for example, a client is configured in Keycloak to support an implicit grant, etc)."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:102
#, no-wrap
msgid "Password Grant"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:105
msgid "If you set `quarkus.keycloak.devservices.grant.type=password` in `applicatin.properties` then you will see a screen like this one:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:106
#, no-wrap
msgid "dev-ui-keycloak-password-grant.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:109
msgid "Enter a registered user name, a relative service endpoint path, click on `Test Service` and you will see a status code such as `200`, `403`, `401` or `404` printed."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:111
msgid "You will also see in the Dev UI console something similar to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:118
#, no-wrap
msgid ""
"2021-07-19 17:58:11,407 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Using password grant to get a token from 'http://localhost:32818/auth/realms/quarkus/protocol/openid-connect/token' for user 'alice' in realm 'quarkus' with client id 'quarkus-app'\n"
"2021-07-19 17:58:11,533 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Test token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6Z2tDazJQZ1JaYnVlVG5kcTFKSW1sVnNoZ2hhbWhtbnBNcXU0QUt5MnJBIn0.ey...\n"
"2021-07-19 17:58:11,536 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Sending token to 'http://localhost:8080/api/admin'\n"
"2021-07-19 17:58:11,674 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Result: 200\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:121
msgid "A token is acquired from Keycloak using a `password` grant and is sent to the service endpoint."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:122
#, no-wrap
msgid "Client Credentials Grant"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:125
msgid "If you set `quarkus.keycloak.devservices.grant.type=client` then a `client_credentials` grant will be used to acquire a token, with the page showing no `User` field in this case:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:126
#, no-wrap
msgid "dev-ui-keycloak-client-credentials-grant.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:129
msgid "You can test the service the same way as with the `Password` grant."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:130
#, no-wrap
msgid "Developing OpenId Connect Web App Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:133
msgid "If you develop a link:security-openid-connect-web-authentication[Quarkus OIDC web-app application] then you should set `quarkus.oidc.application-type=web-app` in `application.properties` before starting the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:135
msgid "You will see a screen like this one:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:136
#, no-wrap
msgid "dev-ui-keycloak-sign-in-to-service.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:139
msgid "Set a relative service endpoint path, click on `Sign In To Service` and you will be redirected to Keycloak to enter a username and password in a new browser tab and get a response from the Quarkus application."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:140
#, no-wrap
msgid "Running the tests"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:143
msgid "You can run the tests against a Keycloak container started in a test mode in a link:continuous-testing[Continuous Testing] mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:146
msgid "It is also recommended to run the integration tests against Keycloak using `Dev Services for Keycloak`.  Please see link:security-openid-connect#integration-testing-keycloak-devservices[Testing OpenId Connect Service Applications with Dev Services] and link:security-openid-connect-web-authentication#integration-testing-keycloak-devservices[Testing OpenId Connect WebApp Applications with Dev Services] for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:147
#, no-wrap
msgid "Keycloak Initialization"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:150
msgid "You do not need to configure `quarkus-oidc-keycloak` to start developing your Quarkus Keycloak `OIDC` applications with the only exception being that `quarkus.oidc.application-type=web-app` has to be set in `application.properties` to give the `Keycloak` page a hint it needs to show an option to `Sign In To Service`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:152
msgid "By default, the `quarkus`, `quarkus-app` client with a `secret` password, `alice` and `bob` users (with the passwords matching the names), and `user` and `admin` roles are created, with `alice` given both `admin` and `user` roles and `bob` - the `user` role."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:154
msgid "Usernames, secrets and their roles can be customized with `quarkus.keycloak.devservices.users` (the map which contains usernames and secrets) and `quarkus.keycloak.devservices.roles` (the map which contains user names and comma separated role values)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:156
msgid "`quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` can be used to customize the client id and secret."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:158
msgid "However it is likely your Keycloak configuration may be more complex and require setting more properties."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:160
msgid "This is why `quarkus.keycloak.devservices.realm-path` is always checked first before trying to initialize Keycloak with the default or configured realm, client, user and roles properties. If the realm file exists on the file system or classpath then only this realm will be used to initialize Keycloak."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:162
msgid "Also the Keycloak page offers an option to `Sign In To Keycloak To Configure Realms` using a `Keycloak Admin` option in the right top corner:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:163
#, no-wrap
msgid "dev-ui-keycloak-admin.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:166
msgid "Sign in to Keycloak as `admin:admin` in order to further customize the realm properties or create a new realm, export the realm and have Keycloak initialized with the custom realm after a restart."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:168
msgid "Note that even if you initialize Keycloak from a realm file, it is still needed to set the `quarkus.keycloak.devservices.realm-name` property for `quarkus.oidc.auth-server-url` to be calculated correctly. Setting the `quarkus.keycloak.devservices.users` property is needed if a `password` grant is used to acquire the tokens to test the OIDC `service` applications."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:169
#, no-wrap
msgid "Disable Dev Services for Keycloak"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:172
msgid "`Dev Services For Keycloak` will not be activated if either `quarkus.oidc.auth-server-url` is already initialized or the defaut OIDC tenant is disabled with `quarkus.oidc.tenant.enabled=false`, irrespectively of whether you work with Keycloak or not."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:174
msgid "If you prefer not to have a `Dev Services for Keycloak` container started or do not work with Keycloak then you can also disable this feature with `quarkus.keycloak.devservices.enabled=false` - it will only be necessary if you expect to start `quarkus:dev` without `quarkus.oidc.auth-server-url`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:176
msgid "The main Dev UI page will include an empty `OpenId Connect Card` when `Dev Services for Keycloak` is disabled:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:177
#, no-wrap
msgid "dev-ui-oidc-card.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:179
#, no-wrap
msgid "Dev Services Support for other OpenId Connect Providers"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:182
msgid "Your custom extension would need to extend `quarkus-oidc` only and add the dependencies required to support your provider to the extension's `deployment` module only."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:184
msgid "The build step dealing with the `Dev Services` should additionally register two runtime properties into the \"io.quarkus.quarkus-oidc\" namespace: `oidcProviderName` (for example, `Google`) and `oidcProviderUrlBase` (for example: `mycompany.devservices-google`) for the `OpenId Connect Card` to link to the Dev UI page representing your provider, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:188
#, no-wrap
msgid "package io.quarkus.oidc.okta.runtime;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:190
#, no-wrap
msgid "import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:192
#, no-wrap
msgid "import io.quarkus.runtime.annotations.Recorder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:196
#, no-wrap
msgid ""
"// This simple recorder is the only code which will be located in the extension's `runtime` module\n"
"@Recorder\n"
"public class OktaDevServicesRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:199
#, no-wrap
msgid ""
"    public Supplier<String> getProviderName() {\n"
"        return new Supplier<String>() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:206
#, no-wrap
msgid ""
"            @Override\n"
"            public String get() {\n"
"                return \"OKTA\";\n"
"            }\n"
"        };\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:209
#, no-wrap
msgid ""
"    public Supplier<String> getProviderUrlBase() {\n"
"        return new Supplier<String>() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:217
#, no-wrap
msgid ""
"            @Override\n"
"            public String get() {\n"
"                return \"io.quarkus\" + \".\" + \"quarkus-oidc-okta\";\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:220
#, no-wrap
msgid "package io.quarkus.oidc.okta.deployment.devservices;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:222
#, no-wrap
msgid "import static io.quarkus.deployment.annotations.ExecutionTime.RUNTIME_INIT;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:224
#, no-wrap
msgid "import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:233
#, no-wrap
msgid ""
"import io.quarkus.deployment.IsDevelopment;\n"
"import io.quarkus.deployment.annotations.BuildProducer;\n"
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.annotations.Consume;\n"
"import io.quarkus.deployment.annotations.Record;\n"
"import io.quarkus.deployment.builditem.RuntimeConfigSetupCompleteBuildItem;\n"
"import io.quarkus.devconsole.spi.DevConsoleRouteBuildItem;\n"
"import io.quarkus.devconsole.spi.DevConsoleRuntimeTemplateInfoBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:235
#, no-wrap
msgid "public class OktaDevConsoleProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:249
#, no-wrap
msgid ""
"    @BuildStep(onlyIf = IsDevelopment.class)\n"
"    @Record(value = RUNTIME_INIT)\n"
"    public void setOidcProviderProperties(BuildProducer<DevConsoleRuntimeTemplateInfoBuildItem> provider,\n"
"            OktaDevServicesRecorder recorder,\n"
"            Optional<DevServicesConfigBuildItem> configProps) {\n"
"        if (configProps.isPresent()) {\n"
"            provider.produce(new DevConsoleRuntimeTemplateInfoBuildItem(\"io.quarkus\", \"quarkus-oidc\", \"oidcProviderName\",\n"
"                    recorder.getProviderName()));\n"
"            provider.produce(new DevConsoleRuntimeTemplateInfoBuildItem(\"io.quarkus\", \"quarkus-oidc\", \"oidcProviderUrlBase\",\n"
"                    recorder.getProviderUrlBase()));\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:253
msgid "Additionally, the extension should produce a `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` to disable the default `Dev Services for Keycloak`, instead of the users having to type `quarkus.keycloak.devservices.enabled=false`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:255
msgid "Please follow the link:dev-ui[Dev UI] tutorial as well as check the `extensions/oidc/deployment` sources for more ideas."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:256
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:259
msgid "link:dev-ui[Dev UI]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:260
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:261
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:262
msgid "link:security-openid-connect[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:263
msgid "link:security-openid-connect-web-authentication[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-openid-connect-dev-services.adoc:263
msgid "link:security[Quarkus Security]"
msgstr ""
