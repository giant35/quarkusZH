# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-03 01:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/extension-codestart.adoc:6
#, no-wrap
msgid "Extension codestart"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:10
msgid "This guide explains how to create and configure a Quarkus Codestart for an extension."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:11
#, no-wrap
msgid "Description"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:15
msgid "\"Extension Codestarts\" is the name we gave to our Quarkus extension quickstart code generation system. It aims to provide a personalized getting started experience with Quarkus.  A Quarkus extension is able to provide one or more well defined codestarts which will contain the necessary resources and code required to start using that particular extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:17
msgid "You can apply extension codestarts in the Quarkus tooling:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:19
msgid "https://code.quarkus.io[code.quarkus.io, window=\"_blank\"] (find the extensions tagged with [code])"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:20
msgid "The Quarkus Maven plugin:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/extension-codestart.adoc:24
#, no-wrap
msgid "mvn io.quarkus.platform:quarkus-maven-plugin:create\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:27
msgid "The Quarkus CLI:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/extension-codestart.adoc:31
#, no-wrap
msgid "quarkus create app\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:33
#, no-wrap
msgid "How it works"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:36
msgid "When starting a project, you choose the language, the build tool, the framework, then you add dockerfiles, CI, dependencies and code."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:38
msgid "Codestarts are working the same way when contributing to the generation of a project, they are split in two categories:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:40
#, no-wrap
msgid "**The \"Base\" codestarts (you choose a combination of those):**\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:42
msgid "project: The project skeleton (e.g. a Quarkus project)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:43
msgid "buildtool: The build tool (e.g. Maven, Gradle, Gradle with Kotlin DSL)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:44
msgid "language: The coding language (e.g. Java, Kotlin, Scala)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:45
msgid "config: The config type (e.g. yaml, properties)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:47
#, no-wrap
msgid "**Extra codestarts (as much as wanted, to put on top):**\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:49
msgid "tooling: Anything that can be added to improve the project (e.g. dockerfiles, github-action)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:50
msgid "code: Any Quarkus extension can provide starter code. The user can decide to activate it or not."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:52
msgid "Each codestart consists of:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:54
msgid "A codestart unique name, ie `my-codestart`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:55
msgid "A directory for the codestart files, ie `my-codestart/`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:56
msgid "A `codestart.yml` file"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:57
msgid "Optionally some templates that are following a common structure and naming conventions"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:58
#, no-wrap
msgid "Where are the Quarkus Extension Codestarts located"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:61
msgid "In Quarkus core repo, the extension codestarts are all in the same https://github.com/quarkusio/quarkus/tree/main/devtools/project-core-extension-codestarts/src/main/resources/codestarts/quarkus/extension-codestarts[module, window=\"_blank\"]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:63
msgid "RESTEasy, RESTEasy Reactive and Spring Web extension codestarts are part of https://github.com/quarkusio/quarkus/tree/main/independent-projects/tools/base-codestarts/src/main/resources/codestarts/quarkus/extension-codestarts[the base codestarts, window=\"_blank\"]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:65
msgid "For other extensions, the codestart will typically be located in the runtime module (with special instruction in the `pom.xml` to generate a separate codestart artifact)."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:66
#, no-wrap
msgid "Base codestarts"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:69
msgid "The https://github.com/quarkusio/quarkus/tree/main/independent-projects/tools/base-codestarts/src/main/resources/codestarts/quarkus[base codestarts, window=\"_blank\"] contains templates to create project, buildtool, languages, config & tooling files."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:70
#, no-wrap
msgid "Writing an Extension Codestart"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:73
msgid "As was mentioned previously, the base project files (pom.xml, dockerfiles, ...) are already generated by base codestarts provided by the Quarkus core. Thanks to this, we can only focus on the important - the starter code for the extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:75
msgid "The codestart should not include any business logic, instead, it should contain some stub data/hello world to compile. The idea is to bring code that is the starting point to everyone using the extension."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:76
#, no-wrap
msgid "Writing an Extension Codestart in Quarkus Core"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:79
msgid "Copy one of the existing https://github.com/quarkusio/quarkus/tree/main/devtools/project-core-extension-codestarts/src/main/resources/codestarts/quarkus/extension-codestarts[Quarkus core extension codestarts, window=\"_blank\"]. If the code needs to expose a web resource, `resteasy-qute-codestart` could be a good base Otherwise, `config-yaml-codestart` could be a better starting point. More info on the <<directory-structure>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:81
msgid "Edit the <<codestart-yml>>:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:83
msgid "Create the extension binding in the extension metadata (https://github.com/quarkusio/quarkus/blob/main/extensions/config-yaml/runtime/src/main/resources/META-INF/quarkus-extension.yaml#L12-L17[example, window=\"_blank\"]). *Thanks to this, the codestart is added when the user selects the extension*"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:85
msgid "Add the readme <<readme-md>> section template."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:87
msgid "Add the code in the language folder (it is recommended to at least provide java and kotlin). *You have to use `org.acme` as the package name: <<org-acme-package>>*. It is possible to use <<qute-templates>> if needed."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:89
msgid "Optionally, Add the `index.html` section template (<<index-html>>)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:91
msgid "Optionally, add some resources (`./base` directory if they are non language specific)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:93
msgid "Optionally, add the <<app-config>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:95
msgid "Create an <<integration-test>> *You can use it to get your codestart generated as a project*."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:97
msgid "You can also use it for dev using the `buildAllProjectsForLocalUse` (Disabled by default because it's already covered by `QuarkusCodestartBuildIT`)."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:98
#, no-wrap
msgid "Writing an Extension Codestart in the Quarkiverse or standalone"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:101
msgid "For extensions hosted outside of the Quarkus core[https://github.com/quarkusio/quarkus] repository, codestarts will typically be located in the runtime module (with special instruction in the `pom.xml` to generate a separate codestart artifact). https://github.com/ia3andy/aloha-code/[Here, window=\"_blank\"] is an example extension with a codestart & its tests"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:103
#, no-wrap
msgid "Specific topics"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:106
#, no-wrap
msgid "Dynamic package name generation from org.acme"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:110
msgid "You have to use `org.acme` as the package name in your extension codestart sources. In the generated project, the user specified package will be used (and auto-replace `org.acme`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:112
msgid "It will be auto-replaced in all the source files (.java, .kt, .scala). The package directory will also be automatically adjusted. If for some reason, another type of file needs the user package name then you should use a <<qute-templates>> for it and `{project.package-name}` data placeholder (https://github.com/quarkusio/quarkus/blob/main/devtools/project-core-extension-codestarts/src/main/resources/codestarts/quarkus/extension-codestarts/grpc-codestart/base/src/main/proto/hello.tpl.qute.proto#L4[find an example in the grpc proto file, window=\"_blank\"])."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:114
#, no-wrap
msgid "codestart.yml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/extension-codestart.adoc:139
#, no-wrap
msgid ""
"# the codestart unique name\n"
"name: resteasy-example\n"
"# the codestart reference (the name is used if not set)\n"
"ref: resteasy\n"
"# the type of codestart (other types are used for other project files)\n"
"type: code\n"
"# public metadata for this example (they will also be accessible from this codestart qute templates by using the key: {title})\n"
"metadata:\n"
"  title: RESTEasy JAX-RS example\n"
"  description: Rest is easy peasy with this Hello World RESTEasy resource.\n"
"  related-guide-section: https://quarkus.io/guides/getting-started#the-jax-rs-resources\n"
"  # the path is optional and used by the generated index.html if present\n"
"  path: /some-path\n"
"language:\n"
"  base:\n"
"    # Specify the extension and possibly other required dependencies\n"
"    dependencies:\n"
"      - io.quarkus:quarkus-resteasy\n"
"    # And maybe test dependencies?\n"
"    test-dependencies:\n"
"      - io.rest-assured:rest-assured\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:142
#, no-wrap
msgid "Directory Structure"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:145
msgid "`codestart.yml` is the only required file."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:147
msgid "`codestart.yml` must be at the root of the codestart"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:148
msgid "`./base` contains all the files that will be processed independently of the specified language"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:149
msgid "`./[java/kotlin/scala]` contains all the files that will be processed only if the specified language has been selected (overriding base)"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:150
#, no-wrap
msgid "Naming Convention for files"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:153
msgid "`.tpl.qute` will be processed with Qute and can use data (`.tpl.qute` will be removed from the output file name)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:154
msgid "certain common files, such as `readme.md`, `src/test/resources/application.yml`, `src/main/resources/META-INF/resources/index.html` are generated from the collected fragments found in the selected codestarts for the project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:155
msgid "other files are copied."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:157
#, no-wrap
msgid "Templates (Qute)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:160
msgid "Codestarts may use Qute templates `MyClass.tpl.qute.java` for dynamic rendering."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:162
msgid "Those templates are able to use data which contains:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:164
msgid "The `data` (and public `metadata`) of the codestart to generate (specified in the `codestart.yml`)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:165
msgid "A merge of the `shared-data` from the all the codestarts used to generate the project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:166
msgid "The user input"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:167
msgid "Some dynamically generated data (e.g. `dependencies` and `test-dependencies`)"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:169
#, no-wrap
msgid "README.md"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:173
msgid "You may add a `README.md` or `README.tpl.qute.md` in the `base` directory, it will be appended to the others.  So just add the info relative to your extension codestart."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:175
msgid "base/readme.tpl.qute.md"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/extension-codestart.adoc:178
#, no-wrap
msgid "{#include readme-header /}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/extension-codestart.adoc:180
#, no-wrap
msgid "[Optionally, Here you may add information about how to use the example, settings, ...]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:183
msgid "The `{#include readme-header /}` will use a template located in the Quarkus project codestart which displays standard info from the `codestart.yml` metadata."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:185
#, no-wrap
msgid "application config application.yml"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:188
msgid "As a convention, you should always provide the Quarkus configuration as a yaml file (`base/src/test/resources/application.yml`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:190
msgid "It is going to be:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:192
msgid "merged with the other extension codestarts configs"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:193
msgid "automatically converted to the selected config type (yaml or properties) at generation time depending on the selected extensions"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:195
#, no-wrap
msgid "index.html and web extension codestarts"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:199
msgid "Extension codestarts may provide a snippet for the generated index.html by adding this file:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:201
msgid "base/src/main/resources/META-INF/resources/index.entry.qute.html:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/extension-codestart.adoc:204
#, no-wrap
msgid "{#include index-entry /}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:207
msgid "The `{#include index-entry /}` will use a template located in the Quarkus project codestart which displays standard info from the `codestart.yml` metadata."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:209
#, no-wrap
msgid "Integration test"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:213
msgid "An extension is available to help test extension codestarts `QuarkusCodestartTest`. It provides a way to test:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:215
msgid "the generated project content (with immutable mocked data) using snapshot testing"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:216
msgid "the generated project build/run (with real data) with helpers to run the build"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:218
msgid "Before all tests, the extension will generate Quarkus projects in the specified languages with the given codestart, with mocked data and with real data. You can find those generated project in `target/quarkus-codestart-test`. You can open the `real-data` ones in your IDE or play with them using the terminal. *Running those tests is the easiest way to iterate on your extension codestart dev.*"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:221
msgid "The extension provides helpers to test that the projects build `buildAllProjects` or just a specific language project `buildProject(Language language)`. It also provides helpers to test the content with <<snapshot-testing>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:223
msgid "The https://github.com/quarkusio/quarkus/blob/main/integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/ConfigYamlCodestartTest.java[ ConfigYamlCodestartTest, window=\"_blank\"] is a good example in Quarkus core."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/extension-codestart.adoc:225
#, no-wrap
msgid "Snapshot testing"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:228
msgid "Snapshot testing is a way to make sure the content generated by a test doesn't change from one revision to another, i.e. between commits. That means, the generated content for each commit needs to be immutable and deterministic (this is the reason for using mocked data). To be able to perform such checks, we auto-generate snapshots of the generated content and commit them as the references of the expected output for subsequent test runs. When the templates change, we also commit the induced snapshots changes. This way, during the review, we can make sure the applied code changes have the expected effects on the generated output."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:230
msgid "The extension provides helpers to check the content:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:232
msgid "`checkGeneratedSource()` validate a class against the snapshots for all languages (or a specific one)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:233
msgid "`checkGeneratedTestSource()` validate a test class against the snapshots for all languages (or a specific one)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:234
msgid "`assertThatGeneratedFileMatchSnapshot()` check a project file against the snapshot."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:235
msgid "You can use `AbstractPathAssert.satisfies(checkContains(\"some content\"))` or any Path assert on the return of the methods above to also check the file contains a specific content."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:236
msgid "`assertThatGeneratedTreeMatchSnapshots()` lets you compare the project file structure (tree) for a specific language against its snapshot."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:238
msgid "In order to first generate or update existing snapshots, you need to add `-Dsnap` when running the tests. They need to be added as part of the commit, else the tests will not pass on the CI."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/extension-codestart.adoc:239
#, no-wrap
msgid "Writing tips"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:242
msgid "Your extension codestart must/should be independent of buildtool and dockerfiles."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:243
msgid "Extension codestarts should be able to work alongside each other without interference (in combination)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:244
msgid "Make sure your class names are unique across all extension codestarts."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:245
msgid "Only use `org.acme` as package name."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:246
msgid "Use a unique path `/[unique]` for your REST paths"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:247
msgid "Write the config in yml `src/main/resources/application.yml`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:249
msgid "It is going to be merged with the other codestarts config and automatically converted to the selected config type (yaml or properties)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:250
msgid "You can start with java and add kotlin later in another PR (create an issue so you don't forget)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:251
msgid "If you have a question, ping me @ia3andy on https://quarkusio.zulipchat.com/."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:252
#, no-wrap
msgid "The generator sources"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:255
msgid "https://github.com/quarkusio/quarkus/tree/main/independent-projects/tools/codestarts[Codestart generator, window=\"_blank\"]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:256
msgid "https://github.com/quarkusio/quarkus/tree/main/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/codestarts/quarkus[Quarkus implementation of the Codestart generator, window=\"_blank\"]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/extension-codestart.adoc:257
#, no-wrap
msgid "Issues and Feature requests"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/extension-codestart.adoc:260
msgid "https://github.com/quarkusio/quarkus/labels/area%2Fcodestarts"
msgstr ""
