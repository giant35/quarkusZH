# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-07-10 05:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:6
#, no-wrap
msgid "Quarkus - Getting Started to SmallRye Reactive Messaging with Apache Kafka"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:11
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with Apache Kafka."
msgstr "このガイドでは、Quarkus アプリケーションが SmallRye Reactive Messaging を利用して Apache Kafka とやりとりする仕組みを説明します。"

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:12
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:15
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:17
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:18
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:19
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:20
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:21
msgid "GraalVM installed if you want to run in native mode."
msgstr "ネイティブモードで動作させたい場合は、GraalVMがインストールされていること"

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:22
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:27
msgid "In this guide, we are going to develop two applications communicating with Kafka.  The first application sends a _quote request_ to Kafka and consumes Kafka messages from the _quote_ topic.  The second application receives the _quote request_ and sends a _quote_ back."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:28
#, no-wrap
msgid "Architecture,"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:28
#, no-wrap
msgid "kafka-qs-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:33
msgid "The first application, the `producer`, will let the user request some quotes over a HTTP endpoint.  For each quote request a random identifier is generated and returned to the user, to put the quote request on _pending_.  At the same time the generated request id is sent over a Kafka topic `quote-requests`."
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:34
#, no-wrap
msgid "Producer"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:34
#, no-wrap
msgid "kafka-qs-app-screenshot.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:37
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` topic put a random price to the quote, and send it to a Kafka topic named `quotes`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:40
msgid "Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.  The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:41
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:45
msgid "We recommend that you follow the instructions in the next sections and create applications step by step.  However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:47
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:49
msgid "The solution is located in the `kafka-quickstart` {quickstarts-tree-url}/kafka-quickstart[directory]."
msgstr "このソリューションは `kafka-quickstart` {quickstarts-tree-url}/kafka-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:50
#, no-wrap
msgid "Creating the Maven Project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:54
msgid "First, we need to create two projects.  Create the `producer` project with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:63
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=kafka-quickstart-producer \\\n"
"    -DclassName=\"org.acme.kafka.producer.QuotesResource\" \\\n"
"    -Dpath=\"/quotes\" \\\n"
"    -Dextensions=\"resteasy-reactive-jackson,smallrye-reactive-messaging-kafka\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:66
msgid "This command generates a Maven project, importing the RESTEasy Reactive (to implement the HTTP endpoint), Reactive Messaging, and Kafka connector extensions."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:69
msgid "If you already have your Quarkus project configured, you can add the `smallrye-reactive-messaging-kafka` and `resteasy-reactive-jackson` extensions to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:73
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"smallrye-reactive-messaging-kafka,resteasy-reactive-jackson\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:76
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:87
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:90
msgid "Now create the `processor` project:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:98
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=kafka-quickstart-processor \\\n"
"    -DclassName=\"org.acme.kafka.processor.QuoteProcessor\" \\\n"
"    -Dextensions=\"smallrye-reactive-messaging-kafka\"\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:102
#, no-wrap
msgid "Dev Services"
msgstr "Dev Services"

#. type: delimited block =
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:107
msgid "No need to start a Kafka broker when using the dev mode or for tests.  Quarkus starts a broker for you automatically.  See xref:kafka-dev-services.adoc[Dev Services for Kafka] for details."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:109
#, no-wrap
msgid "The Quote object"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:114
msgid "The `Quote` class will be used in both `producer` and `processor` projects.  For the sake of simplicity we will duplicate the class.  In both projects, create the `src/main/java/org/acme/kafka/model/Quote.java` file, with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:118
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:342
#, no-wrap
msgid "package org.acme.kafka.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:120
#, no-wrap
msgid "public class Quote {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:123
#, no-wrap
msgid ""
"    public String id;\n"
"    public int price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:128
#, no-wrap
msgid ""
"    /**\n"
"    * Default constructor required for Jackson serializer\n"
"    */\n"
"    public Quote() { }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:133
#, no-wrap
msgid ""
"    public Quote(String id, int price) {\n"
"        this.id = id;\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:142
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return \"Quote{\" +\n"
"                \"id='\" + id + '\\'' +\n"
"                \", price=\" + price +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:146
msgid "JSON representation of `Quote` objects will be used in messages sent to the Kafka topic and also in the server-sent events sent to browser clients."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:149
msgid "Quarkus has built-in capabilities to deal with JSON Kafka messages.  In a following section we will create serializer/deserializer classes for Jackson."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:150
#, no-wrap
msgid "Sending quote request"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:153
msgid "Inside the `producer` project locate the generated `src/main/java/org/acme/kafka/producer/QuotesResource.java` file, and add the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:157
#, no-wrap
msgid "package org.acme.kafka.producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:159
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:165
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:169
#, no-wrap
msgid ""
"import org.acme.kafka.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:171
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:174
#, no-wrap
msgid ""
"@Path(\"/quotes\")\n"
"public class QuotesResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:176
#, no-wrap
msgid "    @Channel(\"quote-requests\") Emitter<String> quoteRequestEmitter; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:189
#, no-wrap
msgid ""
"    /**\n"
"     * Endpoint to generate a new quote request id and send it to \"quote-requests\" Kafka topic using the emitter.\n"
"     */\n"
"    @POST\n"
"    @Path(\"/request\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String createRequest() {\n"
"        UUID uuid = UUID.randomUUID();\n"
"        quoteRequestEmitter.send(uuid.toString()); // <2>\n"
"        return uuid.toString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:191
msgid "Inject a Reactive Messaging `Emitter` to send messsages to the `quote-requests` channel."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:192
msgid "On a post request, generate a random UUID and send it to the Kafka topic using the emitter."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:194
msgid "This channel is mapped to Kafka using the configuration we will add to the `application.properties` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:199
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:319
#, no-wrap
msgid ""
"# Configure the outgoing Kafka topic quote-requests\n"
"mp.messaging.outgoing.quote-requests.connector=smallrye-kafka\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:204
msgid "All we need to specify is the `smallrye-kafka` connector.  By default reactive messaging will map the channel name `quote-requests` to the Kafka topic name.  The serializer for `String` is automatically configured."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:205
#, no-wrap
msgid "Processing quote requests"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:209
msgid "Now let's consume the quote request and give out a price.  Inside the `processor` project, locate the `src/main/java/org/acme/kafka/processor/QuoteProcessor.java` file and add the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:213
#, no-wrap
msgid "package org.acme.kafka.processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:215
#, no-wrap
msgid "import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:217
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr "import javax.enterprise.context.ApplicationScoped;\n"

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:221
#, no-wrap
msgid ""
"import org.acme.kafka.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:223
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:230
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming data from the \"request\" Kafka topic and giving out a random quote.\n"
" * The result is pushed to the \"quotes\" Kafka topic.\n"
" */\n"
"@ApplicationScoped\n"
"public class QuotesProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:232
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr "    private Random random = new Random();\n"

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:242
#, no-wrap
msgid ""
"    @Incoming(\"requests\")       // <1>\n"
"    @Outgoing(\"quotes\")         // <2>\n"
"    @Blocking                   // <3>\n"
"    public Quote process(String quoteRequest) throws InterruptedException {\n"
"        // simulate some hard working task\n"
"        Thread.sleep(200);\n"
"        return new Quote(quoteRequest, random.nextInt(100));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:245
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:246
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:247
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:249
msgid "The `process` method is called for every Kafka _record_ from the `quote-requests` topic, and will send a `Quote` object to the `quotes` topic."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:251
msgid "As with the previous example we need to configure the connectors in the `application.properties` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:255
#, no-wrap
msgid "%dev.quarkus.http.port=8081\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:260
#, no-wrap
msgid ""
"# Configure the incoming Kafka topic `quote-requests`\n"
"mp.messaging.incoming.requests.connector=smallrye-kafka\n"
"mp.messaging.incoming.requests.topic=quote-requests\n"
"mp.messaging.incoming.requests.auto.offset.reset=earliest\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:264
#, no-wrap
msgid ""
"# Configure the outgoing Kafka topic `quotes`\n"
"mp.messaging.outgoing.quotes.connector=smallrye-kafka\n"
"mp.messaging.outgoing.quotes.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:268
msgid "Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.  The configuration keys are structured as follows:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:270
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:272
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "`channel-name` セグメントは、 `@Incoming` および `@Outgoing` アノテーションで設定された値と一致する必要があります。"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:274
msgid "`quote-requests` -> Kafka topic from which we read the quote requests"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:275
msgid "`quotes` -> Kafka topic in which we write the quotes"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:280
msgid "More details about this configuration is available on the https://kafka.apache.org/documentation/#producerconfigs[Producer configuration] and https://kafka.apache.org/documentation/#consumerconfigs[Consumer configuration] section from the Kafka documentation. These properties are configured with the prefix `kafka`. An exhaustive list of configuration properties is available in xref:kafka.adoc#kafka-configuration[Using Apache Kafka with Reactive Messaging - Configuration]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:283
msgid "Also for the outgoing configuration we specified the serializer because we are sending a `Quote` object as the message payload."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:286
msgid "Quarkus provides default implementations for Kafka serializer/deserializer pairs using Jackson `ObjectMapper`.  `ObjectMapperSerializer` can be used to serialize all objects via Jackson."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:287
#, no-wrap
msgid "Receiving quotes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:291
msgid "Back to our `producer` project.  Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:296
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"[...]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:298
#, no-wrap
msgid "@Channel(\"quotes\") Multi<Quote> quotes;     // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:307
#, no-wrap
msgid ""
"/**\n"
" * Endpoint retrieving the \"quotes\" Kafka topic and sending the items to a server sent event.\n"
" */\n"
"@GET\n"
"@Produces(MediaType.SERVER_SENT_EVENTS) // <2>\n"
"public Multi<Quote> stream() {\n"
"    return quotes; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:309
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:310
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "`Server Sent Events` を使用してコンテンツが送信されたことを示します。"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:311
msgid "Returns the stream (_Reactive Stream_)"
msgstr "ストリーム (_Reactive Stream_) を返します。"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:314
msgid "Again we need to configure the incoming `quotes` channel inside `producer` project.  Add the following inside `application.properties` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:322
#, no-wrap
msgid ""
"# Configure the incoming Kafka topic quotes\n"
"mp.messaging.incoming.quotes.connector=smallrye-kafka\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:329
msgid "In this guide we explore Smallrye Reactive Messaging framework to interact with Apache Kafka.  Quarkus extension for Kafka also allows xref:kafka.adoc#kafka-bare-clients[using Kafka clients directly]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:331
#, no-wrap
msgid "JSON serialization via Jackson"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:336
msgid "Finally, we will configure JSON serialization for messages using Jackson.  Previously we've seen the usage of `ObjectMapperSerializer` to serialize objects via Jackson.  For the corresponding deserializer class, we need to create a subclass of `ObjectMapperDeserializer`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:338
msgid "So, let's create it inside `producer` project on `src/main/java/org/acme/kafka/model/QuoteDeserializer.java`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:344
#, no-wrap
msgid "import io.quarkus.kafka.client.serialization.ObjectMapperDeserializer;\n"
msgstr "import io.quarkus.kafka.client.serialization.ObjectMapperDeserializer;\n"

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:351
#, no-wrap
msgid ""
"public class QuoteDeserializer extends ObjectMapperDeserializer<Quote> {\n"
"    public QuoteDeserializer() {\n"
"        // pass the class to the parent.\n"
"        super(Quote.class);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:355
msgid "No need to add any configuration for this inside `application.properties` file.  Quarkus will automatically detect this serializer."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:358
#, no-wrap
msgid "Message serialization in Kafka"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:362
msgid "In this example we used Jackson to serialize/deserialize Kafka messages.  For more options on message serialization see xref:kafka.adoc#kafka-serialization[Using Apache Kafka with Reactive Messaging - Serialization]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:366
msgid "We strongly suggest adopting a contract-first approach using a schema registry.  To learn more about how to use Apache Kafka with the schema registry and Avro follow the xref:kafka-schema-registry-avro.adoc[Using Apache Kafka with Schema Registry and Avro] guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:368
#, no-wrap
msgid "The HTML page"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:371
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最後に、SSE を使って変換された価格を読み込む HTML ページです。"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:373
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:377
#, no-wrap
msgid "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quotes</title>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:413
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
"    <div class=\"card\">\n"
"        <div class=\"card-body\">\n"
"            <h2 class=\"card-title\">Quotes</h2>\n"
"            <button class=\"btn btn-info\" id=\"request-quote\">Request Quote</button>\n"
"            <div class=\"quotes\"></div>\n"
"        </div>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n"
"<script>\n"
"    $(\"#request-quote\").click((event) => {\n"
"        fetch(\"/quotes/request\", {method: \"POST\"})\n"
"        .then(res => res.text())\n"
"        .then(qid => {\n"
"            var row = $(`<h4 class='col-md-12' id='${qid}'>Quote # <i>${qid}</i> | <strong>Pending</strong></h4>`);\n"
"            $(\".quotes\").append(row);\n"
"        });\n"
"    });\n"
"    var source = new EventSource(\"/quotes\");\n"
"    source.onmessage = (event) => {\n"
"      var json = JSON.parse(event.data);\n"
"      $(`#${json.id}`).html(function(index, html) {\n"
"        return html.replace(\"Pending\", `\\$\\xA0${json.price}`);\n"
"      });\n"
"    };\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:417
msgid "Nothing spectacular here.  On each received quote, it updates the page."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:418
#, no-wrap
msgid "Get it running"
msgstr "稼動させる"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:421
msgid "You just need to run both applications using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:425
#, no-wrap
msgid "./mvnw -f producer quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:428
msgid "And in a separate terminal:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:432
#, no-wrap
msgid "./mvnw -f processor quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:436
msgid "Quarkus starts a Kafka broker automatically, configures the application and shares the Kafka broker instance between different applications.  See xref:kafka-dev-services.adoc[Dev Services for Kafka] for more details."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:438
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:439
#, no-wrap
msgid "Running in JVM or Native mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:443
msgid "When not running in dev or test mode, you will need to start your Kafka broker.  You can follow the instructions from the https://kafka.apache.org/quickstart[Apache Kafka web site] or create a `docker-compose.yaml` file with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:447
#, no-wrap
msgid "version: '2'\n"
msgstr "version: '2'\n"

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:449
#, no-wrap
msgid "services:\n"
msgstr "services:\n"

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:462
#, no-wrap
msgid ""
"  zookeeper:\n"
"    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0\n"
"    command: [\n"
"      \"sh\", \"-c\",\n"
"      \"bin/zookeeper-server-start.sh config/zookeeper.properties\"\n"
"    ]\n"
"    ports:\n"
"      - \"2181:2181\"\n"
"    environment:\n"
"      LOG_DIR: /tmp/logs\n"
"    networks:\n"
"      - kafkaquickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:480
#, no-wrap
msgid ""
"  kafka:\n"
"    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0\n"
"    command: [\n"
"      \"sh\", \"-c\",\n"
"      \"bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}\"\n"
"    ]\n"
"    depends_on:\n"
"      - zookeeper\n"
"    ports:\n"
"      - \"9092:9092\"\n"
"    environment:\n"
"      LOG_DIR: \"/tmp/logs\"\n"
"      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n"
"      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092\n"
"      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n"
"    networks:\n"
"      - kafkaquickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:492
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/kafka-quickstart-producer:1.0\n"
"    build:\n"
"      context: producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      KAFKA_BOOTSTRAP_SERVERS: kafka:9092\n"
"    ports:\n"
"      - \"8080:8080\"\n"
"    networks:\n"
"      - kafkaquickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:502
#, no-wrap
msgid ""
"  processor:\n"
"    image: quarkus-quickstarts/kafka-quickstart-processor:1.0\n"
"    build:\n"
"      context: processor\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      KAFKA_BOOTSTRAP_SERVERS: kafka:9092\n"
"    networks:\n"
"      - kafkaquickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:506
#, no-wrap
msgid ""
"networks:\n"
"  kafkaquickstart-network:\n"
"    name: kafkaquickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:509
msgid "Make sure you first build both applications in JVM mode with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:513
#, no-wrap
msgid "./mvnw package\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:516
msgid "Once packaged, run `docker-compose up`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:518
msgid "This is a development cluster, do not use in production."
msgstr "これは開発クラスターであり、本番では使用しないでください。"

#. type: Title ==
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:519
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:523
msgid "This guide has shown how you can interact with Kafka using Quarkus.  It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/kafka-reactive-getting-started.adoc:524
msgid "For the exhaustive list of features and configuration options check the xref:kafka.adoc[Reference guide for Apache Kafka Extension]."
msgstr ""
