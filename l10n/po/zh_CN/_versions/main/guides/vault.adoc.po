# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-22 01:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/vault.adoc:6
#, no-wrap
msgid "Using HashiCorp Vault"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:22
msgid "https://www.vaultproject.io/[HashiCorp Vault] is a multi-purpose tool aiming at protecting sensitive data, such as credentials, certificates, access tokens, encryption keys, ... In the context of Quarkus, several use cases are supported:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:25
msgid "mounting a map of properties stored into the https://www.vaultproject.io/docs/secrets/kv/index.html[Vault kv secret engine] as an Eclipse MicroProfile config source"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:26
msgid "fetching credentials from Vault when configuring an Agroal datasource, as documented in the {vault-datasource-guide}"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:27
msgid "accessing Vault _kv secret engine_ programmatically"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:28
msgid "support for the https://www.vaultproject.io/docs/secrets/totp[TOTP Secret Engine]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:30
msgid "support for the https://www.vaultproject.io/docs/secrets/transit[Transit Secret Engine] as documented in the {vault-transit-guide}"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:32
msgid "support for the https://www.vaultproject.io/docs/secrets/pki[PKI Secret Engine] as documented in the {vault-pki-guide}"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:33
msgid "support for several authentication methods as documented in the {vault-auth-guide}"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:36
msgid "Under the hood, the Quarkus Vault extension takes care of authentication when negotiating a client Vault token plus any transparent token or lease renewals according to _ttl_ and _max-ttl._"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:39
#, no-wrap
msgid "Prerequisites"
msgstr "准备"

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:42
msgid "To complete this guide, you need:"
msgstr "要完成本指南，您需要："

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:44
msgid "roughly 20 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:45
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:46
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:47
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:48
msgid "Docker installed"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:49
#, no-wrap
msgid "Starting Vault"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/vault.adoc:54
msgid "Using <<dev-services,Dev Services>>, Quarkus will take care of starting Vault in dev and test mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:57
msgid "Let's start Vault in development mode:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:61
#, no-wrap
msgid "docker run --rm --cap-add=IPC_LOCK -e VAULT_ADDR=http://localhost:8200 -p 8200:8200 -d --name=dev-vault vault:{vault-version}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:64
msgid "You can check that vault is running with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:67
#, no-wrap
msgid "docker logs dev-vault\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:70
#: upstream/_versions/main/guides/vault.adoc:206
#: upstream/_versions/main/guides/vault.adoc:234
#: upstream/_versions/main/guides/vault.adoc:333
#: upstream/_versions/main/guides/vault.adoc:383
msgid "You should see:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:74
#, no-wrap
msgid "==> Vault server configuration:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:83
#, no-wrap
msgid ""
"             Api Address: http://0.0.0.0:8200\n"
"                     Cgo: disabled\n"
"         Cluster Address: https://0.0.0.0:8201\n"
"              Listener 1: tcp (addr: \"0.0.0.0:8200\", cluster address: \"0.0.0.0:8201\", max_request_duration: \"1m30s\", max_request_size: \"33554432\", tls: \"disabled\")\n"
"               Log Level: info\n"
"                   Mlock: supported: true, enabled: false\n"
"                 Storage: inmem\n"
"                 Version: Vault v{vault-version}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:87
#, no-wrap
msgid ""
"WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory\n"
"and starts unsealed with a single unseal key. The root token is already\n"
"authenticated to the CLI, so you can immediately begin using Vault.\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:89
#, no-wrap
msgid "You may need to set the following environment variable:\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:91
#, no-wrap
msgid "    $ export VAULT_ADDR='http://0.0.0.0:8200'\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:94
#, no-wrap
msgid ""
"The unseal key and root token are displayed below in case you want to\n"
"seal/unseal the Vault or re-authenticate.\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:97
#, no-wrap
msgid ""
"Unseal Key: 0lZ2/vzpa92pH8gersSn2h9b5tmzd4m5sqIdMC/4PDs=\n"
"Root Token: {root-token}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:99
#, no-wrap
msgid "Development mode should NOT be used in production installations!\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:101
#, no-wrap
msgid "==> Vault server started! Log data will stream in below:\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:104
msgid "In development mode, Vault gets configured with several options that makes it convenient:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:107
msgid "Vault is already initialized with one key share (whereas in normal mode this has to be done explicitly and the number of key shares is 5 by default)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:109
msgid "the unseal key and the root token are displayed in the logs (please write down the root token, we will need it in the following step)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:110
msgid "Vault is unsealed"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:111
msgid "in-memory storage"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:112
msgid "TLS is disabled"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:113
msgid "a _kv secret engine v2_ is mounted at `secret/`"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/vault.adoc:119
msgid "By default Quarkus assumes that a _kv secret engine_ in version *2* mounted at path `secret/` will be used.  If that is not the case, please use properties `quarkus.vault.kv-secret-engine-version` and `quarkus.vault.kv-secret-engine-mount-path` accordingly."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:123
msgid "In the following step, we are going to add a `userpass` authentication that we will use from the Quarkus application, to access a secret stored in the _kv secret engine_."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:125
msgid "First open a shell inside the vault container:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:129
#, no-wrap
msgid "docker exec -it dev-vault sh\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:132
msgid "Set the `VAULT_TOKEN` with the value that was printed in the logs:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:136
#, no-wrap
msgid "export VAULT_TOKEN={root-token}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:139
msgid "You can check Vault's status using the CLI command `vault status`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:153
#, no-wrap
msgid ""
"Key             Value\n"
"---             -----\n"
"Seal Type       shamir\n"
"Initialized     true\n"
"Sealed          false\n"
"Total Shares    1\n"
"Threshold       1\n"
"Version         1.6.0\n"
"Cluster Name    vault-cluster-b07e80d8\n"
"Cluster ID      55bd74b6-eaaf-3862-f7ce-3473ab86c57f\n"
"HA Enabled      false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:156
msgid "Now let's add a secret configuration for our application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:160
#, no-wrap
msgid "vault kv put secret/myapps/vault-quickstart/config a-private-key=123456\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:163
msgid "We have defined a path `secret/myapps/vault-quickstart` in Vault that we need to give access to from the Quarkus application."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:165
msgid "Create a policy that gives read access to `secret/myapps/vault-quickstart` and subpaths:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:173
#, no-wrap
msgid ""
"cat <<EOF | vault policy write vault-quickstart-policy -\n"
"path \"secret/data/myapps/vault-quickstart/*\" {\n"
"  capabilities = [\"read\"]\n"
"}\n"
"EOF\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/vault.adoc:183
msgid "When using a _kv secret engine version 2_, secrets are written and fetched at path `<mount>/*data*/<secret-path>` as opposed to `<mount>/<secret-path>` in a _kv secret engine version 1_.  It does not change any of the CLI commands (i.e. you do not specify `data` in your path).  However it does change the policies, since capabilities are applied to the real path. In the example above, the path is `secret/*data*/myapps/vault-quickstart/\\*` since we are working with a _kv secret engine version 2_.  It would be `secret/myapps/vault-quickstart/*` with a _kv secret engine version 1_."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:186
msgid "And finally, let's enable the _userpass auth secret engine_, and create user `bob` with access to the `vault-quickstart-policy`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:191
#, no-wrap
msgid ""
"vault auth enable userpass\n"
"vault write auth/userpass/users/bob password=sinclair policies=vault-quickstart-policy\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/vault.adoc:196
msgid "Quarkus supports additional Vault Authentication methods. Check the {vault-auth-guide} for details."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:199
msgid "To check that the configuration is correct, try logging in:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:203
#, no-wrap
msgid "vault login -method=userpass username=bob password=sinclair\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:212
#, no-wrap
msgid ""
"Success! You are now authenticated. The token information displayed below\n"
"is already stored in the token helper. You do NOT need to run \"vault login\"\n"
"again. Future Vault requests will automatically use this token.\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:223
#, no-wrap
msgid ""
"Key                    Value\n"
"---                    -----\n"
"token                  {client-token}\n"
"token_accessor         OKNipTAgxWbxsrjixASNiwdY\n"
"token_duration         768h\n"
"token_renewable        true\n"
"token_policies         [\"default\" \"vault-quickstart-policy\"]\n"
"identity_policies      []\n"
"policies               [\"default\" \"vault-quickstart-policy\"]\n"
"token_meta_username    bob\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:226
msgid "Now set `VAULT_TOKEN` to the `token` above (instead of the root token), and try reading the vault-quickstart secret config:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:231
#, no-wrap
msgid ""
"export VAULT_TOKEN={client-token}\n"
"vault kv get secret/myapps/vault-quickstart/config\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:241
#, no-wrap
msgid ""
"======== Data ========\n"
"Key              Value\n"
"---              -----\n"
"a-private-key    123456\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:243
#, no-wrap
msgid "Create a Quarkus application with a secret configuration"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:254
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=vault-quickstart \\\n"
"    -DclassName=\"org.acme.quickstart.GreetingResource\" \\\n"
"    -Dpath=\"/hello\" \\\n"
"    -Dextensions=\"resteasy,vault\"\n"
"cd vault-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:258
msgid "If you already have your Quarkus project configured, you can add the `vault` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:262
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"vault\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:265
msgid "This will add the following to your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:272
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vault</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:275
msgid "Configure access to Vault from the `{config-file}`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:280
#, no-wrap
msgid ""
"# vault url\n"
"quarkus.vault.url=http://localhost:8200\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:284
#, no-wrap
msgid ""
"# vault authentication\n"
"quarkus.vault.authentication.userpass.username=bob\n"
"quarkus.vault.authentication.userpass.password=sinclair\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:287
#, no-wrap
msgid ""
"# path within the kv secret engine where is located the vault-quickstart secret configuration\n"
"quarkus.vault.secret-config-kv-path=myapps/vault-quickstart/config\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/vault.adoc:292
msgid "Using <<dev-services,Dev Services>>, Quarkus will take care of configuring the Vault connection in dev and test mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:295
msgid "This should mount whatever keys are stored in `secret/myapps/vault-quickstart` as Config properties."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:297
msgid "Let's verify that by adding a new endpoint in GreetingResource:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:302
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:305
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"a-private-key\")\n"
"    String privateKey;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:307
#, no-wrap
msgid "    ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:315
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/private-key\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String privateKey() {\n"
"        return privateKey;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:318
msgid "Now compile the application and run it:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:323
#, no-wrap
msgid ""
"./mvnw clean install\n"
"java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:326
msgid "Finally test the new endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:330
#, no-wrap
msgid "curl http://localhost:8080/hello/private-key\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:337
#, no-wrap
msgid "123456\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/vault.adoc:344
msgid "The _Vault Config Source_ is configured with ordinal `270`, which is higher than the file system or jar ordinals, but lower than environment variables.  This value can be changed using property `quarkus.vault.config-ordinal`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:346
#, no-wrap
msgid "Programmatic access to the KV secret engine"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:351
msgid "Sometimes secrets are retrieved from an arbitrary path that is known only at runtime through an application specific property, or a method argument for instance.  In that case it is possible to inject a Quarkus `VaultKVSecretEngine`, and retrieve secrets programmatically."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:353
msgid "For instance, in `GreetingResource`, add:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:358
#, no-wrap
msgid ""
"@Inject\n"
"VaultKVSecretEngine kvSecretEngine;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:360
#: upstream/_versions/main/guides/vault.adoc:488
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:367
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/secrets/{vault-path}\")\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public String getSecrets(@PathParam(\"vault-path\") String vaultPath) {\n"
"    return kvSecretEngine.readSecret(\"myapps/vault-quickstart/\" + vaultPath).toString();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:370
msgid "Add a new key in Vault:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:373
#, no-wrap
msgid "vault kv put secret/myapps/vault-quickstart/private mysecret=abc\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:376
msgid "Restart the application after rebuilding it, and test it with the new endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:380
#, no-wrap
msgid "curl http://localhost:8080/hello/secrets/private\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:386
#, no-wrap
msgid "{mysecret=abc}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:389
#, no-wrap
msgid "TOTP Secrets Engine"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:392
msgid "The https://www.vaultproject.io/docs/secrets/totp/[Vault TOTP secrets engine] generates time-based credentials according to the TOTP standard."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:394
msgid "Vault TOTP supports both the generator scenario (like Google Authenticator) and the provider scenario (like the Google.com sign in)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:396
msgid "The Vault extension integrates with the Vault TOTP secret engine by providing an `io.quarkus.vault.VaultTOTPSecretEngine` class."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:403
#, no-wrap
msgid ""
"import io.quarkus.vault.VaultTOTPSecretEngine;\n"
"import io.quarkus.vault.secrets.totp.CreateKeyParameters;\n"
"import io.quarkus.vault.secrets.totp.KeyConfiguration;\n"
"import io.quarkus.vault.secrets.totp.KeyDefinition;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:406
#, no-wrap
msgid ""
"@Inject\n"
"VaultTOTPSecretEngine vaultTOTPSecretEngine;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:409
#, no-wrap
msgid ""
"CreateKeyParameters createKeyParameters = new CreateKeyParameters(\"Google\", \"test@gmail.com\");\n"
"createKeyParameters.setPeriod(\"30m\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:411
#, no-wrap
msgid "/** Google Authentication logic */\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:414
#, no-wrap
msgid ""
"final Optional<KeyDefinition> myKey = vaultTOTPSecretEngine\n"
"                                            .createKey(\"my_key_2\", createKeyParameters); // <1> <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:416
#, no-wrap
msgid "final String keyCode = vaultTOTPSecretEngine.generateCode(\"my_key_2\"); // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:418
#, no-wrap
msgid "/** Google Login logic */\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:420
#, no-wrap
msgid "boolean valid = vaultTOTPSecretEngine.validateCode(\"my_key_2\", keyCode); // <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:422
msgid "Create a key to generate codes."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:423
msgid "`KeyDefinition` class contains an embeddable base64 QR code that can be used by third-party code generators."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:424
msgid "Generates a code (not using third-party generator)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:425
msgid "Validates that the code is valid."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:426
#, no-wrap
msgid "Vault Health Check"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:430
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-vault` can add a readiness health check to validate the connection to the Vault server. This is disabled by default."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:432
msgid "If enabled, when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:434
msgid "This behavior can be enabled by setting the `quarkus.vault.health.enabled` property to `true` in your `application.properties`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:436
msgid "Only if Vault is initialized, unsealed and active, the health endpoint returns that Vault is ready to serve requests."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:438
msgid "You can change a bit this behaviour by using `quarkus.vault.health.stand-by-ok` and `quarkus.vault.health.performance-stand-by-ok` to `true` in your `application.properties`."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/vault.adoc:439
#, no-wrap
msgid "stand-by-ok"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:440
msgid "Specifies if being a standby should still return the active status code instead of the standby status code."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/vault.adoc:441
#, no-wrap
msgid "performance-stand-by-ok"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:442
msgid "Specifies if being a performance standby should still return the active status code instead of the performance standby status code."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:444
msgid "You can inject `io.quarkus.vault.VaultSystemBackendEngine` to run system operations programmatically."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:446
msgid "When the readiness probe is failing in Kubernetes, then the application is not reachable. This means that if Vault is failing, all services depending on Vault will become unreachable and maybe this is not the desired state, so use this flag according to your requirements."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:447
#, no-wrap
msgid "TLS"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:450
msgid "In production mode, TLS should be activated between the Quarkus application and Vault to prevent _man-in-the-middle_ attacks."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:452
msgid "There are several ways to configure the Quarkus application:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:455
msgid "through the standard `javax.net.ssl.trustStore` system property, which should refer to a JKS truststore containing the trusted certificates"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:456
msgid "using property `quarkus.vault.tls.ca-cert`, which should refer to a pem encoded file."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:461
msgid "If `quarkus.vault.tls.ca-cert` is not set and the Quarkus application is using the Kubernetes authentication, TLS will be active and use the CA certificate bundle located in `/var/run/secrets/kubernetes.io/serviceaccount/ca.crt`.  If you want to disable this behavior (for instance when using a trust store), you need to set it explicitly using: `quarkus.vault.tls.use-kubernetes-ca-cert=false`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:465
msgid "The last relevant property is `quarkus.vault.tls.skip-verify`, which allows to communicate with Vault using TLS, but without checking the certificate authenticity. This may be convenient in development, but is strongly discouraged in production as it is not more secure than talking to Vault in plain HTTP."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:466
#, no-wrap
msgid "Vault Provisioning"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:470
msgid "Beside the typical client use cases, the Quarkus extension can be used to provision Vault as well, for instance as part of a CD pipeline. Specific CDI beans and operations support this scenario:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:472
msgid "`VaultSystemBackendEngine`: create Vault Policies. See the https://www.vaultproject.io/api-docs/system/policy[Vault documentation]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:473
msgid "`VaultKubernetesAuthService`. See the https://www.vaultproject.io/api-docs/auth/kubernetes[Vault documentation]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:474
msgid "Configure the Kubernetes Auth Method (Kubernetes host, certificates, keys, ...)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:475
msgid "Create Kubernetes Auth Roles (association between Kubernetes service accounts, Kubernetes namespaces and Vault policies)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:476
msgid "`VaultTransitSecretEngine`: _CRUD_ operations on keys. See the https://www.vaultproject.io/api-docs/secret/transit[Vault documentation]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:478
msgid "For instance:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:483
#, no-wrap
msgid ""
"@Inject\n"
"VaultSystemBackendEngine vaultSystemBackendEngine;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:486
#, no-wrap
msgid ""
"@Inject\n"
"VaultKubernetesAuthService vaultKubernetesAuthService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:494
#, no-wrap
msgid ""
"  String rules = \"path \\\"transit/*\\\" {\\n\" +\n"
"          \"  capabilities = [ \\\"create\\\", \\\"read\\\", \\\"update\\\" ]\\n\" +\n"
"          \"}\";\n"
"  String policyName = \"sys-test-policy\";\n"
"  vaultSystemBackendEngine.createUpdatePolicy(policyName, rules);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:499
#, no-wrap
msgid ""
"  String roleName = \"test-auth-k8s\";\n"
"  List<String> boundServiceAccountNames = asList(\"vault-auth\");\n"
"  List<String> boundServiceAccountNamespaces = asList(\"default\");\n"
"  List<String> tokenPolicies = asList(policyName);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:504
#, no-wrap
msgid ""
"  vaultKubernetesAuthService.createRole(roleName, new VaultKubernetesAuthRole()\n"
"          .setBoundServiceAccountNames(boundServiceAccountNames)\n"
"          .setBoundServiceAccountNamespaces(boundServiceAccountNamespaces)\n"
"          .setTokenPolicies(tokenPolicies));\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:508
msgid "Like any client, a provisioning program would have to authenticate using one of the supported Auth methods, and get the appropriate grants through one or more policies. Example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:515
#, no-wrap
msgid ""
"# create Policies\n"
"path \"sys/policy/*\" {\n"
"  capabilities = [\"read\", \"create\", \"update\", \"delete\"]\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:520
#, no-wrap
msgid ""
"# create Kubernetes Auth Roles\n"
"path \"auth/kubernetes/role/*\" {\n"
"  capabilities = [\"read\", \"create\", \"update\", \"delete\"]\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:523
msgid "You should adjust to the minimal set of access rights depending on your specific use case."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:525
#, no-wrap
msgid "Dev Services (Configuration Free Vault)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:531
msgid "Quarkus supports a feature called Dev Services that allows you to create various containers without any config.  What that means in practice is that if you have Docker running and have not configured `quarkus.vault.url`, Quarkus will automatically start a Vault container when running tests or in dev mode, and automatically configure the connection."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:535
msgid "When running the production version of the application, the Vault connection needs to be configured as normal, so if you want to include a production Vault config in your `application.properties` and continue to use Dev Services we recommend that you use the `%prod.` profile to define your Vault connection settings."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/vault.adoc:536
#, no-wrap
msgid "Automatic Secret Engine Provisioning"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:539
msgid "To help with provisioning the automatically managed Vault instance, you can enable certain secret engines."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/vault.adoc:544
msgid "As mentioned above Vault containers started in dev mode automatically mount the _kv secret engine v2_ at `secret/`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:547
msgid "Enable the **Transit Secret Engine** at `transit/` using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:551
#, no-wrap
msgid "quarkus.vault.devservices.transit-enabled=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:554
msgid "Enable the **PKI Secret Engine** at `pki/` using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/vault.adoc:558
#, no-wrap
msgid "quarkus.vault.devservices.pki-enabled=true\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:560
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:564
msgid "As a general matter, you should consider reading the extensive https://www.vaultproject.io/docs/[Vault documentation] and apply best practices."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:568
msgid "The features exposed today through the Vault extension covers only a small fraction of what the product is capable of.  Still, it addresses already some of the most common microservices scenarii (e.g. sensitive configuration and database credentials), which goes a long way towards creating secured applications."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:570
#, no-wrap
msgid "Configuration Reference"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/vault.adoc:574
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:577
msgid "https://www.vaultproject.io/[HashiCorp Vault]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/vault.adoc:577
msgid "link:security[Quarkus Security]"
msgstr ""
