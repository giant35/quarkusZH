# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-07-10 05:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/command-mode-reference.adoc:6
#, no-wrap
msgid "Quarkus - Command Mode Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:11
msgid "This reference covers how to write applications that run and then exit."
msgstr "このリファレンスでは、実行して終了するアプリケーションの書き方について説明しています。"

#. type: Title ==
#: upstream/_versions/main/guides/command-mode-reference.adoc:12
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:16
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:18
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:20
msgid "The solution is located in the `getting-started-command-mode` {quickstarts-tree-url}/getting-started-command-mode[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/command-mode-reference.adoc:21
#, no-wrap
msgid "Writing Command Mode Applications"
msgstr "コマンドモードアプリケーションの作成"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:25
msgid "There are two different approaches that can be used to implement applications that exit."
msgstr "終了するアプリケーションを実装するためには、2つの異なるアプローチがあります。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:27
msgid "Implement `QuarkusApplication` and have Quarkus run this method automatically"
msgstr "`QuarkusApplication` を実装し、Quarkusがこのメソッドを自動的に実行するようにします。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:28
msgid "Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus"
msgstr "`QuarkusApplication` とJava mainメソッドを実装し、Java mainメソッドを使用してQuarkusを起動します。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:31
msgid "In this document the `QuarkusApplication` instance is referred to as the application main, and a class with a Java main method is the Java main."
msgstr "このドキュメントでは、 `QuarkusApplication` インスタンスをアプリケーション mainと呼び、Java mainメソッドを持つクラスを Java mainと呼びます。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:33
msgid "The simplest possible command mode application with access to Quarkus API's might appear as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/command-mode-reference.adoc:38
#, no-wrap
msgid ""
"import io.quarkus.runtime.QuarkusApplication;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/command-mode-reference.adoc:47
#, no-wrap
msgid ""
"@QuarkusMain    // <.>\n"
"public class HelloWorldMain implements QuarkusApplication {\n"
"  @Override\n"
"  public int run(String... args) throws Exception {   // <.>\n"
"    System.out.println(\"Hello World\");\n"
"    return 10;\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:50
msgid "<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.  <.> The `run` method is invoked once Quarkus starts, and the application stops when it finishes."
msgstr "<.> `@QuarkusMain` アノテーションは、これがメインのエントリーポイントであることをQuarkusに伝えます。  <.> `run` メソッドは、Quarkusが起動すると呼び出され、終了するとアプリケーションが停止します。"

#. type: Title ===
#: upstream/_versions/main/guides/command-mode-reference.adoc:51
#, no-wrap
msgid "Contexts"
msgstr "コンテキスト"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:55
msgid "To get access to your application beans and services, be aware that a `@QuarkusMain` instance is an application scoped bean by default. It has access to singletons, application and dependent scoped beans. If you want to interact with beans that requires a request scope put a `@ActivateRequestContext` on your `run()` method."
msgstr "アプリケーションBeanやサービスにアクセスするために、 `@QuarkusMain` インスタンスはデフォルトでapplicationスコープのBeanであることに注意してください。singleton、application、dependentスコープのBeanへのアクセスを持っています。requestスコープを必要とするBeanと対話したい場合は、 `run()` メソッドに `@ActivateRequestContext` を記述してください。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:57
msgid "This let `run()` have access to methods like `listAll()` and `query*` methods on a Panache Entity. Without it you will eventually get a `ContextNotActiveException` when accessing such classes/beans."
msgstr "これにより、 `run()` は Panache Entity 上の `listAll()` や `query*` のようなメソッドにアクセスできるようになります。これがないと、そのようなクラスやBeanにアクセスするときに、最終的には `ContextNotActiveException` に直面することになります。"

#. type: Title ===
#: upstream/_versions/main/guides/command-mode-reference.adoc:58
#, no-wrap
msgid "Main method"
msgstr "Main method"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:60
msgid "If we want to use a Java main to run the application main it would look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/command-mode-reference.adoc:65
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/command-mode-reference.adoc:68
#, no-wrap
msgid ""
"@QuarkusMain\n"
"public class JavaMain {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/command-mode-reference.adoc:73
#, no-wrap
msgid ""
"    public static void main(String... args) {\n"
"        Quarkus.run(HelloWorldMain.class, args);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:77
msgid "This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can be run from the IDE."
msgstr "これは `HelloWorldMain` アプリケーション mainを直接実行するのと実質的には同じですが、IDE から実行できるという利点があります。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:79
msgid "If a class that implements `QuarkusApplication` and has a Java main then the Java main will be run."
msgstr "`QuarkusApplication` を実装したクラスで Java main がある場合は Java main が実行されます。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:84
msgid "It is recommended that a Java main perform very little logic, and just launch the application main. In development mode the Java main will run in a different ClassLoader to the main application, so may not behave as you would expect."
msgstr "Java mainはほとんどロジックを実行せず、アプリケーション mainを起動するだけにすることをお勧めします。開発モードでは、Java mainはアプリケーション mainとは異なるClassLoaderで実行されるので、期待通りの動作をしないかもしれません。"

#. type: Title ====
#: upstream/_versions/main/guides/command-mode-reference.adoc:85
#, no-wrap
msgid "Multiple Main Methods"
msgstr "複数のmainメソッド"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:91
msgid "It is possible to have multiple main methods in an application, and select between them at build time.  The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the main to run using the `quarkus.package.main-class` build time configuration option. If you don't want to use annotations this can also be used to specify the fully qualified name of a main class."
msgstr "アプリケーション内に複数のmainメソッドを持ち、ビルド時にそれらの間で選択することが可能です。 `@QuarkusMain` アノテーションはオプションの 'name' パラメーターを取り、 `quarkus.package.main-class` ビルド時設定オプションを使用して実行するmainを選択するために使用できます。アノテーションを使用したくない場合は、メインクラスの完全修飾名を指定するために使用することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:95
msgid "By default the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class that just runs the application."
msgstr "デフォルトでは、名前のない `@QuarkusMain` (つまり空文字列)が使用され、それが存在せず `quarkus.package.main-class` が指定されていない場合は、Quarkus はアプリケーションを実行するだけのメインクラスを自動的に生成します。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:99
msgid "The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not unique."
msgstr "`@QuarkusMain` の `name` は一意である必要があります(デフォルトの空文字列を含む)。アプリケーション内に複数の `@QuarkusMain` アノテーションがある場合、名前が一意でないとビルドに失敗します。"

#. type: Title ===
#: upstream/_versions/main/guides/command-mode-reference.adoc:100
#, no-wrap
msgid "The command mode lifecycle"
msgstr "コマンドモードのライフサイクル"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:103
msgid "When running a command mode application the basic lifecycle is as follows:"
msgstr "コマンドモードのアプリケーションを実行する場合、基本的なライフサイクルは以下の通りです。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:105
msgid "Start Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:106
msgid "Run the `QuarkusApplication` main method"
msgstr "`QuarkusApplication` mainメソッドの実行"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:107
msgid "Shut down Quarkus and exit the JVM after the main method returns"
msgstr "mainメソッドがreturnされた後にQuarkusをシャットダウンし、JVMを終了する"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:111
msgid "Shutdown is always initiated by the application main thread returning. If you want to run some logic on startup, and then run like a normal application (i.e. not exit) then you should call `Quarkus.waitForExit` from the main thread (A non-command mode application is essentially just running an application that just calls `waitForExit`)."
msgstr "シャットダウンは常にアプリケーションのメインスレッドがreturnされることで開始されます。起動時に何らかのロジックを実行して、通常のアプリケーションのように実行したい場合 (つまり終了しない) は、メインスレッドから `Quarkus.waitForExit` を呼び出す必要があります (非コマンドモードのアプリケーションは、基本的に `waitForExit` を呼び出すだけのアプリケーションを実行しているだけです)。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:114
msgid "If you want to shut down a running application and you are not in the main thread then you should call `Quarkus.asyncExit` in order to unblock the main thread and initiate the shutdown process."
msgstr "実行中のアプリケーションをシャットダウンしたい場合、メインスレッドにいない場合は、 `Quarkus.asyncExit` を呼び出してメインスレッドのブロックを解除し、シャットダウン処理を開始する必要があります。"

#. type: Title ===
#: upstream/_versions/main/guides/command-mode-reference.adoc:115
#, no-wrap
msgid "Dev mode"
msgstr "開発モード"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:118
msgid "Also for command mode applications the dev mode is supported. When running `mvn compile quarkus:dev`, the command mode application is executed and on press of the Enter key, is restarted."
msgstr "また、コマンドモードアプリケーションでは、開発モードにも対応しています。 `mvn compile quarkus:dev` を実行しているときは、コマンドモードアプリケーションを実行し、Enter キーを押すと再起動します。"

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:120
msgid "As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via:"
msgstr "コマンドモードのアプリケーションでは、コマンドラインで引数を渡す必要があることが多く、これは開発モードでも可能です:"

#. type: delimited block -
#: upstream/_versions/main/guides/command-mode-reference.adoc:123
#, no-wrap
msgid "mvn compile quarkus:dev -Dquarkus.args='--help'\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/command-mode-reference.adoc:126
msgid "The same can be achieved with Gradle:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/command-mode-reference.adoc:129
#, no-wrap
msgid "./gradlew quarkusDev --quarkus-args='--help'\n"
msgstr ""
