# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-07-10 05:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/qute-reference.adoc:6
#, no-wrap
msgid "Quarkus - Qute Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:24
msgid "Qute is a templating engine designed specifically to meet the Quarkus needs.  The usage of reflection is minimized to reduce the size of native images.  The API combines both the imperative and the non-blocking reactive style of coding.  In the development mode, all files located in the `src/main/resources/templates` folder are watched for changes and modifications are immediately visible in your application.  Furthermore, Qute attempts to detect most of the template problems at build time and fail fast.  In this guide, you will find an <<hello_world_example,introductory example>>, the description of the <<core_features,core features>> and <<quarkus_integration,Quarkus integration>> details."
msgstr "Quteは、Quarkusのニーズを満たすために特別に設計されたテンプレートエンジンです。ネイティブイメージのサイズを小さくするために、リフレクションの使用は最小限に抑えられています。APIは、命令型と非ブロッキング反応型のコーディングの両方のスタイルを組み合わせています。開発モードでは、 `src/main/resources/templates` フォルダーにあるすべてのファイルが変更されているかどうかが監視され、変更があった場合はすぐにアプリケーションに反映されます。さらに、Quteはビルド時にテンプレートの問題のほとんどを検出しようとし、早期に失敗します。このガイドでは、 link:#hello_world_example[導入例] 、 link:#core_features[コア機能] の説明、 link:#quarkus_integration[Quarkusの統合] の詳細について説明しています。"

#. type: Title ==
#: upstream/_versions/1.11/guides/qute-reference.adoc:26
#, no-wrap
msgid "Hello World Example"
msgstr "ハローワールドの例"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:31
msgid "In this example, we'd like to demonstrate the basic workflow when working with Qute templates.  Let's start with a simple hello world example.  We will always need some *template contents*:"
msgstr "この例では、Quteのテンプレートを扱う際の基本的なワークフローをデモしたいと思います。まず、簡単なhello worldの例から始めましょう。 *テンプレートのコンテンツ* は必ず必要になります。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:32
#, no-wrap
msgid "hello.html"
msgstr "hello.html"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:38
#, no-wrap
msgid ""
"<html>\n"
"  <p>Hello {name}! <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:40
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr "`{name}` は、テンプレートがレンダリングされたときに評価される値の式です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:43
msgid "Then, we will need to parse the contents into a *template definition* Java object.  A template definition is an instance of `io.quarkus.qute.Template`."
msgstr "そして、その内容を *テンプレート定義* Javaオブジェクトにパースする必要があります。テンプレート定義は、 `io.quarkus.qute.Template` のインスタンスです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:47
msgid "If using Qute \"standalone\" you'll need to create an instance of `io.quarkus.qute.Engine` first.  The `Engine` represents a central point for template management with dedicated configuration.  Let's use the convenient builder:"
msgstr "Quteを\"スタンドアロン\"で使用する場合は、まず `io.quarkus.qute.Engine` のインスタンスを作成する必要があります。 `Engine` は、専用の設定でテンプレートを管理するための中心点を表しています。便利なビルダーを使ってみましょう。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:51
#, no-wrap
msgid "Engine engine = Engine.builder().addDefaults().build();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:54
msgid "In Quarkus, there is a preconfigured `Engine` available for injection - see <<quarkus_integration>>."
msgstr "Quarkusでは、あらかじめ設定された `Engine` がインジェクション用に利用可能です - link:#quarkus_integration[quarkus_integration] を参照してください。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:56
msgid "Once we have an `Engine` instance we could parse the template contents:"
msgstr "`Engine` のインスタンスがあれば、テンプレートの内容を解析することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:60
#, no-wrap
msgid "Template helloTemplate = engine.parse(helloHtmlContent);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:63
msgid "In Quarkus, you can simply inject the template definition. The template is automatically parsed and cached - see <<quarkus_integration>>."
msgstr "Quarkusでは、テンプレートの定義を単純に注入することができます。テンプレートは自動的に解析され、キャッシュされます - link:#quarkus_integration[quarkus_integration] を参照してください。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:65
msgid "Finally, we will create a *template instance*, set the data and render the output:"
msgstr "最後に *テンプレートインスタンス* を作成し、データをセットして出力をレンダリングします。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:70
#, no-wrap
msgid ""
"// Renders <html><p>Hello Jim!</p></html>\n"
"helloTemplate.data(\"name\", \"Jim\").render(); <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:72
msgid "`Template.data(String, Object)` is a convenient method that creates a template instance and sets the data in one step."
msgstr "`Template.data(String, Object)` は、ワンステップでテンプレートのインスタンスを作成してデータを設定する便利なメソッドです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:73
msgid "`TemplateInstance.render()` triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished. However, there are also asynchronous ways to trigger the rendering and consume the results. For example there is the `TemplateInstance.renderAsync()` method that returns `CompletionStage<String>` or `TemplateInstance.createMulti()` that returns Mutiny's `Multi<String>`."
msgstr "`TemplateInstance.render()` は同期レンダリングをトリガーします。つまり、レンダリングが終了するまで現在のスレッドはブロックされます。しかし、レンダリングをトリガーして結果を消費する非同期のメソッドもあります。 例えば、 `CompletionStage<String>` を返す `TemplateInstance.renderAsync()` メソッドや、Mutiny の `Multi<String>` を返す `TemplateInstance.createMulti()` です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:75
msgid "So the workflow is simple:"
msgstr "なので、ワークフローはシンプルです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:77
msgid "Create template contents (`hello.html`),"
msgstr "テンプレートコンテンツを作成する ( `hello.html` )、"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:78
msgid "Parse template definition (`io.quarkus.qute.Template`),"
msgstr "テンプレートの定義を解析する ( `io.quarkus.qute.Template` )、"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:79
msgid "Create template instance (`io.quarkus.qute.TemplateInstance`),"
msgstr "テンプレートインスタンスを作成する ( `io.quarkus.qute.TemplateInstance` )、"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:80
msgid "Render output."
msgstr "出力をレンダリングする"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:82
msgid "The `Engine` is able to cache the definitions so that it's not necessary to parse the contents again and again. In Quarkus, the caching is done automatically."
msgstr "`Engine` は定義をキャッシュすることができるので、何度も内容をパースする必要がありません。Quarkusでは、キャッシュは自動的に行われます。"

#. type: Title ==
#: upstream/_versions/1.11/guides/qute-reference.adoc:84
#, no-wrap
msgid "Core Features"
msgstr "コア機能"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:86
#, no-wrap
msgid "Basic Building Blocks"
msgstr "基本的なビルディングブロック"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:89
msgid "The dynamic parts of a template include comments, expressions, sections and unparsed character data."
msgstr "テンプレートの動的な部分には、コメント、式、セクション、パースされていない文字データなどがあります。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:90
#, no-wrap
msgid "Comments "
msgstr "コメント"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:94
msgid "A comment starts with `{!` and ends with `!}`, e.g. `{! This is a comment !}`.  It could be multi-line and may contain expressions and sections: `{! {#if true} !}`.  Of course, the content of a comment is completely ignored."
msgstr "コメントは `{!` で始まり `!}` で終わります。例： `{! This is a comment !}` 。コメントは複数行で、式やセクションを含むことができます: `{! {#if true} !}` 。もちろん、コメントの内容は完全に無視されます。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:96
#: upstream/_versions/1.11/guides/qute-reference.adoc:214
#, no-wrap
msgid "Expressions"
msgstr "式"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:101
msgid "An <<expressions,expression>> outputs an evaluated value.  It consists of one or more parts.  A part may represent simple properties: `{foo}`, `{item.name}` or virtual methods: `{item.get(name)}`, `{name ?: 'John'}`.  An expression may start with a namespace: `{inject:colors}`."
msgstr "link:#expressions[式] は評価された値を出力します。式は 1 つ以上のパーツから構成されています。パーツは単純なプロパティー: `{foo}` , `{item.name}` や、仮想メソッドを表すことがあります: `{item.get(name)}` , `{name ?: 'John'}` 。式は、名前空間で始まることがあります: `{inject:colors}` 。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:103
#: upstream/_versions/1.11/guides/qute-reference.adoc:451
#, no-wrap
msgid "Sections"
msgstr "セクション"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:108
msgid "A <<sections,section>> may contain text, expressions and nested sections: `{#if foo}{foo.name}{/if}`.  The name in the closing tag is optional: `{#if active}ACTIVE!{/}`.  It can be empty: `{#myTag image=true /}`.  A section may declare nested section blocks: `{#if item.valid} Valid. {#else} Invalid. {/if}` and decide which block to render."
msgstr "1 つの link:#sections[セ ク シ ョン] はテキス ト ・ 式 ・ 入れ子に し たセ ク シ ョ ン を含む こ と がで き ます : `{#if foo}{foo.name}{/if}` 。クロージングタグの名前はオプションです: `{#if active}ACTIVE!{/}` 。空にすることもできます: `{#myTag image=true /}` 。セクションは、入れ子になったセクションブロックを宣言することができます: `{#if item.valid} Valid. {#else} Invalid. {/if}` そして、どのブロックをレンダリングするかを決定します。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:109
#, no-wrap
msgid "Unparsed Character Data"
msgstr "パース対象外文字データ"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:112
msgid "It is used to mark the content that should be rendered but not parsed.  It starts with `{|` and ends with `|}`: `{| <script>if(true){alert('Qute is cute!')};</script> |}`, and could be multi-line."
msgstr "これは、レンダリングされるべきだがパースされないコンテンツをマークするために使用されます。 `{|` で始まり `|}` で終わります : `{| <script>if(true){alert('Qute is cute!')};</script> |}` 、複数行も可能です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:114
msgid "Previously, unparsed character data had to start with `{[` and end with `]}`. This syntax is still supported but we encourage users to switch to the new syntax to avoid some common collisions with constructs from other languages."
msgstr "以前は、パース対象外文字データは `{[` で始まり `]}` で終わる必要がありました。この構文はまだサポートされていますが、他の言語の構文とのよくある衝突を避けるために、新しい構文に切り替えることをお勧めします。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:116
#, no-wrap
msgid "Identifiers and Tags"
msgstr "識別子とタグ"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:121
msgid "Identifiers are used in expressions and section tags.  A valid identifier is a sequence of non-whitespace characters.  However, users are encouraged to only use valid Java identifiers in expressions."
msgstr "識別子は、式やセクションタグで使用されます。有効な識別子は、空白文字以外の文字列です。ただし、式の中では有効な Java 識別子のみを使用することが推奨されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:123
msgid "You can use bracket notation if you need to specify an identifier that contains a dot, e.g. `{map['my.key']}`."
msgstr "ドットを含む識別子を指定する必要がある場合は、大括弧表記を使用することができます。例：`{map['my.key']}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:127
msgid "When parsing a template document the parser identifies all _tags_.  A tag starts and ends with a curly bracket, e.g. `{foo}`.  The content of a tag must start with:"
msgstr "テンプレート文書を解析する際、パーサはすべての _タグ_ を識別します。タグは中括弧で始まり、中括弧で終わります。例: `{foo}` タグの内容は次から始まる必要があります:"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:129
msgid "a digit, or"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:130
msgid "an alphabet character, or"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:131
msgid "underscore, or"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:132
msgid "a built-in command: `#`, `!`, `@`, `/`."
msgstr "組み込みコマンド: `#` , `!` , `@` , `/` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:134
msgid "If it does not start with any of the above it is ignored by the parser."
msgstr "上記のいずれかで始まらない場合は、パーサによって無視されます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:135
#, no-wrap
msgid "Tag Examples"
msgstr "タグの例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:147
#, no-wrap
msgid ""
"<html>\n"
"   <body>\n"
"   {_foo.bar}   <1>\n"
"   {! comment !}<2>\n"
"   {  foo}      <3>\n"
"   {{foo}}      <4>\n"
"   {\"foo\":true} <5>\n"
"   </body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:149
msgid "Parsed: an expression that starts with underscore."
msgstr "パース対象: アンダースコアで始まる式"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:150
msgid "Parsed: a comment"
msgstr "パース対象: コメント"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:151
msgid "Ignored: starts with whitespace."
msgstr "無視対象: 空白で開始"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:152
msgid "Ignored: starts with `{`."
msgstr "無視対象: `{` で開始"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:153
msgid "Ignored: starts with `\"`."
msgstr "無視対象: `\"` で開始"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:155
msgid "It is also possible to use escape sequences `\\{` and `\\}` to insert delimiters in the text. In fact, an escape sequence is usually only needed for the start delimiter, ie. `\\\\{foo}` will be rendered as `{foo}` (no parsing/evaluation will happen)."
msgstr "エスケープシーケンス `\\{` や `\\}` を使ってテキストにデリミタを挿入することも可能です。 実際には、エスケープシーケンスは通常、開始デリミタのためにのみ必要とされます。すなわち、 `\\\\{foo}` は `{foo}` として描画されます（パース、評価は行われません）。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:156
#, no-wrap
msgid "Removing Standalone Lines From the Template"
msgstr "テンプレートから独立した行を削除する"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:162
msgid "By default, the parser removes standalone lines from the template output.  A *standalone line* is a line that contains at least one section tag (e.g. `{#each}` and `{/each}`), parameter declaration (e.g. `{@org.acme.Foo foo}`) or comment but no expression and no non-whitespace character.  In other words, a line that contains no section tag or a parameter declaration is *not* a standalone line.  Likewise, a line that contains an _expression_ or a _non-whitespace character_ is *not* a standalone line."
msgstr "デフォルトでは、パーサはテンプレート出力からスタンドアロン行を削除します。スタンドアロン *行* とは、少なくとも1つのセクションタグ(例: `{#each}` や `{/each}` )、パラメーター宣言(例: `{@org.acme.Foo foo}` )、コメントを含むが、式を含まず、空白以外の文字を含まない行のことです。言い換えれば、セクションタグやパラメーター宣言を含まない行は、独立した行ではあり *ません* 。同様に、 _式_ や _空白以外の文字_ を含む行もスタンドアロン行ではあり *ません* 。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:163
#, no-wrap
msgid "Template Example"
msgstr "テンプレート例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:176
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
"     {#for item in items} <1>\n"
"       <li>{item.name} {#if item.active}{item.price}{/if}</li>  <2>\n"
"                          <3>\n"
"     {/for}               <4>\n"
"     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:178
msgid "This is a standalone line and will be removed."
msgstr "これはスタンドアロン行なので削除されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:179
msgid "Not a standalone line - contains an expression and non-whitespace characters"
msgstr "スタンドアロン行ではない - 式と非空白文字を含む"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:180
msgid "Not a standalone line - contains no section tag/parameter declaration"
msgstr "スタンドアロン行ではない - セクションタグ/パラメーター宣言を含まない"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:181
msgid "This is a standalone line."
msgstr "これはスタンドアロン行です。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:182
#, no-wrap
msgid "Default Output"
msgstr "デフォルト出力"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:189
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
"       <li>Foo 100</li>  \n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:193
#: upstream/_versions/1.11/guides/qute-reference.adoc:211
#, no-wrap
msgid ""
"     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:197
msgid "In Quarkus, the default behavior can be disabled by setting the property `quarkus.qute.remove-standalone-lines` to `false`.  In this case, all whitespace characters from a standalone line will be printed to the output."
msgstr "Quarkusでは、プロパティー( `quarkus.qute.remove-standalone-lines` )を `false` に設定することで、デフォルトの動作を無効にすることができます。この場合、スタンドアロン行のすべての空白文字が出力されます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:198
#, no-wrap
msgid "Output with `quarkus.qute.remove-standalone-lines=false`"
msgstr "`quarkus.qute.remove-standalone-lines=false` での出力"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:204
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:206
#, no-wrap
msgid "       <li>Foo 100</li>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:221
msgid "An expression outputs a value.  It consists of one or more parts separated by dot (dot notation) or square brackets (bracket notation).  In the `object.property` (dot notation) syntax, the `property` must be a <<identifiers,valid identifier>>.  In the `object[property_name]` (bracket notation) syntax, the `property_name` has to be a non-null <<literals, literal>> value.  An expression could start with an optional namespace followed by a colon (`:`)."
msgstr "式は値を出力します。これは、ドット(ドット表記)または角括弧(カッコ表記)で区切られた1つ以上のパーツから構成されています。 `object.property` (ドット表記) 構文では、 `property` は link:#identifiers[有効な識別子] である必要があります。 `object[property_name]` (括弧表記) 構文では、 `property_name` は非 null link:#literals[リテラル] 値である必要があります。式は、コロン ( `:` )が後ろについた名前空間で始まることができます（オプション）。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:222
#, no-wrap
msgid "Expressions Example"
msgstr "式の例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:229
#, no-wrap
msgid ""
"{name} <1>\n"
"{item.name} <2>\n"
"{item['name']} <3>\n"
"{global:colors} <4> \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:231
msgid "no namespace, one part: `name`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:232
msgid "no namespace, two parts: `item`, `name`"
msgstr "名前空間なし、2つのパーツ: `item` . `name`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:233
msgid "equivalent to `{item.name}` but using the bracket notation"
msgstr "`{item.name}` と同等ですが、括弧表記を使用しています。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:234
msgid "namespace `global`, one part: `colors`"
msgstr "namespace `global` , 1つのパーツ: `colors`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:238
msgid "A part of an expression could be a _virtual method_ in which case the name can be followed by a list of comma-separated parameters in parentheses.  A parameter of a virtual method can be either a nested expression or a <<literals, literal>> value.  We call it \"virtual\" because it does not have to be backed by a real Java method."
msgstr "式のパーツは _仮想メソッド_ である可能性があり、その場合は名前の後に括弧内のコンマで区切られたパラメーターのリストを付けることができます。仮想メソッドのパラメーターは、入れ子になった式か link:#literals[リテラル] 値のどちらかになります。これを「仮想」と呼ぶのは、実際のJavaメソッドに裏打ちされている必要がないからです。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:239
#, no-wrap
msgid "Virtual Methods Example"
msgstr "仮想メソッドの例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:244
#, no-wrap
msgid ""
"{item.getLabels(1)} <1>\n"
"{name or 'John'} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:246
msgid "no namespace, two parts - `item`, `getLabels(1)`, the second part is a virtual method with name `getLabels` and params `1`"
msgstr "名前空間なし、2つのパーツ - `item` , `getLabels(1)` 、2番目のパーツは、名前 `getLabels` と パラメーター `1` を持つ仮想メソッドです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:247
msgid "infix notation that can be used for virtual methods with single parameter, translated to `name.or('John')`; no namespace, two parts - `name`, `or('John')`"
msgstr "`name.or('John')` に翻訳される、単一のパラメーターを持つ仮想メソッドに使用できる 中置 (infix) 記法。名前空間なし、2 つのパーツ - `name` . `or('John')`"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:249
#, no-wrap
msgid "Supported Literals"
msgstr "サポートされているリテラル"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:252
#, no-wrap
msgid "Literal"
msgstr "リテラル"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:254
#: upstream/_versions/1.11/guides/qute-reference.adoc:352
#, no-wrap
msgid "Examples"
msgstr "例"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:255
#, no-wrap
msgid "boolean"
msgstr "boolean"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:257
#, no-wrap
msgid "`true`, `false`"
msgstr "`true`, `false`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:258
#, no-wrap
msgid "null"
msgstr "null"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:260
#, no-wrap
msgid "`null`"
msgstr "`null`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:261
#, no-wrap
msgid "string"
msgstr "string"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:263
#, no-wrap
msgid "`'value'`, `\"string\"`"
msgstr "`'value'`, `\"string\"`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:264
#, no-wrap
msgid "integer"
msgstr "integer"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:266
#, no-wrap
msgid "`1`, `-5`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:267
#, no-wrap
msgid "long"
msgstr "long"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:269
#, no-wrap
msgid "`1l`, `-5L`"
msgstr "`1l`, `-5L`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:270
#, no-wrap
msgid "double"
msgstr "double"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:272
#, no-wrap
msgid "`1D`, `-5d`"
msgstr "`1D`, `-5d`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:273
#, no-wrap
msgid "float"
msgstr "float"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:275
#, no-wrap
msgid "`1f`, `-5F`"
msgstr "`1f`, `-5F`"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:277
#, no-wrap
msgid "Resolution"
msgstr "解決"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:284
msgid "The first part of the expression is always resolved against the <<current_context_object, current context object>>.  If no result is found for the first part it's resolved against the parent context object (if available).  For an expression that starts with a namespace the current context object is found using all the available ``NamespaceResolver``s.  For an expression that does not start with a namespace the current context object is *derived from the position* of the tag.  All other parts of an expression are resolved using all ``ValueResolver``s against the result of the previous resolution."
msgstr "式の最初のパーツは、常に link:#current_context_object[カレントコンテキストオブジェクト] に対して解決されます。最初のパーツの結果が見つからない場合は、(利用可能な場合) 親コンテキストオブジェクトに対して解決されます。名前空間で始まる式の場合、カレントコンテキストオブジェクトは、利用可能なすべての `NamespaceResolver` を使用して検出されます。名前空間で始まらない式の場合、現在のコンテキストオブジェクトはタグの *位置から派生し* ます。式の他のすべてのパーツは、前の解決結果に対してすべての `ValueResolver` を使用して解決されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:290
msgid "For example, expression `{name}` has no namespace and single part - `name`.  The \"name\" will be resolved using all available value resolvers against the current context object.  However, the expression `{global:colors}` has the namespace `global` and single part - `colors`.  First, all available ``NamespaceResolver``s will be used to find the current context object.  And afterwards value resolvers will be used to resolve \"colors\" against the context object found."
msgstr "例えば、式 `{name}` には名前空間がなく、単一のパーツ - `name` です。\"name\"は、カレントコンテキストオブジェクトに対して利用可能なすべての値リゾルバを使用して解決されます。しかし、式 `{global:colors}` には、名前空間 `global` と単一パーツ - `colors` があります。まず、現在のコンテキストオブジェクトを見つけるために、利用可能なすべての `NamespaceResolver` s が使用されます。その後、見つかったコンテキストオブジェクトに対して\"colors\"を解決するために値リゾルバが使用されます。"

#. type: delimited block =
#: upstream/_versions/1.11/guides/qute-reference.adoc:295
msgid "Data passed to the template instance are always accessible using the `data` namespace.  This could be useful to access data for which the key is overridden:"
msgstr "テンプレート・インスタンスに渡されたデータは、常に `data` 名前空間を使用してアクセスできます。これは、キーがオーバーライドされているデータにアクセスするのに便利かもしれません。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:310
#, no-wrap
msgid ""
"<html>\n"
"{item.name} <1>\n"
"<ul>\n"
"{#for item in item.getDerivedItems()} <2>\n"
"  <li>\n"
"  {item.name} <3> \n"
"  is derived from\n"
"  {data:item.name} <4>\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:312
msgid "`item` is passed to the template instance as a data object."
msgstr "`item` はデータオブジェクトとしてテンプレートインスタンスに渡されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:313
msgid "Iterate over the list of derived items."
msgstr "派生アイテムのリストを繰り返し処理します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:314
msgid "`item` is an alias for the iterated element."
msgstr "`item` は反復要素のエイリアスです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:315
msgid "Use the `data` namespace to access the `item` data object."
msgstr "`data` 名前空間を使用して、 `item` データ・オブジェクトにアクセスします。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:319
#, no-wrap
msgid "Current Context"
msgstr "カレントコンテキスト"

#. type: delimited block =
#: upstream/_versions/1.11/guides/qute-reference.adoc:325
msgid "If an expression does not specify a namespace the _current context object_ is derived from the position of the tag.  By default, the current context object represents the data passed to the template instance.  However, sections may change the current context object.  A typical example is the `with` section that could be used to set the current context object in order to simplify the template structure:"
msgstr "式で名前空間が指定されていない場合、_カレントコンテキストオブジェクト_ はタグの位置から派生します。デフォルトでは、カレントコンテキストオブジェクトはテンプレート・インスタンスに渡されたデータを表します。しかし、セクションは現在のコンテキストオブジェクトを変更することができます。典型的な例は `with` セクションで、テンプレート構造を単純化するためにカレントコンテキストオブジェクトを設定するために使用することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:332
#, no-wrap
msgid ""
"{#with item}\n"
"  <h1>{name}</h1>  <1>\n"
"  <p>{description}</p>\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:334
msgid "`name` is resolved against the `item`."
msgstr "`name` は `item` に対して解決されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:336
msgid "Another built-in section that modifies the current context object is `let`/`set`:"
msgstr "現在のコンテキストオブジェクトを変更する別の組み込みセクションは、 `let` / `set` です。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:342
#, no-wrap
msgid ""
"{#let myParent=order.item.parent myPrice=order.price} <1>\n"
"  <h1>{myParent.name}</h1>\n"
"  <p>Price: {myPrice}</p>\n"
"{/let}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:344
msgid "The current context object inside the section is the map of resolved parameters."
msgstr "セクション内の現在のコンテキストオブジェクトは、解決されたパラメーターのマップです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:346
msgid "The current context can be accessed via the implicit binding `this`."
msgstr "カレントコンテキストは、暗黙のバインディング `this` を通してアクセスできます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:347
#, no-wrap
msgid "Built-in Operators"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:350
#: upstream/_versions/1.11/guides/qute-reference.adoc:546
#: upstream/_versions/1.11/guides/qute-reference.adoc:688
#, no-wrap
msgid "Operator"
msgstr "オペレーター"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:350
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:353
#, no-wrap
msgid "Elvis"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:354
#, no-wrap
msgid "Outputs the default value if the previous part cannot be resolved or resolves to `null`."
msgstr "前のパーツが解決できなかったり、 `null` に解決された場合のデフォルト値を出力します。"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:356
#, no-wrap
msgid "`{person.name ?: 'John'}`, `{person.name or 'John'}`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:357
#, no-wrap
msgid "Ternary"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:358
#, no-wrap
msgid "Shorthand for if-then-else statement. Unlike in <<if_section>> nested operators are not supported."
msgstr "if-then-else文の省略形。 <<if_section>> とは異なり、入れ子になった演算子はサポートされていません。"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:360
#, no-wrap
msgid "`{item.isActive ? item.name : 'Inactive item'}` outputs the value of `item.name` if `item.isActive` resolves to `true`."
msgstr "`{item.isActive ? item.name : 'Inactive item'}` は、 `item.isActive` が `true` に解決した場合に `item.name` の値を出力します。"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:361
#, no-wrap
msgid "Logical AND"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:362
#, no-wrap
msgid "Outputs `true` if both parts are not `falsy` as described in the <<if_section>>. The parameter is only evaluated if needed."
msgstr "<<if_section>> で説明したように、両方のパーツが `falsy` でない場合に `true` を出力します。このパラメーターは必要な場合にのみ評価されます。"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:364
#, no-wrap
msgid "`{person.isActive && person.hasStyle}`"
msgstr "`{person.isActive && person.hasStyle}`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:365
#, no-wrap
msgid "Logical OR"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:366
#, no-wrap
msgid "Outputs `true` if any of the parts is not `falsy` as described in the <<if_section>>. The parameter is only evaluated if needed."
msgstr "<<if_section>> で説明したように、いずれかのパーツが `falsy` でない場合に `true` を出力します。このパラメーターは必要な場合のみ評価されます。"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:366
#, no-wrap
msgid "`{person.isActive \\"
msgstr "`{person.isActive \\"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:366
#: upstream/_versions/1.11/guides/qute-reference.adoc:581
#, no-wrap
msgid "\\"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:367
#, no-wrap
msgid "person.hasStyle}`"
msgstr "person.hasStyle}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:370
msgid "The condition in a ternary operator evaluates to `true` if the value is not considered `falsy` as described in the <<if_section>>."
msgstr "三項演算子の条件は、 <<if_section>> で説明したように、値が `falsy` とみなされない場合は `true` と評価されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:372
msgid "In fact, the operators are implemented as \"virtual methods\" that consume one parameter and can be used with infix notation, i.e. `{person.name or 'John'}` is translated to `{person.name.or('John')}`."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:373
#, no-wrap
msgid "Character Escapes"
msgstr "文字エスケープ"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:376
msgid "For HTML and XML templates the `'`, `\"`, `<`, `>`, `&` characters are escaped by default if a template variant is set."
msgstr "HTML と XML テンプレートの場合、 `'` , `\"` , `<` , `>` , `&` の文字は、テンプレートバリアントが設定されている場合はデフォルトでエスケープされます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:378
msgid "In Quarkus, a variant is set automatically for templates located in the `src/main/resources/templates`. By default, the `java.net.URLConnection#getFileNameMap()` is used to determine the content type of a template file. The additional map of suffixes to content types can be set via `quarkus.qute.content-types`."
msgstr "Quarkusでは、 `src/main/resources/templates` にあるテンプレートに対してバリアントが自動的に設定されます。デフォルトでは、テンプレートファイルのコンテンツタイプを決定するために `java.net.URLConnection#getFileNameMap()` が使用されます。コンテンツタイプへのサフィックスの追加マップは、 `quarkus.qute.content-types` を通じて設定できます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:380
msgid "If you need to render the unescaped value:"
msgstr "エスケープされていない値をレンダリングする必要がある場合:"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:382
msgid "Use the `raw` or `safe` properties implemented as extension methods of the `java.lang.Object`,"
msgstr "`java.lang.Object` の拡張メソッドとして実装されている `raw` または `safe` プロパティーを使用します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:383
msgid "Wrap the `String` value in a `io.quarkus.qute.RawString`."
msgstr "`String` の値を `io.quarkus.qute.RawString` でラップします。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:390
#, no-wrap
msgid ""
"<html>\n"
"<h1>{title}</h1> <1>\n"
"{paragraph.raw} <2>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:392
msgid "`title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`"
msgstr "`title` が `Expressions & Escapes` に解決した場合は、 `Expressions &amp; Escapes` としてレンダリングされます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:393
msgid "`paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`"
msgstr "`paragraph` が `<p>My text!</p>` に解決された場合は、 `<p>My text!</p>` としてレンダリングされます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:394
#, no-wrap
msgid "Virtual Methods"
msgstr "仮想メソッド"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:400
msgid "A virtual method is a *part of an expression* that looks like a regular Java method invocation.  It's called \"virtual\" because it does not have to match the actual method of a Java class.  In fact, like normal properties a virtual method is also handled by a value resolver.  The only difference is that for virtual methods a value resolver consumes parameters that are also expressions."
msgstr "仮想メソッドとは、通常のJavaメソッド呼び出しのように見える *式のパーツ* です。Javaクラスの実際のメソッドと一致する必要がないため、「仮想」と呼ばれています。実際には、通常のプロパティーと同様に、仮想メソッドも値リゾルバによって処理されます。唯一の違いは、仮想メソッドの場合、値リゾルバが式でもあるパラメーターを消費することです。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:401
#, no-wrap
msgid "Virtual Method Example"
msgstr "仮想メソッドの例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:407
#, no-wrap
msgid ""
"<html>\n"
"<h1>{item.buildName(item.name,5)}</h1> <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:409
#, no-wrap
msgid "`buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` . The virtual method could be evaluated by a value resolver generated for the following Java class:   \n"
msgstr "`buildName(item.name,5)` は、名前 `buildName` と 2 つのパラメーター `item.name` と `5` を持つ仮想メソッドを表します。この仮想メソッドは、以下の Java クラスに対して生成された値リゾルバによって評価されます。\n"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:417
#, no-wrap
msgid ""
"class Item {\n"
"   String buildName(String name, int age) {\n"
"      return name + \":\" + age;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:420
msgid "Virtual methods are usually evaluated by value resolvers generated for <<template_extension_methods,@TemplateExtension methods>>, <<template_data,@TemplateData>> or classes used in <<typesafe_expressions,parameter declarations>>. However, a custom value resolver that is not backed by any Java class/method can be registered as well."
msgstr "仮想メソッドは通常、 <<template_extension_methods,@TemplateExtension methods>> 、 <<template_data,@TemplateData>> 、または <<typesafe_expressions,parameter declarations>> で使用されるクラスのために生成された値リゾルバによって評価されます。しかし、Javaのクラス/メソッドに基づかないカスタムの値リゾルバも登録できます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:422
msgid "A virtual method with single parameter can be called using the infix notation:"
msgstr "単一のパラメーターを持つ仮想メソッドは 中置記法を使用して呼び出すことができます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:423
#, no-wrap
msgid "Infix Notation Example"
msgstr "中置表記例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:429
#, no-wrap
msgid ""
"<html>\n"
"<p>{item.price or 5}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:431
msgid "`item.price or 5` is translated to `item.price.or(5)`."
msgstr "`item.price or 5` は `item.price.or(5)` に翻訳されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:433
msgid "Virtual method parameters can be \"nested\" virtual method invocations."
msgstr "仮想メソッドのパラメーターは、「入れ子」仮想メソッドの呼び出しにすることができます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:434
#, no-wrap
msgid "Nested Virtual Method Example"
msgstr "入れ子になった仮想メソッドの例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:440
#, no-wrap
msgid ""
"<html>\n"
"<p>{item.subtractPrice(item.calculateDiscount(10))}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:442
msgid "`item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`."
msgstr "`item.calculateDiscount(10)` が最初に評価され、その後 `item.subtractPrice()` への引数として渡されます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:443
#, no-wrap
msgid "Evaluation of `CompletionStage` and `Uni` Objects"
msgstr "`CompletionStage` と `Uni` オブジェクトの評価"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:449
msgid "Objects that implement `java.util.concurrent.CompletionStage` and `io.smallrye.mutiny.Uni` are evaluated in a special way.  If a part of an expression resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.  For example, if there is an expression `{foo.size}` and `foo` resolves to `CompletionStage<List<String>>` then `size` is resolved against the completed result, i.e. `List<String>`.  If a part of an expression resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above."
msgstr "`java.util.concurrent.CompletionStage` および `io.smallrye.mutiny.Uni` を実装したオブジェクトは、特別な方法で評価されます。式の一部が `CompletionStage` に解決された場合、このステージが完了すると解決が継続され、式の次の部分(もしあれば)が完了したステージの結果に対して評価されます。たとえば、式 `{foo.size}` があり、 `foo` が `CompletionStage<List<String>>` に解決された場合、 `size` は完了した結果、すなわち `List<String>` に対して解決されます。式の一部が `Uni` に解決される場合、 `CompletionStage` が `Uni#subscribeAsCompletionStage()` を使用して `Uni` から最初に作成され、その後上記のように評価されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:454
msgid "A section:"
msgstr "セクションは:"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:456
msgid "has a start tag"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:457
msgid "starts with `#`, followed by the name of the section such as `{#if}` and `{#each}`,"
msgstr "`#` で始まり、 `{#if}` や `{#each}` などのセクションの名前が続きます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:458
msgid "may be empty"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:459
msgid "tag ends with `/`, ie. `{#emptySection /}`"
msgstr "タグは `/` で終わります。例: `{#emptySection /}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:460
msgid "may contain other expression, sections, etc."
msgstr "他の表現、セクションなどを含む場合があります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:461
msgid "the end tag starts with `/` and contains the name of the section (optional): `{#if foo}Foo!{/if}` or `{#if foo}Foo!{/}`,"
msgstr "終了タグは `/` で始まり、セクションの名前(オプション)を含みます: `{#if foo}Foo!{/if}` または `{#if foo}Foo!{/}` ."

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:468
msgid "The start tag can also define parameters.  The parameters have optional names.  A section may contain several content *blocks*.  The \"main\" block is always present.  Additional/nested blocks also start with `#` and can have parameters too - `{#else if item.isActive}`.  A section helper that defines the logic of a section can \"execute\" any of the blocks and evaluate the parameters."
msgstr "startタグはパラメーターを定義することもできます。パラメーターにはオプションの名前を付けます。1つのセクションには、いくつかのコンテンツ *ブロック* を含めることができます。\"main\" ブロックは常に存在します。追加/入れ子になったブロックも `#` で始まり、パラメーターを持つことができます - `{#else if item.isActive}` 。セクションのロジックを定義するセクションヘルパーは、任意のブロックを「実行」し、パラメーターを評価することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:478
#, no-wrap
msgid ""
"{#if item.name is 'sword'}\n"
"  It's a sword!\n"
"{#else if item.name is 'shield'}\n"
"  It's a shield!\n"
"{#else}\n"
"  Item is neither a sword nor a shield.\n"
"{/if}\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:480
#, no-wrap
msgid "Loop Section"
msgstr "ループセクション"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:485
msgid "The loop section makes it possible to iterate over an instance of `Iterable`, `Map` 's entry set, `Stream` and an Integer.  It has two flavors.  The first one is using the `each` name alias."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:491
#, no-wrap
msgid ""
"{#each items}\n"
"  {it.name} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:493
msgid "`it` is an implicit alias. `name` is resolved against the current iteration element."
msgstr "`it` は暗黙のエイリアスです。 `name` は現在の反復要素に対して解決されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:495
msgid "The other form is using the `for` name alias and can specify the alias used to reference the iteration element:"
msgstr "もう一つの形式は、 `for` 名前エイリアスを使用しており、反復要素を参照するために使用されるエイリアスを指定することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:501
#, no-wrap
msgid ""
"{#for item in items}\n"
"  {item.name}\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:504
msgid "It's also possible to access the iteration metadata inside the loop:"
msgstr "ループ内の反復メタデータにアクセスすることも可能です。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:510
#, no-wrap
msgid ""
"{#each items}\n"
"  {count}. {it.name} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:512
msgid "`count` represents one-based index. Metadata also include zero-based `index`, `hasNext`, `odd`, `even`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:514
msgid "The `for` statement also works with integers, starting from 1. In the example below, considering that `total = 3`:"
msgstr "`for` 文は、1 から始まる整数でも動作します。 以下の例では、 `total = 3` ."

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:520
#, no-wrap
msgid ""
"{#for i in total}\n"
"  {i}:\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:523
msgid "The output will be:"
msgstr "出力は"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:527
#, no-wrap
msgid "1:2:3:\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:530
#, no-wrap
msgid "If Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:535
msgid "The `if` section represents a basic control flow section.  The simplest possible version accepts a single parameter and renders the content if the condition is evaluated to `true`.  A condition without an operator evaluates to `true` if the value is not considered `falsy`, i.e. if the value is not `null`, `false`, an empty collection, an empty map, an empty array, an empty string/char sequence or a number equal to zero."
msgstr "`if` セクションは、基本的な制御フローセクションを表しています。最も単純なバージョンでは、単一のパラメーターを受け取り、条件が `true` と評価された場合にコンテンツをレンダリングします。演算子なしの条件は値が `falsy` (つまり、`null` 、 `false` 、空のコレクション、空のマップ、空の配列、空の文字列/文字列シーケンス、またはゼロに等しい数) ではない場合、 `true` と評価されます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:541
#, no-wrap
msgid ""
"{#if item.active}\n"
"  This item is active.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:544
msgid "You can also use the following operators in a condition:"
msgstr "条件では、以下の演算子を使うこともできます:"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:546
#: upstream/_versions/1.11/guides/qute-reference.adoc:688
#, no-wrap
msgid "Aliases"
msgstr "エイリアス"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:548
#, no-wrap
msgid "Precedence (higher wins)"
msgstr "優先順位 (大優先)"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:549
#, no-wrap
msgid "logical complement"
msgstr "logical complement"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:550
#, no-wrap
msgid "`!`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:552
#, no-wrap
msgid "4"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:553
#: upstream/_versions/1.11/guides/qute-reference.adoc:695
#, no-wrap
msgid "greater than"
msgstr "greater than"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:554
#: upstream/_versions/1.11/guides/qute-reference.adoc:696
#, no-wrap
msgid "`gt`, `>`"
msgstr "`gt`, `>`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:556
#: upstream/_versions/1.11/guides/qute-reference.adoc:560
#: upstream/_versions/1.11/guides/qute-reference.adoc:564
#: upstream/_versions/1.11/guides/qute-reference.adoc:568
#, no-wrap
msgid "3"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:557
#: upstream/_versions/1.11/guides/qute-reference.adoc:699
#, no-wrap
msgid "greater than or equal to"
msgstr "greater than or equal to"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:558
#: upstream/_versions/1.11/guides/qute-reference.adoc:700
#, no-wrap
msgid "`ge`, `>=`"
msgstr "`ge`, `>=`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:561
#: upstream/_versions/1.11/guides/qute-reference.adoc:703
#, no-wrap
msgid "less than"
msgstr "less than"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:562
#: upstream/_versions/1.11/guides/qute-reference.adoc:704
#, no-wrap
msgid "`lt`, `<`"
msgstr "`lt`, `<`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:565
#: upstream/_versions/1.11/guides/qute-reference.adoc:707
#, no-wrap
msgid "less than or equal to"
msgstr "less than or equal to"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:566
#: upstream/_versions/1.11/guides/qute-reference.adoc:708
#, no-wrap
msgid "`le`, `\\<=`"
msgstr "`le`, `\\<=`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:569
#, no-wrap
msgid "equals"
msgstr "equals"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:570
#, no-wrap
msgid "`eq`, `==`, `is`"
msgstr "`eq`, `==`, `is`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:572
#: upstream/_versions/1.11/guides/qute-reference.adoc:576
#, no-wrap
msgid "2"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:573
#, no-wrap
msgid "not equals"
msgstr "not equals"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:574
#, no-wrap
msgid "`ne`, `!=`"
msgstr "`ne`, `!=`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:577
#, no-wrap
msgid "logical AND (short-circuiting)"
msgstr "logical AND (short-circuiting)"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:578
#, no-wrap
msgid "`&&`, `and`"
msgstr "`&&`, `and`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:580
#: upstream/_versions/1.11/guides/qute-reference.adoc:584
#, no-wrap
msgid "1"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:581
#, no-wrap
msgid "logical OR (short-circuiting)"
msgstr "logical OR (short-circuiting)"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:581
#, no-wrap
msgid "`\\"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:582
#, no-wrap
msgid "`, `or`"
msgstr "`, `or`"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:586
#, no-wrap
msgid "A simple operator example"
msgstr "簡単な演算子の例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:592
#, no-wrap
msgid ""
"{#if item.age > 10}\n"
"  This item is very old.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:595
msgid "Multiple conditions are also supported."
msgstr "複数の条件にも対応しています。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:596
#, no-wrap
msgid "Multiple conditions example"
msgstr "複数条件の例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:602
#, no-wrap
msgid ""
"{#if item.age > 10 && item.price > 500}\n"
"  This item is very old and expensive.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:605
msgid "Precedence rules can be overridden by parentheses."
msgstr "優先順位の規則は、カッコで上書きすることができます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:606
#, no-wrap
msgid "Parentheses example"
msgstr "括弧の例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:612
#, no-wrap
msgid ""
"{#if (item.age > 10 || item.price > 500) && user.loggedIn}\n"
"  User must be logged in and item age must be > 10 or price must be > 500.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:616
msgid "You can also add any number of `else` blocks:"
msgstr "また、 `else` ブロックを何個でも追加することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:628
#, no-wrap
msgid ""
"{#if item.age > 10}\n"
"  This item is very old.\n"
"{#else if item.age > 5}\n"
"  This item is quite old.\n"
"{#else if item.age > 2}\n"
"  This item is old.\n"
"{#else}\n"
"  This item is not old at all!\n"
"{/if}\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:631
#, no-wrap
msgid "When/Switch Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:637
msgid "This section is similar to Java's `switch` or Kotlin's `when` constructs.  It matches a _tested value_ against all blocks sequentially until a condition is satisfied.  The first matching block is executed.  All other blocks are ignored (this behavior differs to the Java `switch` where a `break` statement is necessary)."
msgstr "このセクションは、Java の `switch` や Kotlin の `when` に似ています。条件が満たされるまで、 _テストされた値_ をすべてのブロックに対して順次マッチさせます。最初にマッチしたブロックが実行されます。他のすべてのブロックは無視されます(この動作は、 `break` 文が必要な Java `switch` とは異なります)。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:638
#, no-wrap
msgid "Example using the `when`/`is` name aliases"
msgstr "`when` / `is` の名前のエイリアスを使用した例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:649
#, no-wrap
msgid ""
"{#when items.size}\n"
"  {#is 1} <1>\n"
"    There is exactly one item!\n"
"  {#is > 10} <2>\n"
"    There are more than 10 items!\n"
"  {#else} <3>\n"
"    There are 2 -10 items!\n"
"{/when}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:651
msgid "If there is exactly one parameter it's tested for equality."
msgstr "パラメーターが1つだけの場合、それは等価かがテストされます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:652
msgid "It's possible to use <<when_operators,an operator>> to specify the matching logic. Unlike in the <<if_section>> nested operators are not supported."
msgstr "link:#when_operators[演算子] を使ってマッチングロジックを指定することができます。 <<if_section>> とは異なり、入れ子になった演算子はサポートされていません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:653
msgid "`else` is block is executed if no other block matches the value."
msgstr "`else` は、他のブロックが値に一致しない場合に実行されます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:654
#, no-wrap
msgid "Example using the `switch`/`case` name aliases"
msgstr "`switch` / `case` の名前エイリアスを使用した例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:663
#, no-wrap
msgid ""
"{#switch person.name}\n"
"  {#case 'John'} <1>\n"
"    Hey John!\n"
"  {#case 'Mary'}\n"
"    Hey Mary!\n"
"{/switch}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:665
msgid "`case` is an alias for `is`."
msgstr "`case` は `is` の別名です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:668
msgid "A tested value that resolves to an enum is handled specifically.  The parameters of an `is`/`case` block are not evaluated as expressions but compared with the result of `toString()` invocation upon the tested value."
msgstr "enum に解決されるテスト値は特別な扱いを受けます。 `is` / `case` ブロックのパラメーターは式として評価されるのではなく、テストされた値に対して `toString()` を呼び出した結果と比較されます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:677
#, no-wrap
msgid ""
"{#when machine.status}\n"
"  {#is ON} \n"
"    It's running. <1>\n"
"  {#is in OFF BROKEN}\n"
"    It's broken or OFF. <2>\n"
"{/when}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:679
msgid "This block is executed if `machine.status.toString().equals(\"ON\")`."
msgstr "このブロックは `machine.status.toString().equals(\"ON\")` の場合に実行されます"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:680
msgid "This block is executed if `machine.status.toString().equals(\"OFF\")` or `machine.status.toString().equals(\"BROKEN\")`."
msgstr "このブロックは、 `machine.status.toString().equals(\"OFF\")` または `machine.status.toString().equals(\"BROKEN\")` の場合に実行されます"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:682
msgid "An enum constant is validated if the tested value has a type information available and resolves to an enum type."
msgstr "列挙型定数は、テストされた値が利用可能な型情報を持ち、列挙型に解決された場合に検証されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:684
msgid "The following operators are supported in `is`/`case` block conditions:"
msgstr "`is` / `case` ブロック条件では、以下の演算子がサポートされています。"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:690
#, no-wrap
msgid "Example"
msgstr "例"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:691
#, no-wrap
msgid "not equal"
msgstr "not equal"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:692
#, no-wrap
msgid "`!=`, `not`, `ne`"
msgstr "`!=`, `not`, `ne`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:694
#, no-wrap
msgid "`{#is not 10}`,`{#case != 10}`"
msgstr "`{#is not 10}`,`{#case != 10}`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:698
#: upstream/_versions/1.11/guides/qute-reference.adoc:710
#, no-wrap
msgid "`{#case le 10}`"
msgstr "`{#case le 10}`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:702
#, no-wrap
msgid "`{#is >= 10}`"
msgstr "`{#is >= 10}`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:706
#, no-wrap
msgid "`{#is < 10}`"
msgstr "`{#is < 10}`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:711
#, no-wrap
msgid "in"
msgstr "in"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:712
#, no-wrap
msgid "`in`"
msgstr "`in`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:714
#, no-wrap
msgid "`{#is in 'foo' 'bar' 'baz'}`"
msgstr "`{#is in 'foo' 'bar' 'baz'}`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:715
#, no-wrap
msgid "not in"
msgstr "not in"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:716
#, no-wrap
msgid "`ni`,`!in`"
msgstr "`ni`,`!in`"

#. type: Table
#: upstream/_versions/1.11/guides/qute-reference.adoc:718
#, no-wrap
msgid "`{#is !in 1 2 3}`"
msgstr "`{#is !in 1 2 3}`"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:722
#, no-wrap
msgid "With Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:726
msgid "This section can be used to set the current context object.  This could be useful to simplify the template structure:"
msgstr "このセクションは、現在のコンテキストオブジェクトを設定するために使用することができます。これはテンプレート構造を単純化するのに便利かもしれません。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:733
#, no-wrap
msgid ""
"{#with item.parent}\n"
"  <h1>{name}</h1>  <1>\n"
"  <p>{description}</p> <2>\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:735
msgid "The `name` will be resolved against the `item.parent`."
msgstr "`name` は `item.parent` に対して解決されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:736
msgid "The `description` will be also resolved against the `item.parent`."
msgstr "`description` も `item.parent` に対して解決されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:738
msgid "This section might also come in handy when we'd like to avoid multiple expensive invocations:"
msgstr "このセクションは、複数の高価な呼び出しを避けたいときにも便利かもしれません。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:748
#, no-wrap
msgid ""
"{#with item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)}\n"
"  {#if this is \"fun\"} <1>\n"
"    <h1>Yay!</h1>\n"
"  {#else}\n"
"    <h1>{this} is not fun at all!</h1>\n"
"  {/if}\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:750
msgid "`this` is the result of `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)`. The method is only invoked once even though the result may be used in multiple expressions."
msgstr "`this` は `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)` の結果です。結果が複数の式で使用されても、このメソッドは一度しか呼び出されません。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:751
#, no-wrap
msgid "Let/Set Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:754
msgid "This section allows you to define named local variables:"
msgstr "このセクションでは、名前付きローカル変数を定義することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:759
#, no-wrap
msgid ""
"{#let myParent=order.item.parent}\n"
"  <h1>{myParent.name}</h1>\n"
"{/let}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:762
msgid "The section tag is also registered under the `set` alias:"
msgstr "セクションタグも `set` のエイリアスで登録されています。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:769
#, no-wrap
msgid ""
"{#set myParent=item.parent price=item.price}\n"
"  <h1>{myParent.name}</h1>\n"
"  <p>Price: {price}\n"
"{/set}\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:773
#, no-wrap
msgid "Include Section"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:776
msgid "This section can be used to include another template and possibly override some parts of the template (template inheritance)."
msgstr "このセクションでは、別のテンプレートをインクルードしたり、テンプレートの一部をオーバーライドすることができます(テンプレートの継承)。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:777
#, no-wrap
msgid "Simple Example"
msgstr "簡単な例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:789
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Simple Include</title>\n"
"</head>\n"
"<body>\n"
"  {#include foo limit=10 /} <1><2>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:791
msgid "Include a template with id `foo`. The included template can reference data from the current context."
msgstr "id `foo` でテンプレートをインクルードします。インクルードされたテンプレートは、現在のコンテキストからデータを参照することができます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:792
msgid "It's also possible to define optional parameters that can be used in the included template."
msgstr "また、インクルードされたテンプレートで使用できるオプションのパラメーターを定義することも可能です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:794
msgid "Template inheritance makes it possible to reuse template layouts."
msgstr "テンプレート継承により、テンプレートレイアウトの再利用が可能になります。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:795
#, no-wrap
msgid "Template \"base\""
msgstr "テンプレート「ベース」"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:807
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>{#insert title}Default Title{/}</title> <1>\n"
"</head>\n"
"<body>\n"
"  {#insert body}No body!{/} <2>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:809
msgid "`insert` sections are used to specify parts that could be overridden by a template that includes the given template."
msgstr "`insert` セクションは、指定されたテンプレートをインクルードするテンプレートでオーバーライドできる部分を指定するために使われます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:810
msgid "An `insert` section may define the default content that is rendered if not overridden."
msgstr "`insert` セクションは、オーバーライドされない場合にレンダリングされるデフォルトのコンテンツを定義することができます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:811
#, no-wrap
msgid "Template \"detail\""
msgstr "テンプレート「詳細」"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:822
#, no-wrap
msgid ""
"{#include base} <1>\n"
"  {#title}My Title{/title} <2>\n"
"  {#body}\n"
"    <div>\n"
"      My body.\n"
"    </div>\n"
"  {/body}\n"
"{/include}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:824
msgid "`include` section is used to specify the extended template."
msgstr "`include` セクションは、拡張テンプレートを指定するために使用されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:825
msgid "Nested blocks are used to specify the parts that should be overridden."
msgstr "入れ子になったブロックは、オーバーライドする部分を指定するために使用されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:827
msgid "Section blocks can also define an optional end tag - `{/title}`."
msgstr "セクションブロックはオプションのエンドタグを定義することもできます - `{/title}` ."

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:829
#, no-wrap
msgid "User-defined Tags"
msgstr "ユーザー定義タグ"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:833
msgid "User-defined tags can be used to include a template and optionally pass some parameters.  Let's suppose we have a template called `itemDetail.html`:"
msgstr "ユーザー定義タグは、テンプレートをインクルードし、オプションでいくつかのパラメーターを渡すために使用することができます。 `itemDetail.html` というテンプレートがあるとします。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:840
#, no-wrap
msgid ""
"{#if showImage} <1>\n"
"  {it.image} <2>\n"
"  {nested-content} <3>\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:842
msgid "`showImage` is a named parameter."
msgstr "`showImage` は名前付きパラメーターです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:843
msgid "`it` is a special key that is replaced with the first unnamed param of the tag."
msgstr "`it` は、タグの最初の名前のないパラメーターに置き換えられる特別なキーです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:844
msgid "(optional) `nested-content` is a special key that will be replaced by the content of the tag."
msgstr "(オプション) `nested-content` は、タグの内容に置き換えられる特別なキーです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:846
msgid "Now if we register this template under the name `itemDetail.html` and if we add a `UserTagSectionHelper` to the engine:"
msgstr "さて、このテンプレートを `itemDetail.html` という名前で登録し、エンジンに `UserTagSectionHelper` を追加した場合: "

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:852
#, no-wrap
msgid ""
"Engine engine = Engine.builder()\n"
"                   .addSectionHelper(new UserTagSectionHelper.Factory(\"itemDetail\",\"itemDetail.html\"))\n"
"                   .build();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:855
msgid "In Quarkus, all files from the `src/main/resources/templates/tags` are registered and monitored automatically!"
msgstr "Quarkusでは、 `src/main/resources/templates/tags` からのファイルはすべて登録され、自動的に監視されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:857
msgid "We can include the tag like this:"
msgstr "このようにタグをインクルードすることが可能です。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:869
#, no-wrap
msgid ""
"<ul>\n"
"{#for item in items}\n"
"  <li>\n"
"  {#itemDetail item showImage=true} <1>\n"
"    = <b>{item.name}</b> <2>\n"
"  {/itemDetail}\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:871
msgid "`item` is resolved to an iteration element and can be referenced using the `it` key in the tag template."
msgstr "`item` は反復要素に解決され、タグテンプレートで `it` キーを使用して参照することができます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:872
msgid "Tag content injected using the `nested-content` key in the tag template."
msgstr "タグテンプレートで `nested-content` キーを使用して注入されたタグコンテンツ。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:873
#, no-wrap
msgid "Rendering Output"
msgstr "レンダリング出力"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:879
msgid "`TemplateInstance` provides several ways to trigger the rendering and consume the result.  The most straightforward approach is represented by `TemplateInstance.render()`.  This method triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished, and returns the output.  By contrast, `TemplateInstance.renderAsync()` returns a `CompletionStage<String>` which is completed when the rendering is finished."
msgstr "`TemplateInstance` は、レンダリングをトリガーして結果を消費するためのいくつかの方法を提供しています。最も簡単な方法は `TemplateInstance.render()` です。このメソッドは同期レンダリングをトリガーし、レンダリングが終了するまで現在のスレッドをブロックして出力を返します。対照的に、 `TemplateInstance.renderAsync()` は `CompletionStage<String>` を返し、レンダリングが終了すると完了します。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:880
#, no-wrap
msgid "`TemplateInstance.renderAsync()` Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:890
#, no-wrap
msgid ""
"template.data(foo).renderAsync().whenComplete((result, failure) -> { <1>\n"
"   if (failure == null) {\n"
"      // consume the output...\n"
"   } else {\n"
"      // process failure...\n"
"   }\n"
"};\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:892
msgid "Register a callback that is executed once the rendering is finished."
msgstr "レンダリング終了後に実行されるコールバックを登録します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:897
msgid "There are also two methods that return https://smallrye.io/smallrye-mutiny/[Mutiny] types.  `TemplateInstance.createUni()` returns a new `Uni<String>` object.  If you call `createUni()` the template is not rendered right away.  Instead, every time `Uni.subscribe()` is called a new rendering of the template is triggered."
msgstr "また、 link:https://smallrye.io/smallrye-mutiny/[Mutiny] 型を返す2つのメソッドがあります。 `TemplateInstance.createUni()` は新しい `Uni<String>` オブジェクトを返します。 `createUni()` を呼び出しても、テンプレートはすぐにレンダリングされません。その代わり、 `Uni.subscribe()` が呼び出されるたびに、テンプレートの新しいレンダリングがトリガーされます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:898
#, no-wrap
msgid "`TemplateInstance.createUni()` Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:902
#, no-wrap
msgid "template.data(foo).createUni().subscribe().with(System.out::println);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:908
msgid "`TemplateInstance.createMulti()` returns a new `Multi<String>` object.  Each item represents a part/chunk of the rendered template.  Again, `createMulti()` does not trigger rendering.  Instead, every time a computation is triggered by a subscriber the template is rendered again."
msgstr "`TemplateInstance.createMulti()` は新しい `Multi<String>` オブジェクトを返します。各アイテムはレンダリングされたテンプレートの一部/チャンクを表します。繰り返しになりますが、 `createMulti()` はレンダリングをトリガしません。代わりに、サブスクライバによって実行がトリガされるたびに、テンプレートが再びレンダリングされます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:909
#, no-wrap
msgid "`TemplateInstance.createMulti()` Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:913
#, no-wrap
msgid "template.data(foo).createMulti().subscribe().with(buffer:append,buffer::flush);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:916
msgid "The template rendering is divided in two phases. During the first phase, which is asynchronous, all expressions in the template are resolved and a _result tree_ is built. In the second phase, which is synchronous, the result tree is _materialized_, i.e. one by one the result nodes emit chunks that are consumed/buffered by the specific consumer."
msgstr "テンプレートのレンダリングは2つのフェーズに分かれています。最初のフェーズ(非同期)では、テンプレート内のすべての式が解決され、 _結果ツリー_ が構築されます。同期的な第2フェーズでは、結果ツリーが _マテリアライズされ_ 、結果ノードが1つずつ、特定のコンシューマによって消費/バッファリングされるチャンクを出力します。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:917
#, no-wrap
msgid "Engine Configuration"
msgstr "エンジン設定"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:919
#, no-wrap
msgid "Template Locator"
msgstr "テンプレートロケーター"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:923
msgid "Manual registration is sometimes handy but it's also possible to register a template locator using `EngineBuilder.addLocator(Function<String, Optional<Reader>>)`.  This locator is used whenever the `Engine.getTemplate()` method is called and the engine has no template for a given id stored in the cache."
msgstr "手動登録が便利な場合もありますが、 `EngineBuilder.addLocator(Function<String, Optional<Reader>>)` を使用してテンプレートロケータを登録することも可能です。このロケータは、 `Engine.getTemplate()` メソッドが呼び出され、エンジンがキャッシュに保存されている指定された id のテンプレートを持っていない場合に使用されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:925
msgid "In Quarkus, all templates from the `src/main/resources/templates` are located automatically."
msgstr "Quarkusでは、 `src/main/resources/templates` のテンプレートはすべて自動的に配置されます。"

#. type: Title ==
#: upstream/_versions/1.11/guides/qute-reference.adoc:927
#, no-wrap
msgid "Quarkus Integration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:930
msgid "If you want to use Qute in your Quarkus application add the following dependency to your project:"
msgstr "QuarkusアプリケーションでQuteを使用する場合は、以下の依存関係をプロジェクトに追加してください。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:937
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:941
msgid "In Quarkus, a preconfigured engine instance is provided and available for injection - a bean with scope `@ApplicationScoped`, bean type `io.quarkus.qute.Engine` and qualifier `@Default` is registered automatically.  Moreover, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr "Quarkusでは、事前に設定されたエンジンインスタンスが提供され、インジェクションに利用できます。`@ApplicationScoped` スコープのBean、 `io.quarkus.qute.Engine` 型のBean、 `@Default` 修飾子が自動的に登録されます。さらに、 `src/main/resources/templates` ディレクトリーにあるすべてのテンプレートが検証され、簡単にインジェクションすることができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:947
#, no-wrap
msgid ""
"import io.quarkus.qute.Engine;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.api.ResourcePath;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:949
#, no-wrap
msgid "class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:952
#, no-wrap
msgid ""
"    @Inject \n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:955
#, no-wrap
msgid ""
"    @ResourcePath(\"detail/items2_v1.html\") <2>\n"
"    Template items2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:959
#, no-wrap
msgid ""
"    @Inject\n"
"    Engine engine; <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:961
msgid "If there is no `ResourcePath` qualifier provided, the field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:962
msgid "The `ResourcePath` qualifier instructs the container to inject a template from a path relative from `src/main/resources/templates`. In this case, the full path is `src/main/resources/templates/detail/items2_v1.html`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:963
msgid "Inject the configured `Engine` instance."
msgstr "設定された `Engine` インスタンスを注入します。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:964
#, no-wrap
msgid "Template Variants"
msgstr "テンプレートバリアント"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:968
msgid "Sometimes it's useful to render a specific variant of the template based on the content negotiation.  This can be done by setting a special attribute via `TemplateInstance.setAttribute()`:"
msgstr "コンテンツネゴシエーションに基づいてテンプレートの特定のバリアントをレンダリングすることが有用な場合があります。これは `TemplateInstance.setAttribute()` を通じて特別な属性を設定することで行うことができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:972
#, no-wrap
msgid "class MyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:975
#, no-wrap
msgid ""
"    @Inject\n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:978
#, no-wrap
msgid ""
"    @Inject\n"
"    ItemManager manager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:983
#, no-wrap
msgid ""
"    String renderItems() {\n"
"       return items.data(\"items\",manager.findItems()).setAttribute(TemplateInstance.SELECTED_VARIANT, new Variant(Locale.getDefault(),\"text/html\",\"UTF-8\")).render();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:986
msgid "When using `quarkus-resteasy-qute` the content negotiation is performed automatically. See <<resteasy_integration>>."
msgstr "`quarkus-resteasy-qute` を使用している場合、コンテンツネゴシエーションは自動的に行われます。 <<resteasy_integration>> を参照してください。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:987
#, no-wrap
msgid "Injecting Beans Directly In Templates"
msgstr "テンプレートに直接Beansを注入"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:990
msgid "A CDI bean annotated with `@Named` can be referenced in any template through the `inject` namespace:"
msgstr "`@Named` でアノテーションされた CDI Beanは、 `inject` 名前空間を通して、どのテンプレートでも参照することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:994
#, no-wrap
msgid "{inject:foo.price} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:996
msgid "First, a bean with name `foo` is found and then used as the base object."
msgstr "まず、 `foo` という名前のBeanを見つけ、それをベースオブジェクトとして使用します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:999
msgid "All expressions using the `inject` namespace are validated during build.  For the expression `inject:foo.price` the implementation class of the injected bean must either have the `price` property (e.g. a `getPrice()` method) or a matching <<template_extension_methods,template extension method>> must exist."
msgstr "`inject` 名前空間を使用するすべての式は、ビルド時に検証されます。式 `inject:foo.price` については、注入されたBeanの実装クラスに `price` プロパティー ( `getPrice()` メソッドなど) があるか、一致する link:#template_extension_methods[テンプレート拡張メソッド] が存在していなければなりません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1001
msgid "A `ValueResolver` is also generated for all beans annotated with `@Named` so that it's possible to access its properties without reflection."
msgstr "`@Named` でアノテーションされたすべてのBeanに対して `ValueResolver` も生成され、そのプロパティーにリフレクションなしでアクセスできるようになります。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1003
#, no-wrap
msgid "Type-safe Expressions"
msgstr "型安全な式"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1008
msgid "Template expressions can be optionally type-safe.  Which means that an expression is validated against the existing Java types and template extension methods.  If an invalid/incorrect expression is found then the build fails."
msgstr "テンプレート式は、オプションでタイプセーフにすることができます。これは、式が既存のJavaの型とテンプレート拡張メソッドに対して検証されることを意味します。無効な/不正確な式が見つかった場合、ビルドは失敗します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1010
msgid "For example, if there is an expression `item.name` where `item` maps to `org.acme.Item` then `Item` must have a property `name` or a matching template extension method must exist."
msgstr "例えば、 `item.name` という式があり、 `item` が `org.acme.Item` にマップされている場合、 `Item` には `name` というプロパティーがあるか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1013
msgid "An optional _parameter declaration_ is used to bind a Java type to expressions whose first part matches the parameter name.  Parameter declarations are specified directly in a template."
msgstr "オプションの _パラメーター宣言_ は、最初のパートがパラメーター名と一致する式に Java 型をバインドするために使用されます。パラメーター宣言はテンプレートで直接指定します。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1014
#, no-wrap
msgid "Parameter Declaration Example"
msgstr "パラメーター宣言の例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1029
#, no-wrap
msgid ""
"{@org.acme.Foo foo} <1>\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{title}</h1> <2>\n"
"  Hello {foo.message.toLowerCase}! <3> <4>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1031
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "パラメーター宣言 - `foo` を `org.acme.Foo` にマップします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1032
msgid "Not validated - not matching a param declaration."
msgstr "検証されていません - パラメーター宣言にマッチしません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1033
msgid "This expression is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr "この式は検証されています。`org.acme.Foo` はプロパティー `message` を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1034
msgid "Likewise, the Java type of the object resolved from `foo.message` must have a property `toLowerCase` or a matching template extension method must exist."
msgstr "同様に、 `foo.message` から解決されたオブジェクトの Java 型は、プロパティー `toLowerCase` を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1036
msgid "A value resolver is automatically generated for all types used in parameter declarations so that it's possible to access its properties without reflection."
msgstr "パラメーター宣言で使用されるすべての型に対して値リゾルバが自動的に生成され、そのプロパティーにリフレクションなしでアクセスできるようになります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1038
msgid "Method parameters of <<typesafe_templates,type-safe templates>> are automatically turned into parameter declarations."
msgstr "<<typesafe_templates,type-safe templates>> のメソッドパラメーターは、自動的にパラメーター宣言に変換されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1040
msgid "Note that sections can override names that would otherwise match a parameter declaration:"
msgstr "セクションは、パラメーター宣言にマッチする名前をオーバーライドできることに注意してください。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1057
#, no-wrap
msgid ""
"{@org.acme.Foo foo}\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{foo.message}</h1> <1>\n"
"  {#for foo in baz.foos}\n"
"    <p>Hello {foo.message}!</p> <2>\n"
"  {/for}\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1059
msgid "Validated against `org.acme.Foo`."
msgstr "`org.acme.Foo` に対して検証されています。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1060
msgid "Not validated - `foo` is overridden in the loop section."
msgstr "検証されていません - `foo` はループセクションでオーバーライドされています。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1062
#, no-wrap
msgid "Type-safe Templates"
msgstr "タイプセーフテンプレート"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1065
msgid "You can also declare your templates in your Java code.  If using <<resteasy_integration,templates in JAX-RS resources>>, you can rely on the following convention:"
msgstr "また、Java コードでテンプレートを宣言することもできます。 link:#resteasy_integration[JAX-RSリソースでテンプレート] を使用する場合は、以下の規約に従うことができます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1069
msgid "Organise your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if your `ItemResource` class references two templates `hello` and `goodbye`, place them at `/src/main/resources/templates/ItemResource/hello.txt` and `/src/main/resources/templates/ItemResource/goodbye.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr "テンプレートファイルを `/src/main/resources/templates` ディレクトリーに整理し、リソースクラスごとに 1 つのディレクトリーにグループ化します。つまり、 `ItemResource` クラスが `hello` と `goodbye` の 2 つのテンプレートを参照している場合は、 `/src/main/resources/templates/ItemResource/hello.txt` と `/src/main/resources/templates/ItemResource/goodbye.txt` に配置します。リソースクラスごとにテンプレートをグループ化することで、テンプレートへのナビゲートが容易になります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1070
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr "各リソースクラスで、`@CheckedTemplate static class Template {}` クラスを宣言します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1071
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr "リ ソ ース のテ ン プ レー ト フ ァ イ ルごとに `public static native TemplateInstance method();` を 1 つずつ宣言 し ます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1072
msgid "Use those static methods to build your template instances."
msgstr "テンプレートインスタンスを構築するには、これらの静的メソッドを使用します。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1073
#, no-wrap
msgid "ItemResource.java"
msgstr "ItemResource.java"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1077
#: upstream/_versions/1.11/guides/qute-reference.adoc:1115
#: upstream/_versions/1.11/guides/qute-reference.adoc:1134
#: upstream/_versions/1.11/guides/qute-reference.adoc:1430
#, no-wrap
msgid "package org.acme.quarkus.sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1084
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1088
#: upstream/_versions/1.11/guides/qute-reference.adoc:1119
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.api.CheckedTemplate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1091
#, no-wrap
msgid ""
"@Path(\"item\")\n"
"public class ItemResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1096
#, no-wrap
msgid ""
"    @CheckedTemplate\n"
"    public static class Templates {\n"
"        public static native TemplateInstance item(Item item); <1> <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1104
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id}\")\n"
"    @Produces(MediaType.TEXT_HTML)\n"
"    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n"
"        return Templates.item(service.findItem(id)); <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1106
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr "テンプレートを検証する為に、`templates/ItemResource/item.html` の `TemplateInstance` を用意するメソッドと、その `Item item` パラメーターを宣言します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1107
msgid "The `item` parameter is automatically turned into a <<typesafe_expressions,parameter declaration>> and so all expressions that reference this name will be validated."
msgstr "`item` パラメーターは自動的に <<typesafe_expressions,parameter declaration>> に変換されるので、この名前を参照するすべての式が検証されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1108
msgid "Make the `Item` object accessible in the template."
msgstr "テンプレート内で `Item` オブジェクトにアクセスできるようにします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1110
msgid "You can also declare a top-level Java class annotated with `@CheckedTemplate`:"
msgstr "また、 `@CheckedTemplate` でアノテーションされたトップレベルの Java クラスを宣言することもできます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1111
#, no-wrap
msgid "Top-level checked templates"
msgstr "トップレベルチェック済テンプレート"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1124
#, no-wrap
msgid ""
"@CheckedTemplate\n"
"public class Templates {\n"
"    public static native TemplateInstance hello(String name); <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1126
msgid "This declares a template with path `templates/hello.txt`. The `name` parameter is automatically turned into a <<typesafe_expressions,parameter declaration>> and so all expressions that reference this name will be validated."
msgstr "これは、パス `templates/hello.txt` を持つテンプレートを宣言します。 `name` パラメーターは自動的に link:#typesafe_expressions[パラメーター宣言] に変換されるので、この名前を参照するすべての式が検証されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1129
msgid "Then declare one `public static native TemplateInstance method();` per template file.  Use those static methods to build your template instances:"
msgstr "そして、テンプレートファイルごとに `public static native TemplateInstance method();` を宣言します。これらの静的メソッドを使用してテンプレートインスタンスを構築します。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1130
#: upstream/_versions/1.11/guides/qute-reference.adoc:1426
#, no-wrap
msgid "HelloResource.java"
msgstr "HelloResource.java"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1140
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
"import io.quarkus.qute.TemplateInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1143
#: upstream/_versions/1.11/guides/qute-reference.adoc:1441
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class HelloResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1150
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return Templates.hello(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1153
#, no-wrap
msgid "Template Extension Methods"
msgstr "テンプレート拡張メソッド"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1157
msgid "Extension methods can be used to extend the data classes with new functionality (to extend the set of accessible properties and methods) or to resolve expressions for a specific <<namespace_extension_methods,namespace>>.  For example, it is possible to add _computed properties_ and _virtual methods_."
msgstr "拡張メソッドは、データクラスを新しい機能で拡張するため(アクセス可能なプロパティーとメソッドのセットを拡張するため)、または特定の link:#namespace_extension_methods[名前空間] のための式を解決するために使用することができます。例えば、 _計算されたプロパティー_ や _仮想メソッド_ を追加することができます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1162
msgid "A value resolver is automatically generated for a method annotated with `@TemplateExtension`.  If a class is annotated with `@TemplateExtension` then a value resolver is generated for every _non-private static method_ declared on the class.  Method-level annotations override the behavior defined on the class.  Methods that do not meet the following requirements are ignored."
msgstr "値リゾルバは、 `@TemplateExtension` でアノテーションされたメソッドに対して自動的に生成されます。クラスが `@TemplateExtension` でアノテーションされている場合、そのクラスで宣言されている _プライベートではないスタティック・メソッド_ ごとに値リゾルバが生成されます。メソッドレベルのアノテーションは、クラスで定義された動作をオーバーライドします。以下の要件を満たさないメソッドは無視されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1164
msgid "A template extension method:"
msgstr "テンプレート拡張メソッドは:"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1166
msgid "must not be `private`"
msgstr "`private` であってはなりません"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1167
msgid "must be static,"
msgstr "`static` でなければなりません"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1168
msgid "must not return `void`,"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1169
msgid "must accept at least one parameter, unless the namespace is specified."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1172
msgid "The class of the first parameter is used to match the base object unless the namespace is specified.  In such case, the namespace is used to match an expression."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1179
msgid "The method name is used to match the property name by default.  However, it is possible to specify the matching name with `TemplateExtension#matchName()`.  A special constant - `TemplateExtension#ANY` - may be used to specify that the extension method matches any name.  It is also possible to match the name against a regular expression specified in `TemplateExtension#matchRegex()`.  In both cases, a string method parameter is used to pass the property name.  If both `matchName()` and `matchRegex()` are set the regular expression is used for matching."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1182
msgid "If a namespace is specified the method must declare at least one parameter and the first parameter must be a string.  If no namespace is specified the method must declare at least two parameters and the second parameter must be a string."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1183
#, no-wrap
msgid "Extension Method Example"
msgstr "拡張メソッドの例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1187
#: upstream/_versions/1.11/guides/qute-reference.adoc:1347
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1189
#, no-wrap
msgid "class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1191
#: upstream/_versions/1.11/guides/qute-reference.adoc:1352
#: upstream/_versions/1.11/guides/qute-reference.adoc:1383
#, no-wrap
msgid "    public final BigDecimal price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1196
#: upstream/_versions/1.11/guides/qute-reference.adoc:1388
#, no-wrap
msgid ""
"    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1199
#, no-wrap
msgid ""
"@TemplateExtension\n"
"class MyExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1204
#, no-wrap
msgid ""
"    static BigDecimal discountedPrice(Item item) { <1>\n"
"        return item.getPrice().multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1206
msgid "This method matches an expression with base object of the type `Item.class` and the `discountedPrice` property name."
msgstr "このメソッドは、 `Item.class` 型のベース・オブジェクトと `discountedPrice` プロパティー名を持つ式にマッチします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1208
msgid "This template extension method makes it possible to render the following template:"
msgstr "このテンプレート拡張メソッドを使うと、以下のテンプレートをレンダリングすることができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1212
#, no-wrap
msgid "{item.discountedPrice} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1214
msgid "`item` is resolved to an instance of `org.acme.Item`."
msgstr "`item` は `org.acme.Item` のインスタンスに解決されます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1215
#, no-wrap
msgid "Method Parameters"
msgstr "メソッドパラメーター"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1220
msgid "An extension method may accept multiple parameters.  If no namespace is specified the first parameter is always used to pass the base object, i.e. `org.acme.Item` in the first example.  Other parameters are resolved when rendering the template and passed to the extension method."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1221
#, no-wrap
msgid "Multiple Parameters Example"
msgstr "複数のパラメーターの例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1226
#, no-wrap
msgid ""
"@TemplateExtension\n"
"class BigDecimalExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1231
#, no-wrap
msgid ""
"    static BigDecimal scale(BigDecimal val, int scale, RoundingMode mode) { <1>\n"
"        return val.setScale(scale, mode);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1233
msgid "This method matches an expression with base object of the type `BigDecimal.class`, with the `scale` virtual method name and two virtual method parameters."
msgstr "このメソッドは、 `BigDecimal.class` 型の基底オブジェクトと、 `scale` の仮想メソッド名と 2 つの仮想メソッドパラメーターを持つ式にマッチします。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1237
#, no-wrap
msgid "{item.discountedPrice.scale(2,mode)} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1239
msgid "`item.discountedPrice` is resolved to an instance of `BigDecimal`."
msgstr "`item.discountedPrice` は `BigDecimal` のインスタンスに解決されます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1241
#, no-wrap
msgid "Namespace Extension Methods"
msgstr "名前空間拡張メソッド"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1246
msgid "If `TemplateExtension#namespace()` is specified then the extension method is used to resolve expressions with the given <<expressions,namespace>>.  Template extension methods that share the same namespace are grouped in one resolver ordered by `TemplateExtension#priority()`.  The first matching extension method is used to resolve an expression."
msgstr "`TemplateExtension#namespace()` が指定された場合、拡張メソッドが、指定された <<expressions,namespace>> を持つ式を解決するために使用されます。同じ名前空間を共有するテンプレート拡張メソッドは、 `TemplateExtension#priority()` で順に 1 つのリゾルバにグループ化されます。最初にマッチする拡張メソッドが式の解決に使用されます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1247
#, no-wrap
msgid "Namespace Extension Method Example"
msgstr "名前空間拡張メソッド例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1252
#, no-wrap
msgid ""
"@TemplateExtension(namespace = \"str\")\n"
"public static class StringExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1256
#, no-wrap
msgid ""
"   static String format(String fmt, Object... args) {\n"
"      return String.format(fmt, args);\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1261
#, no-wrap
msgid ""
"   static String reverse(String val) {\n"
"      return new StringBuilder(val).reverse().toString();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1264
msgid "These extension methods can be used as follows."
msgstr "これらの拡張メソッドは、以下のように使用することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1269
#, no-wrap
msgid ""
"{str:format('%s %s!','Hello', 'world')} <1>\n"
"{str:reverse('hello')} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1271
msgid "The output is `Hello world!`"
msgstr "出力は `Hello world!` です"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1272
msgid "The output is `olleh`"
msgstr "出力は `olleh` です"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1273
#, no-wrap
msgid "Built-in Template Extension"
msgstr "組み込みテンプレートエクステンション"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1276
msgid "Quarkus provides a set of built-in extension methods."
msgstr "Quarkusは、組み込みの拡張メソッドのセットを提供しています。"

#. type: Title =====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1277
#, no-wrap
msgid "Maps"
msgstr "マップ"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1280
msgid "`keys` or `keySet`: Returns a Set view of the keys contained in a map"
msgstr "`keys` または `keySet` : マップに含まれるキーのセットビューを返します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1281
msgid "`{#for key in map.keySet}`"
msgstr "`{#for key in map.keySet}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1283
msgid "`values`: Returns a Collection view of the values contained in a map"
msgstr "`values` : マップに含まれる値のコレクションビューを返します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1284
msgid "`{#for value in map.values}`"
msgstr "`{#for value in map.values}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1286
msgid "`size`: Returns the number of key-value mappings in a map"
msgstr "`size` : マップ内のキーと値の対応付けの個数を返します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1287
msgid "`{map.size}`"
msgstr "`{map.size}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1289
msgid "`isEmpty`: Returns true if a map contains no key-value mappings"
msgstr "`isEmpty` : マップにキーと値のマッピングが含まれていない場合に true を返します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1290
msgid "`{#if map.isEmpty}`"
msgstr "`{#if map.isEmpty}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1292
msgid "`get(key)`: Returns the value to which the specified key is mapped"
msgstr "`get(key)` : 指定したキーがマッピングされた値を返します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1293
msgid "`{map.get('foo')}`"
msgstr "`{map.get('foo')}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1295
msgid "A map value can be also accessed directly: `{map.myKey}`. Use the bracket notation for keys that are not legal identifiers: `{map['my key']}`."
msgstr "マップ値は、直接アクセスすることもできます : `{map.myKey}` 。正規の識別子ではないキーには大括弧表記を使用します: `{map['my key']}` 。"

#. type: Title =====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1296
#, no-wrap
msgid "Collections"
msgstr "コレクション"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1299
msgid "`get(index)`: Returns the element at the specified position in a list"
msgstr "`get(index)` : リストの指定した位置の要素を返す"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1300
msgid "`{list.get(0)}`"
msgstr "`{list.get(0)}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1302
msgid "A list element can be accessed directly: `{list.10}` or `{list[10]}`."
msgstr "list 要素に直接アクセスすることができます: `{list.10}` または `{list[10]}` ."

#. type: Title =====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1303
#, no-wrap
msgid "Numbers"
msgstr "数値"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1306
msgid "`mod`: Modulo operation"
msgstr "`mod` : モデューロ演算"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1307
msgid "`{#if counter.mod(5) == 0}`"
msgstr "`{#if counter.mod(5) == 0}`"

#. type: Title =====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1308
#, no-wrap
msgid "Config "
msgstr "設定"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1311
msgid "`config:<name>` or `config:[<name>]`: Returns the config value for the given property name"
msgstr "`config:<name>` 又は `config:[<name>]` : 指定したプロパティー名の設定値を返します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1312
msgid "`{config:foo}` or `{config:['property.with.dot.in.name']}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1314
msgid "`config:property(name)`: Returns the config value for the given property name; the name can be obtained dynamically by an expression"
msgstr "`config:property(name)` : 指定したプロパティー名の設定値を返します。名前は式で動的に取得することが可能です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1315
msgid "`{config:property('quarkus.foo')}` or `{config:property(foo.getPropertyName())}`"
msgstr ""

#. type: Title =====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1316
#, no-wrap
msgid "Time"
msgstr "時間"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1319
msgid "`format(pattern)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1320
msgid "`{dateTime.format('d MMM uuuu')}`"
msgstr "`{dateTime.format('d MMM uuuu')}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1322
msgid "`format(pattern,locale)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern,locale)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1323
msgid "`{dateTime.format('d MMM uuuu',myLocale)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale)}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1325
msgid "`format(pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern,locale,timeZone)` : `java.time` パッケージの一時オブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1326
msgid "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1328
msgid "`time:format(dateTime,pattern)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1329
msgid "`{time:format(myDate,'d MMM uuuu')}`"
msgstr "`{time:format(myDate,'d MMM uuuu')}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1331
msgid "`time:format(dateTime,pattern,locale)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern,locale)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1332
msgid "`{time:format(myDate,'d MMM uuuu', myLocale)}`"
msgstr "`{time:format(myDate,'d MMM uuuu', myLocale)}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1334
msgid "`time:format(dateTime,pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr "`time:format(dateTime,pattern,locale,timeZone)` : `java.time` パッケージ、 `java.util.Date` 、 `java.util.Calendar` 、 `java.lang.Number` の一時オブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1335
msgid "`{time:format(myDate,'d MMM uuuu',myTimeZoneId)}`"
msgstr "`{time:format(myDate,'d MMM uuuu',myTimeZoneId)}`"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1337
#, no-wrap
msgid "@TemplateData"
msgstr "@TemplateData"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1341
msgid "A value resolver is automatically generated for a type annotated with `@TemplateData`.  This allows Quarkus to avoid using reflection to access the data at runtime."
msgstr "値リゾルバは、 `@TemplateData` でアノテーションされた型に対して自動的に生成されます。これにより、Quarkusでは、実行時にデータにアクセスするためのリフレクションの使用を避けることができます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1343
msgid "Non-public members, constructors, static initializers, static, synthetic and void methods are always ignored."
msgstr "非publicのメンバー、コンストラクタ、静的イニシャライザ、静的メソッド、合成メソッド、ボイドメソッドは常に無視されます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1350
#, no-wrap
msgid ""
"@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1356
#, no-wrap
msgid ""
"    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1361
#, no-wrap
msgid ""
"    public BigDecimal getDiscountedPrice() {\n"
"        return price.multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1364
msgid "Any instance of `Item` can be used directly in the template:"
msgstr "`Item` の任意のインスタンスをテンプレート内で直接使用することができます。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1370
#, no-wrap
msgid ""
"{#each items} <1>\n"
"  {it.price} / {it.discountedPrice}\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1372
msgid "`items` is resolved to a list of `org.acme.Item` instances."
msgstr "`items` は `org.acme.Item` インスタンスのリストに解決されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1375
msgid "Furthermore, `@TemplateData.properties()` and `@TemplateData.ignore()` can be used to fine-tune the generated resolver.  Finally, it is also possible to specify the \"target\" of the annotation - this could be useful for third-party classes not controlled by the application:"
msgstr "さらに、 `@TemplateData.properties()` と `@TemplateData.ignore()` を使用して、生成されるリゾルバを微調整することができます。最後に、アノテーションの「ターゲット」を指定することも可能です。これは、アプリケーションによって管理されないサードパーティーのクラスに便利です。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1381
#, no-wrap
msgid ""
"@TemplateData(target = BigDecimal.class)\n"
"@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1395
#, no-wrap
msgid ""
"{#each items} <1>\n"
"  {it.price.setScale(2, rounding)} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1397
msgid "The generated value resolver knows how to invoke the `BigDecimal.setScale()` method."
msgstr "生成された値リゾルバは、 `BigDecimal.setScale()` メソッドを呼び出す方法を知っています。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1399
#, no-wrap
msgid "RESTEasy Integration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1403
msgid "If you want to use Qute in your JAX-RS application, then depending on which JAX-RS stack you are using, you'll need to register the proper extension first.  If you are using the traditional `quakus-resteasy` extension, then in your `pom.xml` file, add:"
msgstr "JAX-RSアプリケーションでQuteを使用したい場合、使用しているJAX-RSスタックによっては、まず適切なエクステンションを登録する必要があります。トラディショナルな `quakus-resteasy` のエクステンションを使用している場合は、 以下を `pom.xml` ファイルに追加してください。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1410
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1413
msgid "If instead you are using RESTEasy Reactive via the `quarkus-resteasy-reactive` extension, then in your `pom.xml` file, add:"
msgstr "代わりに `quarkus-resteasy-reactive` エクステンションを介して RESTEasy Reactive を使用している場合は、 次を `pom.xml` ファイルに追加してください。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1420
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1423
msgid "Both of these extensions register a special `ContainerResponseFilter` implementation which enables resource methods to return a `TemplateInstance`, thus freeing users of having to take care of all necessary internal steps."
msgstr "これらのエクステンションはどちらも、リソースメソッドが `TemplateInstance` を返すことを可能にする特別な `ContainerResponseFilter` 実装を登録しています。そのため、ユーザーは必要なすべての内部ステップを処理する必要がなくなります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1425
msgid "The end result is that a using Qute within a JAX-RS resource may look as simple as:"
msgstr "最終的には、JAX-RSリソース内でQuteを使用すると、次のようにシンプルに見えるかもしれません。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1435
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1438
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1444
#, no-wrap
msgid ""
"    @Inject\n"
"    Template hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1451
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return hello.data(\"name\", name); <2> <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1453
msgid "If there is no `@ResourcePath` qualifier provided, the field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "`@ResourcePath` の修飾子が指定されていない場合は、フィールド名がテンプレートの場所を特定するために使用されます。この特定のケースでは、パスが `templates/hello.txt` であるテンプレートを注入しています。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1454
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr "`Template.data()` は、実際のレンダリングがトリガーされる前にカスタマイズできる新しいテンプレートインスタンスを返します。この場合、nameの値をキー `name` にセットします。データマップはレンダリング中にアクセス可能です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1455
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr "レンダリングをトリガーしないことに注意してください - これは特別な `ContainerResponseFilter` の実装によって自動的に行われます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1457
msgid "Users are encouraged to use <<typesafe_templates,Type-safe templates>> that help to organize the templates for a specific JAX-RS resource and enable <<typesafe_expressions,type-safe expressions>> automatically."
msgstr "ユーザーは、特定のJAX-RSリソースのテンプレートを整理し、自動的に <<typesafe_expressions,タイプセーフ表現>> を有効にするのに役立つ <<typesafe_templates,タイプセーフテンプレート>> を使用することが推奨されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1460
msgid "The content negotiation is performed automatically.  The resulting output depends on the `Accept` header received from the client."
msgstr "コンテンツネゴシエーションは自動的に実行されます。結果の出力はクライアントから受け取った `Accept` ヘッダーに依存します。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1465
#: upstream/_versions/1.11/guides/qute-reference.adoc:1486
#, no-wrap
msgid ""
"@Path(\"/detail\")\n"
"class DetailResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1468
#, no-wrap
msgid ""
"    @Inject\n"
"    Template item; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1475
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.TEXT_HTML, MediaType.TEXT_PLAIN })\n"
"    public TemplateInstance item() {\n"
"        return item.data(\"myItem\", new Item(\"Alpha\", 1000)); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1477
msgid "Inject a variant template with base path derived from the injected field - `src/main/resources/templates/item`."
msgstr "注入されたフィールドから派生したベースパスを持つバリアントテンプレートを注入します - `src/main/resources/templates/item`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1478
msgid "For `text/plain` the `src/main/resources/templates/item.txt` template is used. For `text/html` the `META-INF/resources/templates/item.html` template is used."
msgstr "`text/plain` では `src/main/resources/templates/item.txt` のテンプレートが使用されます。 `text/html` では `META-INF/resources/templates/item.html` のテンプレートが使用されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1480
msgid "The `RestTemplate` util class can be used to obtain a template instance from a body of a JAX-RS resource method:"
msgstr "`RestTemplate` utilクラスは、JAX-RSリソースメソッドのボディからテンプレートインスタンスを取得するために使用することができます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1481
#, no-wrap
msgid "RestTemplate Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1493
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.TEXT_HTML, MediaType.TEXT_PLAIN })\n"
"    public TemplateInstance item() {\n"
"        return RestTemplate.data(\"myItem\", new Item(\"Alpha\", 1000)); <1>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1495
msgid "The name of the template is derived from the resource class and method name; `DetailResource/item` in this particular case."
msgstr "テンプレートの名前は、リソースクラスとメソッド名から派生しています。このケースでは、`DetailResource/item` です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1497
msgid "Unlike with `@Inject` the templates obtained via `RestTemplate` are not validated, i.e. the build does not fail if a template does not exist."
msgstr "`@Inject` とは異なり、 `RestTemplate` 経由で取得したテンプレートは検証されません。即ち、テンプレートが存在しなくてもビルドは失敗しません。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1498
#, no-wrap
msgid "Development Mode"
msgstr "開発モード"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1501
msgid "In the development mode, all files located in `src/main/resources/templates` are watched for changes and modifications are immediately visible."
msgstr "開発モードでは、 `src/main/resources/templates` にあるすべてのファイルの変更が監視され、変更はすぐに表示されます。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1502
#, no-wrap
msgid "Type-safe Message Bundles"
msgstr "タイプセーフメッセージバンドル"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1504
#, no-wrap
msgid "Basic Concepts"
msgstr "基本概念"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1510
msgid "The basic idea is that every message is potentially a very simple template.  In order to prevent type errors a message is defined as an annotated method of a *message bundle interface*.  Quarkus generates the *message bundle implementation* at build time.  Subsequently, the bundles can be used at runtime:"
msgstr "基本的な考え方は、すべてのメッセージは潜在的に非常にシンプルなテンプレートであるということです。型エラーを防ぐために、メッセージは *メッセージバンドルインターフェース* のアノテーションメソッドとして定義されます。Quarkusは、ビルド時に *メッセージバンドルの実装を* 生成します。そのため、実行時にバンドルを使用することができます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1512
msgid "Directly in your code via `io.quarkus.qute.i18n.MessageBundles#get()`; e.g. `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"
msgstr "`io.quarkus.qute.i18n.MessageBundles#get()` を経由し、直接コードの中で使用。例: `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1513
msgid "Injected in your beans via `@Inject`; e.g. `@Inject AppMessages`"
msgstr "`@Inject` であなたのBeanに注入。 例: `@Inject AppMessages`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1514
msgid "Referenced in the templates via the message bundle namespace:"
msgstr "メッセージ・バンドル名前空間を介してテンプレート内で参照。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1519
#, no-wrap
msgid ""
" {msg:hello_name('Lucie')} <1> <2> <3>\n"
" {msg:message(myKey,'Lu')} <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1521
msgid "`msg` is the default namespace."
msgstr "`msg` がデフォルトの名前空間です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1522
msgid "`hello_name` is the message key."
msgstr "`hello_name` がメッセージキーです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1523
msgid "`Lucie` is the parameter of the message bundle interface method."
msgstr "`Lucie` はメッセージバンドルインターフェースメソッドのパラメーターです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1524
msgid "It is also possible to obtain a localized message for a key resolved at runtime using a reserved key `message`. The validation is skipped in this case though."
msgstr "また、予約されたキー `message` を使用して、実行時に解決されたキーのローカライズされたメッセージを取得することも可能である。この場合、検証はスキップされます。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1525
#, no-wrap
msgid "Message Bundle Interface Example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1530
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Message;\n"
"import io.quarkus.qute.i18n.MessageBundle;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1533
#, no-wrap
msgid ""
"@MessageBundle <1>\n"
"public interface AppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1537
#, no-wrap
msgid ""
"    @Message(\"Hello {name}!\") <2>\n"
"    String hello_name(String name); <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1539
msgid "Denotes a message bundle interface. The bundle name is defaulted to `msg` and is used as a namespace in templates expressions, e.g. `{msg:hello_name}`."
msgstr "メッセージバンドルインターフェイスを表します。 バンドル名のデフォルトは `msg` で、テンプレート式の名前空間として使用されます。例: `{msg:hello_name}`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1540
msgid "Each method must be annotated with `@Message`. The value is a qute template."
msgstr "各メソッドは `@Message` でアノテーションする必要があります。値は qute テンプレートです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1541
msgid "The method parameters can be used in the template."
msgstr "メソッドのパラメーターはテンプレートで使用することができます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1542
#, no-wrap
msgid "Bundle Name and Message Keys"
msgstr "バンドル名とメッセージキー"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1550
msgid "Keys are used directly in templates.  The bundle name is used as a namespace in template expressions.  The `@MessageBundle` can be used to define the default strategy used to generate message keys from method names.  However, the `@Message` can override this strategy and even define a custom key.  By default, the annotated element's name is used as-is.  Other possibilities are:"
msgstr "キーはテンプレート内で直接使用されます。バンドル名はテンプレート式の名前空間として使用されます。 `@MessageBundle` は、メソッド名からメッセージキーを生成するために使用されるデフォルトのストラテジーを定義するために使用することができます。しかし、 `@Message` はこのストラテジーをオーバーライドし、カスタム・キーを定義することもできます。デフォルトでは、アノテーションされた要素の名前がそのまま使用されます。他の可能性としては、以下のようなものがあります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1552
msgid "De-camel-cased and hyphenated; e.g. `helloName()` -> `hello-name`"
msgstr "キャメルケースを止め、ハイフン化したもの。 例: `helloName()` -> `hello-name`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1553
msgid "De-camel-cased and parts separated by underscores; e.g. `helloName()` -> `hello_name`."
msgstr "キャメルケースを止め、パーツをアンダースコア区切りとしたもの。例: `helloName()` -> `hello_name`"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1554
#, no-wrap
msgid "Validation"
msgstr "バリデーション"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1557
msgid "All message bundle templates are validated:"
msgstr "すべてのメッセージバンドルテンプレートは検証されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1558
msgid "All expressions without a namespace must map to a parameter; e.g. `Hello {foo}` -> the method must have a param of name `foo`"
msgstr "名前空間を持たない全ての式はパラメーターにマッピングする必要があります。例: `Hello {foo}` の場合、メソッドは `foo` という名前のパラメータを持つ必要があります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1559
msgid "All expressions are validated against the types of the parameters; e.g. `Hello {foo.bar}` where the parameter `foo` is of type `org.acme.Foo` -> `org.acme.Foo` must have a property of name `bar`"
msgstr "すべての式はパラメーターの型に対して検証されます。例: `Hello {foo.bar}` で、パラメーター `foo` の型が `org.acme.Foo` の場合、 `org.acme.Foo` は `bar` という名前のプロパティーを持つ必要があります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1561
msgid "A warning message is logged for each _unused_ parameter."
msgstr "_未使用の_ パラメーターごとに警告メッセージが記録されます。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1562
msgid "Expressions that reference a message bundle method, such as `{msg:hello(item.name)}`, are validated too."
msgstr "`{msg:hello(item.name)}` のようなメッセージバンドルメソッドを参照する式も検証されます。"

#. type: Title ====
#: upstream/_versions/1.11/guides/qute-reference.adoc:1563
#, no-wrap
msgid "Localization"
msgstr "ローカライゼーション"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1568
msgid "The default locale of the Java Virtual Machine used to *build the application* is used for the `@MessageBundle` interface by default.  However, the `io.quarkus.qute.i18n.MessageBundle#locale()` can be used to specify a custom locale.  Additionally, there are two ways to define a localized bundle:"
msgstr "*アプリケーションのビルド* に使用する Java 仮想マシンのデフォルトのロケールは、デフォルトでは `@MessageBundle` インターフェイスに使用されます。ただし、 `io.quarkus.qute.i18n.MessageBundle#locale()` を使用してカスタムロケールを指定することができます。さらに、ローカライズされたバンドルを定義するには、2 つの方法があります。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1570
msgid "Create an interface that extends the default interface that is annotated with `@Localized`"
msgstr "`@Localized` でアノテーションされたデフォルトのインターフェイスを拡張するインターフェイスを作成します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1571
msgid "Create an UTF-8 encoded file located in `src/main/resources/messages`; e.g. `msg_de.properties`."
msgstr "`src/main/resources/messages` に UTF-8 エンコードされたファイルを作成します。例: `msg_de.properties`"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1573
msgid "A localized interface is the preferred solution mainly due to the possibility of easy refactoring."
msgstr "ローカライズされたインターフェイスは、主にリファクタリングの容易性から、好ましい解決策です。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1574
#, no-wrap
msgid "Localized Interface Example"
msgstr "ローカライズされたインターフェースの例"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1579
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Localized;\n"
"import io.quarkus.qute.i18n.Message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1582
#, no-wrap
msgid ""
"@Localized(\"de\") <1>\n"
"public interface GermanAppMessages extends AppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1587
#, no-wrap
msgid ""
"    @Override\n"
"    @Message(\"Hallo {name}!\") <2>\n"
"    String hello_name(String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1589
msgid "The value is the locale tag string (IETF)."
msgstr "値はロケールタグ文字列(IETF)です。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1590
msgid "The value is the localized template."
msgstr "値はローカライズされたテンプレートです。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1598
msgid "Message bundle files must be encoded in UTF-8.  The file name consists of the relevant bundle name (e.g. `msg`) and underscore followed by the locate tag (IETF).  The file format is very simple: each line represents either a key/value pair with the equals sign used as a separator or a comment (line starts with `#`).  Keys are mapped to method names from the corresponding message bundle interface.  Values represent the templates normally defined by `io.quarkus.qute.i18n.Message#value()`.  We use `.properties` suffix in our example because most IDEs and text editors support syntax highlighting of `.properties` files.  But in fact, the suffix could be anything."
msgstr "メッセージバンドルファイルはUTF-8でエンコードされている必要があります。ファイル名は、関連するバンドル名(例: `msg` )とアンダースコア、続くロケートタグ(IETF)から構成されます。フ ァ イ ル形式は非常に単純です。各行は、キーと値のペアを表すもので、等号をセパレータとして使用するか、コメント(行頭が `#` で始まる)を使用します。キーは、対応するメッセージ・バンドル・インターフェースのメソッド名にマッピングされています。値は、通常 `io.quarkus.qute.i18n.Message#value()` で定義されているテンプレートを表します。この例では `.properties` サフィックスを使用しています。これは、ほとんどの IDE やテキスト・エディタが `.properties` ファイルのシンタックス・ハイライトをサポートしているからです。しかし、実際には、サフィックスは何でも構いません。"

#. type: Block title
#: upstream/_versions/1.11/guides/qute-reference.adoc:1599
#, no-wrap
msgid "Localized File Example - `msg_de.properties`"
msgstr "ローカライズされたファイルの例 - `msg_de.properties`"

#. type: delimited block -
#: upstream/_versions/1.11/guides/qute-reference.adoc:1603
#, no-wrap
msgid "hello_name=Hallo {name}! <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1605
msgid "Each line in a localized file represents a message template."
msgstr "ローカライズされたファイルの各行は、メッセージテンプレートを表します。"

#. type: Plain text
#: upstream/_versions/1.11/guides/qute-reference.adoc:1606
msgid "Keys and values are separated by the equals sign."
msgstr "キーと値は等号で区切られています。"

#. type: Title ===
#: upstream/_versions/1.11/guides/qute-reference.adoc:1607
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"
